(dp1
S'output'
p2
S"<type 'exceptions.IOError'> [Errno 2] No such file or directory: 'C:/Users/Bussiere/Dropbox/Projets/jackpoint/web2py/applications/README\\\\DISABLED'"
p3
sS'layer'
p4
S'C:\\Users\\Bussiere\\Dropbox\\Projets\\jackpoint\\web2py\\applications\\admin\\controllers/default.py'
p5
sS'code'
p6
S'# coding: utf8\n\nEXPERIMENTAL_STUFF = True\n\nif EXPERIMENTAL_STUFF:\n    is_mobile = request.user_agent().is_mobile\n    if is_mobile:\n        response.view = response.view.replace(\'default/\',\'default.mobile/\')\n        response.menu = []\n\nfrom gluon.admin import *\nfrom gluon.fileutils import abspath, read_file, write_file\nfrom glob import glob\nimport shutil\nimport platform\n\nif DEMO_MODE and request.function in [\'change_password\',\'pack\',\'pack_plugin\',\'upgrade_web2py\',\'uninstall\',\'cleanup\',\'compile_app\',\'remove_compiled_app\',\'delete\',\'delete_plugin\',\'create_file\',\'upload_file\',\'update_languages\',\'reload_routes\']:\n    session.flash = T(\'disabled in demo mode\')\n    redirect(URL(\'site\'))\n\nif not is_manager() and request.function in [\'change_password\',\'upgrade_web2py\']:\n    session.flash = T(\'disabled in multi user mode\')\n    redirect(URL(\'site\'))\n\nif FILTER_APPS and request.args(0) and not request.args(0) in FILTER_APPS:\n    session.flash = T(\'disabled in demo mode\')\n    redirect(URL(\'site\'))\n\ndef safe_open(a,b):\n    if DEMO_MODE and \'w\' in b:\n        class tmp:\n            def write(self,data): pass\n        return tmp()\n    return open(a,b)\n\ndef safe_read(a, b=\'r\'):\n    safe_file = safe_open(a, b)\n    try:\n        return safe_file.read()\n    finally:\n        safe_file.close()\n\ndef safe_write(a, value, b=\'w\'):\n    safe_file = safe_open(a, b)\n    try:\n        safe_file.write(value)\n    finally:\n        safe_file.close()\n\ndef get_app(name=None):\n    app = name or request.args(0)\n    if app and (not MULTI_USER_MODE or db(db.app.name==app)(db.app.owner==auth.user.id).count()):\n        return app\n    session.flash = \'App does not exist or your are not authorized\'\n    redirect(URL(\'site\'))\n\ndef index():\n    """ Index handler """\n\n    send = request.vars.send\n    if DEMO_MODE:\n        session.authorized = True\n        session.last_time = t0\n    if not send:\n        send = URL(\'site\')\n    if session.authorized:\n        redirect(send)\n    elif request.vars.password:\n        if verify_password(request.vars.password):\n            session.authorized = True\n            login_record(True)\n\n            if CHECK_VERSION:\n                session.check_version = True\n            else:\n                session.check_version = False\n\n            session.last_time = t0\n            if isinstance(send, list):  # ## why does this happen?\n                send = str(send[0])\n\n            redirect(send)\n        else:\n            times_denied = login_record(False)\n            if times_denied >= allowed_number_of_attempts:\n                response.flash = \\\n                    T(\'admin disabled because too many invalid login attempts\')\n            elif times_denied == allowed_number_of_attempts - 1:\n                response.flash = \\\n                    T(\'You have one more login attempt before you are locked out\')\n            else:\n                response.flash = T(\'invalid password.\')\n    return dict(send=send)\n\n\ndef check_version():\n    """ Checks if web2py is up to date """\n\n    session.forget()\n    session._unlock(response)\n\n    new_version, version_number = check_new_version(request.env.web2py_version,\n                                    WEB2PY_VERSION_URL)\n\n    if new_version == -1:\n        return A(T(\'Unable to check for upgrades\'), _href=WEB2PY_URL)\n    elif new_version != True:\n        return A(T(\'web2py is up to date\'), _href=WEB2PY_URL)\n    elif platform.system().lower() in (\'windows\',\'win32\',\'win64\') and os.path.exists("web2py.exe"):\n        return SPAN(\'You should upgrade to version %s\' % version_number)\n    else:\n        return sp_button(URL(\'upgrade_web2py\'), T(\'upgrade now\')) \\\n          + XML(\' <strong class="upgrade_version">%s</strong>\' % version_number)\n\n\ndef logout():\n    """ Logout handler """\n    session.authorized = None\n    if MULTI_USER_MODE:\n        redirect(URL(\'user/logout\'))\n    redirect(URL(\'index\'))\n\n\ndef change_password():\n\n    if session.pam_user:\n        session.flash = T(\'PAM authenticated user, cannot change password here\')\n        redirect(URL(\'site\'))\n    form=SQLFORM.factory(Field(\'current_admin_password\',\'password\'),\n                         Field(\'new_admin_password\',\'password\',requires=IS_STRONG()),\n                         Field(\'new_admin_password_again\',\'password\'))\n    if form.accepts(request.vars):\n        if not verify_password(request.vars.current_admin_password):\n            form.errors.current_admin_password = T(\'invalid password\')\n        elif form.vars.new_admin_password != form.vars.new_admin_password_again:\n            form.errors.new_admin_password_again = T(\'no match\')\n        else:\n            path = abspath(\'parameters_%s.py\' % request.env.server_port)\n            safe_write(path, \'password="%s"\' % CRYPT()(request.vars.new_admin_password)[0])\n            session.flash = T(\'password changed\')\n            redirect(URL(\'site\'))\n    return dict(form=form)\n\ndef site():\n    """ Site handler """\n\n    myversion = request.env.web2py_version\n\n    # Shortcut to make the elif statements more legible\n    file_or_appurl = \'file\' in request.vars or \'appurl\' in request.vars\n\n    if DEMO_MODE:\n        pass\n\n    elif request.vars.filename and not \'file\' in request.vars:\n        # create a new application\n        appname = cleanpath(request.vars.filename).replace(\'.\', \'_\')\n        if app_create(appname, request):\n            if MULTI_USER_MODE:\n                db.app.insert(name=appname,owner=auth.user.id)\n            session.flash = T(\'new application "%s" created\', appname)\n            redirect(URL(\'design\',args=appname))\n        else:\n            session.flash = \\\n                T(\'unable to create application "%s" (it may exist already)\', request.vars.filename)\n        redirect(URL(r=request))\n\n    elif file_or_appurl and not request.vars.filename:\n        # can\'t do anything without an app name\n        msg = \'you must specify a name for the uploaded application\'\n        response.flash = T(msg)\n\n    elif file_or_appurl and request.vars.filename:\n        # fetch an application via URL or file upload\n        f = None\n        if request.vars.appurl is not \'\':\n            try:\n                f = urllib.urlopen(request.vars.appurl)\n            except Exception, e:\n                session.flash = DIV(T(\'Unable to download app because:\'),PRE(str(e)))\n                redirect(URL(r=request))\n            fname = request.vars.appurl\n        elif request.vars.file is not \'\':\n            f = request.vars.file.file\n            fname = request.vars.file.filename\n\n        if f:\n            appname = cleanpath(request.vars.filename).replace(\'.\', \'_\')\n            installed = app_install(appname, f, request, fname,\n                                    overwrite=request.vars.overwrite_check)\n        if f and installed:\n            msg = \'application %(appname)s installed with md5sum: %(digest)s\'\n            session.flash = T(msg, dict(appname=appname,\n                                        digest=md5_hash(installed)))\n        elif f and request.vars.overwrite_check:\n            msg = \'unable to install application "%(appname)s"\'\n            session.flash = T(msg, dict(appname=request.vars.filename))\n\n        else:\n            msg = \'unable to install application "%(appname)s"\'\n            session.flash = T(msg, dict(appname=request.vars.filename))\n\n        redirect(URL(r=request))\n\n    regex = re.compile(\'^\\w+$\')\n\n    if is_manager():\n        apps = [f for f in os.listdir(apath(r=request)) if regex.match(f)]\n    else:\n        apps = [f.name for f in db(db.app.owner==auth.user_id).select()]\n\n    if FILTER_APPS:\n        apps = [f for f in apps if f in FILTER_APPS]\n\n    apps = sorted(apps,lambda a,b:cmp(a.upper(),b.upper()))\n\n    return dict(app=None, apps=apps, myversion=myversion)\n\n\ndef pack():\n    app = get_app()\n\n    if len(request.args) == 1:\n        fname = \'web2py.app.%s.w2p\' % app\n        filename = app_pack(app, request)\n    else:\n        fname = \'web2py.app.%s.compiled.w2p\' % app\n        filename = app_pack_compiled(app, request)\n\n    if filename:\n        response.headers[\'Content-Type\'] = \'application/w2p\'\n        disposition = \'attachment; filename=%s\' % fname\n        response.headers[\'Content-Disposition\'] = disposition\n        return safe_read(filename, \'rb\')\n    else:\n        session.flash = T(\'internal error\')\n        redirect(URL(\'site\'))\n\ndef pack_plugin():\n    app = get_app()\n    if len(request.args) == 2:\n        fname = \'web2py.plugin.%s.w2p\' % request.args[1]\n        filename = plugin_pack(app, request.args[1], request)\n    if filename:\n        response.headers[\'Content-Type\'] = \'application/w2p\'\n        disposition = \'attachment; filename=%s\' % fname\n        response.headers[\'Content-Disposition\'] = disposition\n        return safe_read(filename, \'rb\')\n    else:\n        session.flash = T(\'internal error\')\n        redirect(URL(\'plugin\',args=request.args))\n\ndef upgrade_web2py():\n    if \'upgrade\' in request.vars:\n        (success, error) = upgrade(request)\n        if success:\n            session.flash = T(\'web2py upgraded; please restart it\')\n        else:\n            session.flash = T(\'unable to upgrade because "%s"\', error)\n        redirect(URL(\'site\'))\n    elif \'noupgrade\' in request.vars:\n        redirect(URL(\'site\'))\n    return dict()\n\ndef uninstall():\n    app = get_app()\n    if \'delete\' in request.vars:\n        if MULTI_USER_MODE:\n            if is_manager() and db(db.app.name==app).delete():\n                pass\n            elif db(db.app.name==app)(db.app.owner==auth.user.id).delete():\n                pass\n            else:\n                session.flash = T(\'no permission to uninstall "%s"\', app)\n                redirect(URL(\'site\'))\n        if app_uninstall(app, request):\n            session.flash = T(\'application "%s" uninstalled\', app)\n        else:\n            session.flash = T(\'unable to uninstall "%s"\', app)\n        redirect(URL(\'site\'))\n    elif \'nodelete\' in request.vars:\n        redirect(URL(\'site\'))\n    return dict(app=app)\n\n\ndef cleanup():\n    app = get_app()\n    clean = app_cleanup(app, request)\n    if not clean:\n        session.flash = T("some files could not be removed")\n    else:\n        session.flash = T(\'cache, errors and sessions cleaned\')\n\n    redirect(URL(\'site\'))\n\n\ndef compile_app():\n    app = get_app()\n    c = app_compile(app, request)\n    if not c:\n        session.flash = T(\'application compiled\')\n    else:\n        session.flash = DIV(T(\'Cannot compile: there are errors in your app:\'),\n                              CODE(c))\n    redirect(URL(\'site\'))\n\n\ndef remove_compiled_app():\n    """ Remove the compiled application """\n    app = get_app()\n    remove_compiled_application(apath(app, r=request))\n    session.flash = T(\'compiled application removed\')\n    redirect(URL(\'site\'))\n\ndef delete():\n    """ Object delete handler """\n    app = get_app()\n    filename = \'/\'.join(request.args)\n    sender = request.vars.sender\n\n    if isinstance(sender, list):  # ## fix a problem with Vista\n        sender = sender[0]\n\n    if \'nodelete\' in request.vars:\n        redirect(URL(sender))\n    elif \'delete\' in request.vars:\n        try:\n            os.unlink(apath(filename, r=request))\n            session.flash = T(\'file "%(filename)s" deleted\',\n                              dict(filename=filename))\n        except Exception:\n            session.flash = T(\'unable to delete file "%(filename)s"\',\n                              dict(filename=filename))\n        redirect(URL(sender))\n    return dict(filename=filename, sender=sender)\n\ndef enable():\n    app = get_app()\n    filename = os.path.join(apath(app, r=request),\'DISABLED\')\n    if os.path.exists(filename):\n        os.unlink(filename)\n        return SPAN(T(\'Disable\'),_style=\'color:green\')\n    else:\n        open(filename,\'wb\').write(time.ctime())\n        return SPAN(T(\'Enable\'),_style=\'color:red\')\n\ndef peek():\n    """ Visualize object code """\n    app = get_app()\n    filename = \'/\'.join(request.args)\n    try:\n        data = safe_read(apath(filename, r=request)).replace(\'\\r\',\'\')\n    except IOError:\n        session.flash = T(\'file does not exist\')\n        redirect(URL(\'site\'))\n\n    extension = filename[filename.rfind(\'.\') + 1:].lower()\n\n    return dict(app=request.args[0],\n                filename=filename,\n                data=data,\n                extension=extension)\n\n\ndef test():\n    """ Execute controller tests """\n    app = get_app()\n    if len(request.args) > 1:\n        file = request.args[1]\n    else:\n        file = \'.*\\.py\'\n\n    controllers = listdir(apath(\'%s/controllers/\' % app, r=request), file + \'$\')\n\n    return dict(app=app, controllers=controllers)\n\ndef keepalive():\n    return \'\'\n\ndef search():\n    keywords=request.vars.keywords or \'\'\n    app = get_app()\n    def match(filename,keywords):\n        filename=os.path.join(apath(app, r=request),filename)\n        if keywords in read_file(filename,\'rb\'):\n            return True\n        return False\n    path = apath(request.args[0], r=request)\n    files1 = glob(os.path.join(path,\'*/*.py\'))\n    files2 = glob(os.path.join(path,\'*/*.html\'))\n    files3 = glob(os.path.join(path,\'*/*/*.html\'))\n    files=[x[len(path)+1:].replace(\'\\\\\',\'/\') for x in files1+files2+files3 if match(x,keywords)]\n    return response.json({\'files\':files})\n\ndef edit():\n    """ File edit handler """\n    # Load json only if it is ajax edited...\n    app = get_app()\n    filename = \'/\'.join(request.args)\n    # Try to discover the file type\n    if filename[-3:] == \'.py\':\n        filetype = \'python\'\n    elif filename[-5:] == \'.html\':\n        filetype = \'html\'\n    elif filename[-5:] == \'.load\':\n        filetype = \'html\'\n    elif filename[-4:] == \'.css\':\n        filetype = \'css\'\n    elif filename[-3:] == \'.js\':\n        filetype = \'js\'\n    else:\n        filetype = \'html\'\n\n    # ## check if file is not there\n\n    path = apath(filename, r=request)\n\n    if (\'revert\' in request.vars) and os.path.exists(path + \'.bak\'):\n        try:\n            data = safe_read(path + \'.bak\')\n            data1 = safe_read(path)\n        except IOError:\n            session.flash = T(\'Invalid action\')\n            if \'from_ajax\' in request.vars:\n                 return response.json({\'error\': str(T(\'Invalid action\'))})\n            else:\n                redirect(URL(\'site\'))\n\n        safe_write(path, data)\n        file_hash = md5_hash(data)\n        saved_on = time.ctime(os.stat(path)[stat.ST_MTIME])\n        safe_write(path + \'.bak\', data1)\n        response.flash = T(\'file "%s" of %s restored\', (filename, saved_on))\n    else:\n        try:\n            data = safe_read(path)\n        except IOError:\n            session.flash = T(\'Invalid action\')\n            if \'from_ajax\' in request.vars:\n                return response.json({\'error\': str(T(\'Invalid action\'))})\n            else:\n                redirect(URL(\'site\'))\n\n        file_hash = md5_hash(data)\n        saved_on = time.ctime(os.stat(path)[stat.ST_MTIME])\n\n        if request.vars.file_hash and request.vars.file_hash != file_hash:\n            session.flash = T(\'file changed on disk\')\n            data = request.vars.data.replace(\'\\r\\n\', \'\\n\').strip() + \'\\n\'\n            safe_write(path + \'.1\', data)\n            if \'from_ajax\' in request.vars:\n                return response.json({\'error\': str(T(\'file changed on disk\')),\n                                      \'redirect\': URL(\'resolve\',\n                                                      args=request.args)})\n            else:\n                redirect(URL(\'resolve\', args=request.args))\n        elif request.vars.data:\n            safe_write(path + \'.bak\', data)\n            data = request.vars.data.replace(\'\\r\\n\', \'\\n\').strip() + \'\\n\'\n            safe_write(path, data)\n            file_hash = md5_hash(data)\n            saved_on = time.ctime(os.stat(path)[stat.ST_MTIME])\n            response.flash = T(\'file saved on %s\', saved_on)\n\n    data_or_revert = (request.vars.data or request.vars.revert)\n\n    # Check compile errors\n    highlight = None\n    if filetype == \'python\' and request.vars.data:\n        import _ast\n        try:\n            code = request.vars.data.rstrip().replace(\'\\r\\n\',\'\\n\')+\'\\n\'\n            compile(code, path, "exec", _ast.PyCF_ONLY_AST)\n        except Exception, e:\n            start = sum([len(line)+1 for l, line\n                            in enumerate(request.vars.data.split("\\n"))\n                            if l < e.lineno-1])\n            if e.text and e.offset:\n                offset = e.offset - (len(e.text) - len(e.text.splitlines()[-1]))\n            else:\n                offset = 0\n            highlight = {\'start\': start, \'end\': start + offset + 1}\n            try:\n                ex_name = e.__class__.__name__\n            except:\n                ex_name = \'unknown exception!\'\n            response.flash = DIV(T(\'failed to compile file because:\'), BR(),\n                                 B(ex_name), T(\' at line %s\') % e.lineno,\n                                 offset and T(\' at char %s\') % offset or \'\',\n                                 PRE(str(e)))\n\n    if data_or_revert and request.args[1] == \'modules\':\n        # Lets try to reload the modules\n        try:\n            mopath = \'.\'.join(request.args[2:])[:-3]\n            exec \'import applications.%s.modules.%s\' % (request.args[0], mopath)\n            reload(sys.modules[\'applications.%s.modules.%s\'\n                    % (request.args[0], mopath)])\n        except Exception, e:\n            response.flash = DIV(T(\'failed to reload module because:\'),PRE(str(e)))\n\n    edit_controller = None\n    editviewlinks = None\n    view_link = None\n    if filetype == \'html\' and len(request.args) >= 3:\n        cfilename = os.path.join(request.args[0], \'controllers\',\n                                 request.args[2] + \'.py\')\n        if os.path.exists(apath(cfilename, r=request)):\n            edit_controller = URL(\'edit\', args=[cfilename])\n            view = request.args[3].replace(\'.html\',\'\')\n            view_link = URL(request.args[0],request.args[2],view)\n    elif filetype == \'python\' and request.args[1] == \'controllers\':\n        ## it\'s a controller file.\n        ## Create links to all of the associated view files.\n        app = get_app()\n        viewname = os.path.splitext(request.args[2])[0]\n        viewpath = os.path.join(app,\'views\',viewname)\n        aviewpath = apath(viewpath, r=request)\n        viewlist = []\n        if os.path.exists(aviewpath):\n            if os.path.isdir(aviewpath):\n                viewlist = glob(os.path.join(aviewpath,\'*.html\'))\n        elif os.path.exists(aviewpath+\'.html\'):\n            viewlist.append(aviewpath+\'.html\')\n        if len(viewlist):\n            editviewlinks = []\n            for v in viewlist:\n                vf = os.path.split(v)[-1]\n                vargs = "/".join([viewpath.replace(os.sep,"/"),vf])\n                editviewlinks.append(A(T(vf.split(".")[0]),\\\n                    _href=URL(\'edit\',args=[vargs])))\n\n    if len(request.args) > 2 and request.args[1] == \'controllers\':\n        controller = (request.args[2])[:-3]\n        functions = regex_expose.findall(data)\n    else:\n        (controller, functions) = (None, None)\n\n    if \'from_ajax\' in request.vars:\n        return response.json({\'file_hash\': file_hash, \'saved_on\': saved_on, \'functions\':functions, \'controller\': controller, \'application\': request.args[0], \'highlight\': highlight })\n    else:\n\n        editarea_preferences = {}\n        editarea_preferences[\'FONT_SIZE\'] = \'10\'\n        editarea_preferences[\'FULL_SCREEN\'] = \'false\'\n        editarea_preferences[\'ALLOW_TOGGLE\'] = \'true\'\n        editarea_preferences[\'REPLACE_TAB_BY_SPACES\'] = \'4\'\n        editarea_preferences[\'DISPLAY\'] = \'onload\'\n        for key in editarea_preferences:\n            if globals().has_key(key):\n                editarea_preferences[key]=globals()[key]\n        return dict(app=request.args[0],\n                    filename=filename,\n                    filetype=filetype,\n                    data=data,\n                    edit_controller=edit_controller,\n                    file_hash=file_hash,\n                    saved_on=saved_on,\n                    controller=controller,\n                    functions=functions,\n                    view_link=view_link,\n                    editarea_preferences=editarea_preferences,\n                    editviewlinks=editviewlinks)\n\ndef resolve():\n    """\n    """\n\n    filename = \'/\'.join(request.args)\n    # ## check if file is not there\n    path = apath(filename, r=request)\n    a = safe_read(path).split(\'\\n\')\n    try:\n        b = safe_read(path + \'.1\').split(\'\\n\')\n    except IOError:\n        session.flash = \'Other file, no longer there\'\n        redirect(URL(\'edit\', args=request.args))\n\n    d = difflib.ndiff(a, b)\n\n    def leading(line):\n        """  """\n\n        # TODO: we really need to comment this\n        z = \'\'\n        for (k, c) in enumerate(line):\n            if c == \' \':\n                z += \'&nbsp;\'\n            elif c == \' \\t\':\n                z += \'&nbsp;\'\n            elif k == 0 and c == \'?\':\n                pass\n            else:\n                break\n\n        return XML(z)\n\n    def getclass(item):\n        """ Determine item class """\n\n        if item[0] == \' \':\n            return \'normal\'\n        if item[0] == \'+\':\n            return \'plus\'\n        if item[0] == \'-\':\n            return \'minus\'\n\n    if request.vars:\n        c = \'\\n\'.join([item[2:].rstrip() for (i, item) in enumerate(d) if item[0] \\\n                           == \' \' or \'line%i\' % i in request.vars])\n        safe_write(path, c)\n        session.flash = \'files merged\'\n        redirect(URL(\'edit\', args=request.args))\n    else:\n        # Making the short circuit compatible with <= python2.4\n        gen_data = lambda index,item: not item[:1] in [\'+\',\'-\'] and "" \\\n                   or INPUT(_type=\'checkbox\',\n                            _name=\'line%i\' % index,\n                            value=item[0] == \'+\')\n\n        diff = TABLE(*[TR(TD(gen_data(i,item)),\n                          TD(item[0]),\n                          TD(leading(item[2:]),\n                          TT(item[2:].rstrip())), _class=getclass(item))\n                       for (i, item) in enumerate(d) if item[0] != \'?\'])\n\n    return dict(diff=diff, filename=filename)\n\n\ndef edit_language():\n    """ Edit language file """\n    app = get_app()\n    filename = \'/\'.join(request.args)\n    from gluon.languages import read_dict, write_dict\n    strings = read_dict(apath(filename, r=request))\n    keys = sorted(strings.keys(),lambda x,y: cmp(x.lower(), y.lower()))\n    rows = []\n    rows.append(H2(T(\'Original/Translation\')))\n\n    for key in keys:\n        name = md5_hash(key)\n        if key==strings[key]:\n            _class=\'untranslated\'\n        else:\n            _class=\'translated\'\n        if len(key) <= 40:\n            elem = INPUT(_type=\'text\', _name=name,value=strings[key],\n                         _size=70,_class=_class)\n        else:\n            elem = TEXTAREA(_name=name, value=strings[key], _cols=70,\n                            _rows=5, _class=_class)\n\n        # Making the short circuit compatible with <= python2.4\n        k = (strings[key] != key) and key or B(key)\n\n        rows.append(P(k, BR(), elem, TAG.BUTTON(T(\'delete\'),\n                            _onclick=\'return delkey("%s")\' % name), _id=name))\n\n    rows.append(INPUT(_type=\'submit\', _value=T(\'update\')))\n    form = FORM(*rows)\n    if form.accepts(request.vars, keepvalues=True):\n        strs = dict()\n        for key in keys:\n            name = md5_hash(key)\n            if form.vars[name]==chr(127): continue\n            strs[key] = form.vars[name]\n        write_dict(apath(filename, r=request), strs)\n        session.flash = T(\'file saved on %(time)s\', dict(time=time.ctime()))\n        redirect(URL(r=request,args=request.args))\n    return dict(app=request.args[0], filename=filename, form=form)\n\n\ndef about():\n    """ Read about info """\n    app = get_app()\n    # ## check if file is not there\n    about = safe_read(apath(\'%s/ABOUT\' % app, r=request))\n    license = safe_read(apath(\'%s/LICENSE\' % app, r=request))\n    return dict(app=app, about=MARKMIN(about), license=MARKMIN(license))\n\n\ndef design():\n    """ Application design handler """\n    app = get_app()\n\n    if not response.flash and app == request.application:\n        msg = T(\'ATTENTION: you cannot edit the running application!\')\n        response.flash = msg\n\n    if request.vars.pluginfile!=None and not isinstance(request.vars.pluginfile,str):\n        filename=os.path.basename(request.vars.pluginfile.filename)\n        if plugin_install(app, request.vars.pluginfile.file,\n                          request, filename):\n            session.flash = T(\'new plugin installed\')\n            redirect(URL(\'design\',args=app))\n        else:\n            session.flash = \\\n                T(\'unable to create application "%s"\', request.vars.filename)\n        redirect(URL(r=request))\n    elif isinstance(request.vars.pluginfile,str):\n        session.flash = T(\'plugin not specified\')\n        redirect(URL(r=request))\n\n\n    # If we have only pyc files it means that\n    # we cannot design\n    if os.path.exists(apath(\'%s/compiled\' % app, r=request)):\n        session.flash = \\\n            T(\'application is compiled and cannot be designed\')\n        redirect(URL(\'site\'))\n\n    # Get all models\n    models = listdir(apath(\'%s/models/\' % app, r=request), \'.*\\.py$\')\n    models=[x.replace(\'\\\\\',\'/\') for x in models]\n    defines = {}\n    for m in models:\n        data = safe_read(apath(\'%s/models/%s\' % (app, m), r=request))\n        defines[m] = regex_tables.findall(data)\n        defines[m].sort()\n\n    # Get all controllers\n    controllers = sorted(listdir(apath(\'%s/controllers/\' % app, r=request), \'.*\\.py$\'))\n    controllers = [x.replace(\'\\\\\',\'/\') for x in controllers]\n    functions = {}\n    for c in controllers:\n        data = safe_read(apath(\'%s/controllers/%s\' % (app, c), r=request))\n        items = regex_expose.findall(data)\n        functions[c] = items\n\n    # Get all views\n    views = sorted(listdir(apath(\'%s/views/\' % app, r=request), \'[\\w/\\-]+(\\.\\w+)+$\'))\n    views = [x.replace(\'\\\\\',\'/\') for x in views if not x.endswith(\'.bak\')]\n    extend = {}\n    include = {}\n    for c in views:\n        data = safe_read(apath(\'%s/views/%s\' % (app, c), r=request))\n        items = regex_extend.findall(data)\n\n        if items:\n            extend[c] = items[0][1]\n\n        items = regex_include.findall(data)\n        include[c] = [i[1] for i in items]\n\n    # Get all modules\n    modules = listdir(apath(\'%s/modules/\' % app, r=request), \'.*\\.py$\')\n    modules = modules=[x.replace(\'\\\\\',\'/\') for x in modules]\n    modules.sort()\n\n    # Get all static files\n    statics = listdir(apath(\'%s/static/\' % app, r=request), \'[^\\.#].*\')\n    statics = [x.replace(\'\\\\\',\'/\') for x in statics]\n    statics.sort()\n\n    # Get all languages\n    languages = listdir(apath(\'%s/languages/\' % app, r=request), \'[\\w-]*\\.py\')\n\n    #Get crontab\n    cronfolder = apath(\'%s/cron\' % app, r=request)\n    if not os.path.exists(cronfolder): os.mkdir(cronfolder)\n    crontab = apath(\'%s/cron/crontab\' % app, r=request)\n    if not os.path.exists(crontab):\n        safe_write(crontab, \'#crontab\')\n\n    plugins=[]\n    def filter_plugins(items,plugins):\n        plugins+=[item[7:].split(\'/\')[0].split(\'.\')[0] for item in items if item.startswith(\'plugin_\')]\n        plugins[:]=list(set(plugins))\n        plugins.sort()\n        return [item for item in items if not item.startswith(\'plugin_\')]\n\n    return dict(app=app,\n                models=filter_plugins(models,plugins),\n                defines=defines,\n                controllers=filter_plugins(controllers,plugins),\n                functions=functions,\n                views=filter_plugins(views,plugins),\n                modules=filter_plugins(modules,plugins),\n                extend=extend,\n                include=include,\n                statics=filter_plugins(statics,plugins),\n                languages=languages,\n                crontab=crontab,\n                plugins=plugins)\n\ndef delete_plugin():\n    """ Object delete handler """\n    app=request.args(0)\n    plugin = request.args(1)\n    plugin_name=\'plugin_\'+plugin\n    if \'nodelete\' in request.vars:\n        redirect(URL(\'design\',args=app))\n    elif \'delete\' in request.vars:\n        try:\n            for folder in [\'models\',\'views\',\'controllers\',\'static\',\'modules\']:\n                path=os.path.join(apath(app,r=request),folder)\n                for item in os.listdir(path):\n                    if item.rsplit(\'.\',1)[0] == plugin_name:\n                        filename=os.path.join(path,item)\n                        if os.path.isdir(filename):\n                            shutil.rmtree(filename)\n                        else:\n                            os.unlink(filename)\n            session.flash = T(\'plugin "%(plugin)s" deleted\',\n                              dict(plugin=plugin))\n        except Exception:\n            session.flash = T(\'unable to delete file plugin "%(plugin)s"\',\n                              dict(plugin=plugin))\n        redirect(URL(\'design\',args=request.args(0)))\n    return dict(plugin=plugin)\n\ndef plugin():\n    """ Application design handler """\n    app = get_app()\n    plugin = request.args(1)\n\n    if not response.flash and app == request.application:\n        msg = T(\'ATTENTION: you cannot edit the running application!\')\n        response.flash = msg\n\n    # If we have only pyc files it means that\n    # we cannot design\n    if os.path.exists(apath(\'%s/compiled\' % app, r=request)):\n        session.flash = \\\n            T(\'application is compiled and cannot be designed\')\n        redirect(URL(\'site\'))\n\n    # Get all models\n    models = listdir(apath(\'%s/models/\' % app, r=request), \'.*\\.py$\')\n    models=[x.replace(\'\\\\\',\'/\') for x in models]\n    defines = {}\n    for m in models:\n        data = safe_read(apath(\'%s/models/%s\' % (app, m), r=request))\n        defines[m] = regex_tables.findall(data)\n        defines[m].sort()\n\n    # Get all controllers\n    controllers = sorted(listdir(apath(\'%s/controllers/\' % app, r=request), \'.*\\.py$\'))\n    controllers = [x.replace(\'\\\\\',\'/\') for x in controllers]\n    functions = {}\n    for c in controllers:\n        data = safe_read(apath(\'%s/controllers/%s\' % (app, c), r=request))\n        items = regex_expose.findall(data)\n        functions[c] = items\n\n    # Get all views\n    views = sorted(listdir(apath(\'%s/views/\' % app, r=request), \'[\\w/\\-]+\\.\\w+$\'))\n    views = [x.replace(\'\\\\\',\'/\') for x in views]\n    extend = {}\n    include = {}\n    for c in views:\n        data = safe_read(apath(\'%s/views/%s\' % (app, c), r=request))\n        items = regex_extend.findall(data)\n        if items:\n            extend[c] = items[0][1]\n\n        items = regex_include.findall(data)\n        include[c] = [i[1] for i in items]\n\n    # Get all modules\n    modules = listdir(apath(\'%s/modules/\' % app, r=request), \'.*\\.py$\')\n    modules = modules=[x.replace(\'\\\\\',\'/\') for x in modules]\n    modules.sort()\n\n    # Get all static files\n    statics = listdir(apath(\'%s/static/\' % app, r=request), \'[^\\.#].*\')\n    statics = [x.replace(\'\\\\\',\'/\') for x in statics]\n    statics.sort()\n\n    # Get all languages\n    languages = listdir(apath(\'%s/languages/\' % app, r=request), \'[\\w-]*\\.py\')\n\n    #Get crontab\n    crontab = apath(\'%s/cron/crontab\' % app, r=request)\n    if not os.path.exists(crontab):\n        safe_write(crontab, \'#crontab\')\n\n    def filter_plugins(items):\n        regex=re.compile(\'^plugin_\'+plugin+\'(/.*|\\..*)?$\')\n        return [item for item in items if regex.match(item)]\n\n    return dict(app=app,\n                models=filter_plugins(models),\n                defines=defines,\n                controllers=filter_plugins(controllers),\n                functions=functions,\n                views=filter_plugins(views),\n                modules=filter_plugins(modules),\n                extend=extend,\n                include=include,\n                statics=filter_plugins(statics),\n                languages=languages,\n                crontab=crontab)\n\n\ndef create_file():\n    """ Create files handler """\n    try:\n        app = get_app(name=request.vars.location.split(\'/\')[0])\n        path = apath(request.vars.location, r=request)\n        filename = re.sub(\'[^\\w./-]+\', \'_\', request.vars.filename)\n\n        if path[-11:] == \'/languages/\':\n            # Handle language files\n            if len(filename) == 0:\n                raise SyntaxError\n            if not filename[-3:] == \'.py\':\n                filename += \'.py\'\n            app = path.split(\'/\')[-3]\n            path=os.path.join(apath(app, r=request),\'languages\',filename)\n            if not os.path.exists(path):\n                safe_write(path, \'\')\n            findT(apath(app, r=request), filename[:-3])\n            session.flash = T(\'language file "%(filename)s" created/updated\',\n                              dict(filename=filename))\n            redirect(request.vars.sender)\n\n        elif path[-8:] == \'/models/\':\n            # Handle python models\n            if not filename[-3:] == \'.py\':\n                filename += \'.py\'\n\n            if len(filename) == 3:\n                raise SyntaxError\n\n            text = \'# coding: utf8\\n\'\n\n        elif path[-13:] == \'/controllers/\':\n            # Handle python controllers\n            if not filename[-3:] == \'.py\':\n                filename += \'.py\'\n\n            if len(filename) == 3:\n                raise SyntaxError\n\n            text = \'# coding: utf8\\n# %s\\ndef index(): return dict(message="hello from %s")\'\n            text = text % (T(\'try something like\'), filename)\n\n        elif path[-7:] == \'/views/\':\n            if request.vars.plugin and not filename.startswith(\'plugin_%s/\' % request.vars.plugin):\n                filename = \'plugin_%s/%s\' % (request.vars.plugin, filename)\n            # Handle template (html) views\n            if filename.find(\'.\')<0:\n                filename += \'.html\'\n            extension = filename.split(\'.\')[-1].lower()\n\n            if len(filename) == 5:\n                raise SyntaxError\n\n            msg = T(\'This is the %(filename)s template\',\n                    dict(filename=filename))\n            if extension == \'html\':\n                text = dedent("""\n                   {{extend \'layout.html\'}}\n                   <h1>%s</h1>\n                   {{=BEAUTIFY(response._vars)}}""" % msg)\n            else:\n                generic = os.path.join(path,\'generic.\'+extension)\n                if os.path.exists(generic):\n                    text = read_file(generic)\n                else:\n                    text = \'\'\n\n        elif path[-9:] == \'/modules/\':\n            if request.vars.plugin and not filename.startswith(\'plugin_%s/\' % request.vars.plugin):\n                filename = \'plugin_%s/%s\' % (request.vars.plugin, filename)\n            # Handle python module files\n            if not filename[-3:] == \'.py\':\n                filename += \'.py\'\n\n            if len(filename) == 3:\n                raise SyntaxError\n\n            text = dedent("""\n                   #!/usr/bin/env python\n                   # coding: utf8\n                   from gluon import *\\n""")\n\n        elif path[-8:] == \'/static/\':\n            if request.vars.plugin and not filename.startswith(\'plugin_%s/\' % request.vars.plugin):\n                filename = \'plugin_%s/%s\' % (request.vars.plugin, filename)\n            text = \'\'\n        else:\n            redirect(request.vars.sender)\n\n        full_filename = os.path.join(path, filename)\n        dirpath = os.path.dirname(full_filename)\n\n        if not os.path.exists(dirpath):\n            os.makedirs(dirpath)\n\n        if os.path.exists(full_filename):\n            raise SyntaxError\n\n        safe_write(full_filename, text)\n        session.flash = T(\'file "%(filename)s" created\',\n                          dict(filename=full_filename[len(path):]))\n        redirect(URL(\'edit\',\n                 args=[os.path.join(request.vars.location, filename)]))\n    except Exception, e:\n        if not isinstance(e,HTTP):\n            session.flash = T(\'cannot create file\')\n\n    redirect(request.vars.sender)\n\n\ndef upload_file():\n    """ File uploading handler """\n\n    try:\n        filename = None\n        app = get_app(name=request.vars.location.split(\'/\')[0])\n        path = apath(request.vars.location, r=request)\n\n        if request.vars.filename:\n            filename = re.sub(\'[^\\w\\./]+\', \'_\', request.vars.filename)\n        else:\n            filename = os.path.split(request.vars.file.filename)[-1]\n\n        if path[-8:] == \'/models/\' and not filename[-3:] == \'.py\':\n            filename += \'.py\'\n\n        if path[-9:] == \'/modules/\' and not filename[-3:] == \'.py\':\n            filename += \'.py\'\n\n        if path[-13:] == \'/controllers/\' and not filename[-3:] == \'.py\':\n            filename += \'.py\'\n\n        if path[-7:] == \'/views/\' and not filename[-5:] == \'.html\':\n            filename += \'.html\'\n\n        if path[-11:] == \'/languages/\' and not filename[-3:] == \'.py\':\n            filename += \'.py\'\n\n        filename = os.path.join(path, filename)\n        dirpath = os.path.dirname(filename)\n\n        if not os.path.exists(dirpath):\n            os.makedirs(dirpath)\n\n        safe_write(filename, request.vars.file.file.read(), \'wb\')\n        session.flash = T(\'file "%(filename)s" uploaded\',\n                          dict(filename=filename[len(path):]))\n    except Exception:\n        if filename:\n            d = dict(filename = filename[len(path):])\n        else:\n            d = dict(filename = \'unkown\')\n        session.flash = T(\'cannot upload file "%(filename)s"\', d)\n\n    redirect(request.vars.sender)\n\n\ndef errors():\n    """ Error handler """\n    import operator\n    import os\n    import pickle\n    import hashlib\n\n    app = get_app()\n\n    method = request.args(1) or \'new\'\n    db_ready = {}\n    db_ready[\'status\'] = get_ticket_storage(app)\n    db_ready[\'errmessage\'] = "No ticket_storage.txt found under /private folder"\n    db_ready[\'errlink\'] = "http://web2py.com/books/default/chapter/29/13#Collecting-tickets"\n\n    if method == \'new\':\n        errors_path = apath(\'%s/errors\' % app, r=request)\n\n        delete_hashes = []\n        for item in request.vars:\n            if item[:7] == \'delete_\':\n                delete_hashes.append(item[7:])\n\n        hash2error = dict()\n\n        for fn in listdir(errors_path, \'^\\w.*\'):\n            fullpath = os.path.join(errors_path, fn)\n            if not os.path.isfile(fullpath): continue\n            try:\n                fullpath_file = open(fullpath, \'r\')\n                try:\n                    error = pickle.load(fullpath_file)\n                finally:\n                    fullpath_file.close()\n            except IOError:\n                continue\n\n            hash = hashlib.md5(error[\'traceback\']).hexdigest()\n\n            if hash in delete_hashes:\n                os.unlink(fullpath)\n            else:\n                try:\n                    hash2error[hash][\'count\'] += 1\n                except KeyError:\n                    error_lines = error[\'traceback\'].split("\\n")\n                    last_line = error_lines[-2]\n                    error_causer = os.path.split(error[\'layer\'])[1]\n                    hash2error[hash] = dict(count=1, pickel=error,\n                                            causer=error_causer,\n                                            last_line=last_line,\n                                            hash=hash,ticket=fn)\n\n        decorated = [(x[\'count\'], x) for x in hash2error.values()]\n        decorated.sort(key=operator.itemgetter(0), reverse=True)\n\n        return dict(errors = [x[1] for x in decorated], app=app, method=method, db_ready=db_ready)\n\n    elif method == \'dbnew\':\n        errors_path = apath(\'%s/errors\' % app, r=request)\n        tk_db, tk_table = get_ticket_storage(app)\n\n        delete_hashes = []\n        for item in request.vars:\n            if item[:7] == \'delete_\':\n                delete_hashes.append(item[7:])\n\n        hash2error = dict()\n\n        for fn in tk_db(tk_table.id>0).select():\n            try:\n                error = pickle.loads(fn.ticket_data)\n            except AttributeError:\n                tk_db(tk_table.id == fn.id).delete()\n                tk_db.commit()\n\n            hash = hashlib.md5(error[\'traceback\']).hexdigest()\n\n            if hash in delete_hashes:\n                tk_db(tk_table.id == fn.id).delete()\n                tk_db.commit()\n            else:\n                try:\n                    hash2error[\'hash\'][\'count\'] += 1\n                except KeyError:\n                    error_lines = error[\'traceback\'].split("\\n")\n                    last_line = error_lines[-2]\n                    error_causer = os.path.split(error[\'layer\'])[1]\n                    hash2error[hash] = dict(count=1, pickel=error,\n                                            causer=error_causer,\n                                            last_line=last_line,\n                                            hash=hash,ticket=fn.ticket_id)\n\n        decorated = [(x[\'count\'], x) for x in hash2error.values()]\n\n        decorated.sort(key=operator.itemgetter(0), reverse=True)\n\n        return dict(errors = [x[1] for x in decorated], app=app, method=method)\n\n    elif method == \'dbold\':\n        tk_db, tk_table = get_ticket_storage(app)\n        for item in request.vars:\n            if item[:7] == \'delete_\':\n                tk_db(tk_table.ticket_id == item[7:]).delete()\n                tk_db.commit()\n        tickets_ = tk_db(tk_table.id>0).select(tk_table.ticket_id, tk_table.created_datetime, orderby=~tk_table.created_datetime)\n        tickets = [row.ticket_id for row in tickets_]\n        times = dict([(row.ticket_id, row.created_datetime) for row in tickets_])\n\n        return dict(app=app, tickets=tickets, method=method, times=times)\n\n    else:\n        for item in request.vars:\n            if item[:7] == \'delete_\':\n                os.unlink(apath(\'%s/errors/%s\' % (app, item[7:]), r=request))\n        func = lambda p: os.stat(apath(\'%s/errors/%s\' % \\\n                                           (app, p), r=request)).st_mtime\n        tickets = sorted(listdir(apath(\'%s/errors/\' % app, r=request), \'^\\w.*\'),\n                         key=func,\n                         reverse=True)\n\n        return dict(app=app, tickets=tickets, method=method, db_ready=db_ready)\n\ndef get_ticket_storage(app):\n    private_folder = apath(\'%s/private\' % app, r=request)\n    ticket_file = os.path.join(private_folder, \'ticket_storage.txt\')\n    if os.path.exists(ticket_file):\n        db_string = open(ticket_file).read()\n        db_string = db_string.strip().replace(\'\\r\',\'\').replace(\'\\n\',\'\')\n    else:\n        return False\n    tickets_table = \'web2py_ticket\'\n    tablename = tickets_table + \'_\' + app\n    db_path = apath(\'%s/databases\' % app, r=request)\n    ticketsdb = DAL(db_string, folder=db_path, auto_import=True)\n    if not ticketsdb.get(tablename):\n        table = ticketsdb.define_table(\n                tablename,\n                Field(\'ticket_id\', length=100),\n                Field(\'ticket_data\', \'text\'),\n                Field(\'created_datetime\', \'datetime\'),\n                )\n    return ticketsdb , ticketsdb.get(tablename)\n\ndef make_link(path):\n    """ Create a link from a path """\n    tryFile = path.replace(\'\\\\\', \'/\')\n\n    if os.path.isabs(tryFile) and os.path.isfile(tryFile):\n        (folder, filename) = os.path.split(tryFile)\n        (base, ext) = os.path.splitext(filename)\n        app = get_app()\n\n        editable = {\'controllers\': \'.py\', \'models\': \'.py\', \'views\': \'.html\'}\n        for key in editable.keys():\n            check_extension = folder.endswith("%s/%s" % (app,key))\n            if ext.lower() == editable[key] and check_extension:\n                return A(\'"\' + tryFile + \'"\',\n                         _href=URL(r=request,\n                         f=\'edit/%s/%s/%s\' % (app, key, filename))).xml()\n    return \'\'\n\n\ndef make_links(traceback):\n    """ Make links using the given traceback """\n\n    lwords = traceback.split(\'"\')\n\n    # Making the short circuit compatible with <= python2.4\n    result = (len(lwords) != 0) and lwords[0] or \'\'\n\n    i = 1\n\n    while i < len(lwords):\n        link = make_link(lwords[i])\n\n        if link == \'\':\n            result += \'"\' + lwords[i]\n        else:\n            result += link\n\n            if i + 1 < len(lwords):\n                result += lwords[i + 1]\n                i = i + 1\n\n        i = i + 1\n\n    return result\n\n\nclass TRACEBACK(object):\n    """ Generate the traceback """\n\n    def __init__(self, text):\n        """ TRACEBACK constructor """\n\n        self.s = make_links(CODE(text).xml())\n\n    def xml(self):\n        """ Returns the xml """\n\n        return self.s\n\n\ndef ticket():\n    """ Ticket handler """\n\n    if len(request.args) != 2:\n        session.flash = T(\'invalid ticket\')\n        redirect(URL(\'site\'))\n\n    app = get_app()\n    myversion = request.env.web2py_version\n    ticket = request.args[1]\n    e = RestrictedError()\n    e.load(request, app, ticket)\n\n    return dict(app=app,\n                ticket=ticket,\n                output=e.output,\n                traceback=(e.traceback and TRACEBACK(e.traceback)),\n                snapshot=e.snapshot,\n                code=e.code,\n                layer=e.layer,\n                myversion=myversion)\n\ndef ticketdb():\n    """ Ticket handler """\n\n    if len(request.args) != 2:\n        session.flash = T(\'invalid ticket\')\n        redirect(URL(\'site\'))\n\n    app = get_app()\n    myversion = request.env.web2py_version\n    ticket = request.args[1]\n    e = RestrictedError()\n    request.tickets_db = get_ticket_storage(app)[0]\n    e.load(request, app, ticket)\n    response.view = \'default/ticket.html\'\n    return dict(app=app,\n                ticket=ticket,\n                output=e.output,\n                traceback=(e.traceback and TRACEBACK(e.traceback)),\n                snapshot=e.snapshot,\n                code=e.code,\n                layer=e.layer,\n                myversion=myversion)\n\ndef error():\n    """ Generate a ticket (for testing) """\n    raise RuntimeError(\'admin ticket generator at your service\')\n\ndef update_languages():\n    """ Update available languages """\n\n    app = get_app()\n    update_all_languages(apath(app, r=request))\n    session.flash = T(\'Language files (static strings) updated\')\n    redirect(URL(\'design\',args=app,anchor=\'languages\'))\n\n\ndef twitter():\n    session.forget()\n    session._unlock(response)\n    import gluon.tools\n    import gluon.contrib.simplejson as sj\n    try:\n        if TWITTER_HASH:\n            page = urllib.urlopen("http://search.twitter.com/search.json?q=%%40%s" % TWITTER_HASH).read()\n            data = sj.loads(page  , encoding="utf-8")[\'results\']\n            d = dict()\n            for e in data:\n                d[e["id"]] = e\n            r = reversed(sorted(d))\n            return dict(tweets = [d[k] for k in r])\n        else:\n            return \'disabled\'\n    except Exception, e:\n        return DIV(T(\'Unable to download because:\'),BR(),str(e))\n\n\ndef user():\n    if MULTI_USER_MODE:\n        if not db(db.auth_user).count():\n            auth.settings.registration_requires_approval = False\n        return dict(form=auth())\n    else:\n        return dict(form=T("Disabled"))\n\ndef reload_routes():\n    """ Reload routes.py """\n    import gluon.rewrite\n    gluon.rewrite.load()\n    redirect(URL(\'site\'))\n\n\n\nresponse._vars=response._caller(enable)\n'
p7
sS'snapshot'
p8
(dp9
S'exception'
p10
(dp11
S'__hash__'
p12
S"<method-wrapper '__hash__' of exceptions.IOError object at 0x04165C00>"
p13
sS'__setattr__'
p14
S"<method-wrapper '__setattr__' of exceptions.IOError object at 0x04165C00>"
p15
sS'__reduce_ex__'
p16
S'<built-in method __reduce_ex__ of exceptions.IOError object at 0x04165C00>'
p17
sS'__getslice__'
p18
S"<method-wrapper '__getslice__' of exceptions.IOError object at 0x04165C00>"
p19
sS'__getitem__'
p20
S"<method-wrapper '__getitem__' of exceptions.IOError object at 0x04165C00>"
p21
sS'__setstate__'
p22
S'<built-in method __setstate__ of exceptions.IOError object at 0x04165C00>'
p23
sS'__reduce__'
p24
S'<built-in method __reduce__ of exceptions.IOError object at 0x04165C00>'
p25
sS'__str__'
p26
S"<method-wrapper '__str__' of exceptions.IOError object at 0x04165C00>"
p27
sS'args'
p28
S"(2, 'No such file or directory')"
p29
sS'__getattribute__'
p30
S"<method-wrapper '__getattribute__' of exceptions.IOError object at 0x04165C00>"
p31
sS'__class__'
p32
S"<type 'exceptions.IOError'>"
p33
sS'filename'
p34
S"r'C:/Users/Bussiere/Dropbox/Projets/jackpoint/web2py/applications/README\\DISABLED'"
p35
sS'__delattr__'
p36
S"<method-wrapper '__delattr__' of exceptions.IOError object at 0x04165C00>"
p37
sS'strerror'
p38
S"'No such file or directory'"
p39
sS'__repr__'
p40
S"<method-wrapper '__repr__' of exceptions.IOError object at 0x04165C00>"
p41
sS'errno'
p42
S'2'
sS'__dict__'
p43
S'{}'
p44
sS'__doc__'
p45
S"'I/O operation failed.'"
p46
sS'__init__'
p47
S"<method-wrapper '__init__' of exceptions.IOError object at 0x04165C00>"
p48
sS'__new__'
p49
S'<built-in method __new__ of type object at 0x1E1CD3B0>'
p50
ssS'evalue'
p51
S"[Errno 2] No such file or directory: 'C:/Users/Bussiere/Dropbox/Projets/jackpoint/web2py/applications/README\\\\DISABLED'"
p52
sS'request'
p53
ccopy_reg
_reconstructor
p54
(cgluon.html
BEAUTIFY
p55
c__builtin__
object
p56
NtRp57
(dp58
S'attributes'
p59
(dp60
sS'components'
p61
(lp62
g54
(cgluon.html
TABLE
p63
g56
NtRp64
(dp65
g59
(dp66
S'level'
p67
I5
ssS'parent'
p68
Nsg61
(lp69
g54
(cgluon.html
TR
p70
g56
NtRp71
(dp72
g59
(dp73
sg68
g64
sg61
(lp74
g54
(cgluon.html
TD
p75
g56
NtRp76
(dp77
g59
(dp78
S'_style'
p79
S'font-weight:bold;vertical-align:top'
p80
ssg68
g71
sg61
(lp81
S'ajax'
p82
asbag54
(g75
g56
NtRp83
(dp84
g59
(dp85
S'_valign'
p86
S'top'
p87
ssg68
g71
sg61
(lp88
S':'
asbag54
(g75
g56
NtRp89
(dp90
g59
(dp91
sg68
g71
sg61
(lp92
g54
(g55
g56
NtRp93
(dp94
g59
(dp95
g67
I5
ssg68
g89
sg61
(lp96
S'True'
p97
asbasbasbag54
(g70
g56
NtRp98
(dp99
g59
(dp100
sg68
g64
sg61
(lp101
g54
(g75
g56
NtRp102
(dp103
g59
(dp104
g79
g80
ssg68
g98
sg61
(lp105
S'application'
p106
asbag54
(g75
g56
NtRp107
(dp108
g59
(dp109
g86
g87
ssg68
g98
sg61
(lp110
S':'
asbag54
(g75
g56
NtRp111
(dp112
g59
(dp113
sg68
g98
sg61
(lp114
g54
(g55
g56
NtRp115
(dp116
g59
(dp117
g67
I5
ssg68
g111
sg61
(lp118
S'admin'
p119
asbasbasbag54
(g70
g56
NtRp120
(dp121
g59
(dp122
sg68
g64
sg61
(lp123
g54
(g75
g56
NtRp124
(dp125
g59
(dp126
g79
g80
ssg68
g120
sg61
(lp127
g28
asbag54
(g75
g56
NtRp128
(dp129
g59
(dp130
g86
g87
ssg68
g120
sg61
(lp131
S':'
asbag54
(g75
g56
NtRp132
(dp133
g59
(dp134
sg68
g120
sg61
(lp135
g54
(g55
g56
NtRp136
(dp137
g59
(dp138
g67
I5
ssg68
g132
sg61
(lp139
g54
(g63
g56
NtRp140
(dp141
g59
(dp142
g67
I4
ssg68
Nsg61
(lp143
g54
(g70
g56
NtRp144
(dp145
g59
(dp146
sg68
g140
sg61
(lp147
g54
(g75
g56
NtRp148
(dp149
g59
(dp150
sg68
g144
sg61
(lp151
g54
(g55
g56
NtRp152
(dp153
g59
(dp154
g67
I4
ssg68
g148
sg61
(lp155
S'README'
p156
asbasbasbasbasbasbasbag54
(g70
g56
NtRp157
(dp158
g59
(dp159
sg68
g64
sg61
(lp160
g54
(g75
g56
NtRp161
(dp162
g59
(dp163
g79
g80
ssg68
g157
sg61
(lp164
S'body'
p165
asbag54
(g75
g56
NtRp166
(dp167
g59
(dp168
g86
g87
ssg68
g157
sg61
(lp169
S':'
asbag54
(g75
g56
NtRp170
(dp171
g59
(dp172
sg68
g157
sg61
(lp173
g54
(g55
g56
NtRp174
(dp175
g59
(dp176
g67
I5
ssg68
g170
sg61
(lp177
S"<open file '<fdopen>', mode 'w+b' at 0x03DCF0F8>"
p178
asbasbasbag54
(g70
g56
NtRp179
(dp180
g59
(dp181
sg68
g64
sg61
(lp182
g54
(g75
g56
NtRp183
(dp184
g59
(dp185
g79
g80
ssg68
g179
sg61
(lp186
S'client'
p187
asbag54
(g75
g56
NtRp188
(dp189
g59
(dp190
g86
g87
ssg68
g179
sg61
(lp191
S':'
asbag54
(g75
g56
NtRp192
(dp193
g59
(dp194
sg68
g179
sg61
(lp195
g54
(g55
g56
NtRp196
(dp197
g59
(dp198
g67
I5
ssg68
g192
sg61
(lp199
S'127.0.0.1'
p200
asbasbasbag54
(g70
g56
NtRp201
(dp202
g59
(dp203
sg68
g64
sg61
(lp204
g54
(g75
g56
NtRp205
(dp206
g59
(dp207
g79
g80
ssg68
g201
sg61
(lp208
S'controller'
p209
asbag54
(g75
g56
NtRp210
(dp211
g59
(dp212
g86
g87
ssg68
g201
sg61
(lp213
S':'
asbag54
(g75
g56
NtRp214
(dp215
g59
(dp216
sg68
g201
sg61
(lp217
g54
(g55
g56
NtRp218
(dp219
g59
(dp220
g67
I5
ssg68
g214
sg61
(lp221
S'default'
p222
asbasbasbag54
(g70
g56
NtRp223
(dp224
g59
(dp225
sg68
g64
sg61
(lp226
g54
(g75
g56
NtRp227
(dp228
g59
(dp229
g79
g80
ssg68
g223
sg61
(lp230
S'cookies'
p231
asbag54
(g75
g56
NtRp232
(dp233
g59
(dp234
g86
g87
ssg68
g223
sg61
(lp235
S':'
asbag54
(g75
g56
NtRp236
(dp237
g59
(dp238
sg68
g223
sg61
(lp239
g54
(g55
g56
NtRp240
(dp241
g59
(dp242
g67
I5
ssg68
g236
sg61
(lp243
g54
(g63
g56
NtRp244
(dp245
g59
(dp246
g67
I4
ssg68
Nsg61
(lp247
g54
(g70
g56
NtRp248
(dp249
g59
(dp250
sg68
g244
sg61
(lp251
g54
(g75
g56
NtRp252
(dp253
g59
(dp254
g79
g80
ssg68
g248
sg61
(lp255
S'session_id_admin'
p256
asbag54
(g75
g56
NtRp257
(dp258
g59
(dp259
g86
g87
ssg68
g248
sg61
(lp260
S':'
asbag54
(g75
g56
NtRp261
(dp262
g59
(dp263
sg68
g248
sg61
(lp264
g54
(g55
g56
NtRp265
(dp266
g59
(dp267
g67
I4
ssg68
g261
sg61
(lp268
g54
(g63
g56
NtRp269
(dp270
g59
(dp271
g67
I3
ssg68
Nsg61
(lp272
g54
(g70
g56
NtRp273
(dp274
g59
(dp275
sg68
g269
sg61
(lp276
g54
(g75
g56
NtRp277
(dp278
g59
(dp279
g79
g80
ssg68
g273
sg61
(lp280
S'comment'
p281
asbag54
(g75
g56
NtRp282
(dp283
g59
(dp284
g86
g87
ssg68
g273
sg61
(lp285
S':'
asbag54
(g75
g56
NtRp286
(dp287
g59
(dp288
sg68
g273
sg61
(lp289
g54
(g55
g56
NtRp290
(dp291
g59
(dp292
g67
I3
ssg68
g286
sg61
(lp293
S''
asbasbasbag54
(g70
g56
NtRp294
(dp295
g59
(dp296
sg68
g269
sg61
(lp297
g54
(g75
g56
NtRp298
(dp299
g59
(dp300
g79
g80
ssg68
g294
sg61
(lp301
S'domain'
p302
asbag54
(g75
g56
NtRp303
(dp304
g59
(dp305
g86
g87
ssg68
g294
sg61
(lp306
S':'
asbag54
(g75
g56
NtRp307
(dp308
g59
(dp309
sg68
g294
sg61
(lp310
g54
(g55
g56
NtRp311
(dp312
g59
(dp313
g67
I3
ssg68
g307
sg61
(lp314
S''
asbasbasbag54
(g70
g56
NtRp315
(dp316
g59
(dp317
sg68
g269
sg61
(lp318
g54
(g75
g56
NtRp319
(dp320
g59
(dp321
g79
g80
ssg68
g315
sg61
(lp322
S'expires'
p323
asbag54
(g75
g56
NtRp324
(dp325
g59
(dp326
g86
g87
ssg68
g315
sg61
(lp327
S':'
asbag54
(g75
g56
NtRp328
(dp329
g59
(dp330
sg68
g315
sg61
(lp331
g54
(g55
g56
NtRp332
(dp333
g59
(dp334
g67
I3
ssg68
g328
sg61
(lp335
S''
asbasbasbag54
(g70
g56
NtRp336
(dp337
g59
(dp338
sg68
g269
sg61
(lp339
g54
(g75
g56
NtRp340
(dp341
g59
(dp342
g79
g80
ssg68
g336
sg61
(lp343
S'max-age'
p344
asbag54
(g75
g56
NtRp345
(dp346
g59
(dp347
g86
g87
ssg68
g336
sg61
(lp348
S':'
asbag54
(g75
g56
NtRp349
(dp350
g59
(dp351
sg68
g336
sg61
(lp352
g54
(g55
g56
NtRp353
(dp354
g59
(dp355
g67
I3
ssg68
g349
sg61
(lp356
S''
asbasbasbag54
(g70
g56
NtRp357
(dp358
g59
(dp359
sg68
g269
sg61
(lp360
g54
(g75
g56
NtRp361
(dp362
g59
(dp363
g79
g80
ssg68
g357
sg61
(lp364
S'path'
p365
asbag54
(g75
g56
NtRp366
(dp367
g59
(dp368
g86
g87
ssg68
g357
sg61
(lp369
S':'
asbag54
(g75
g56
NtRp370
(dp371
g59
(dp372
sg68
g357
sg61
(lp373
g54
(g55
g56
NtRp374
(dp375
g59
(dp376
g67
I3
ssg68
g370
sg61
(lp377
S''
asbasbasbag54
(g70
g56
NtRp378
(dp379
g59
(dp380
sg68
g269
sg61
(lp381
g54
(g75
g56
NtRp382
(dp383
g59
(dp384
g79
g80
ssg68
g378
sg61
(lp385
S'secure'
p386
asbag54
(g75
g56
NtRp387
(dp388
g59
(dp389
g86
g87
ssg68
g378
sg61
(lp390
S':'
asbag54
(g75
g56
NtRp391
(dp392
g59
(dp393
sg68
g378
sg61
(lp394
g54
(g55
g56
NtRp395
(dp396
g59
(dp397
g67
I3
ssg68
g391
sg61
(lp398
S''
asbasbasbag54
(g70
g56
NtRp399
(dp400
g59
(dp401
sg68
g269
sg61
(lp402
g54
(g75
g56
NtRp403
(dp404
g59
(dp405
g79
g80
ssg68
g399
sg61
(lp406
S'version'
p407
asbag54
(g75
g56
NtRp408
(dp409
g59
(dp410
g86
g87
ssg68
g399
sg61
(lp411
S':'
asbag54
(g75
g56
NtRp412
(dp413
g59
(dp414
sg68
g399
sg61
(lp415
g54
(g55
g56
NtRp416
(dp417
g59
(dp418
g67
I3
ssg68
g412
sg61
(lp419
S''
asbasbasbasbasbasbasbag54
(g70
g56
NtRp420
(dp421
g59
(dp422
sg68
g244
sg61
(lp423
g54
(g75
g56
NtRp424
(dp425
g59
(dp426
g79
g80
ssg68
g420
sg61
(lp427
S'session_id_init'
p428
asbag54
(g75
g56
NtRp429
(dp430
g59
(dp431
g86
g87
ssg68
g420
sg61
(lp432
S':'
asbag54
(g75
g56
NtRp433
(dp434
g59
(dp435
sg68
g420
sg61
(lp436
g54
(g55
g56
NtRp437
(dp438
g59
(dp439
g67
I4
ssg68
g433
sg61
(lp440
g54
(g63
g56
NtRp441
(dp442
g59
(dp443
g67
I3
ssg68
Nsg61
(lp444
g54
(g70
g56
NtRp445
(dp446
g59
(dp447
sg68
g441
sg61
(lp448
g54
(g75
g56
NtRp449
(dp450
g59
(dp451
g79
g80
ssg68
g445
sg61
(lp452
g281
asbag54
(g75
g56
NtRp453
(dp454
g59
(dp455
g86
g87
ssg68
g445
sg61
(lp456
S':'
asbag54
(g75
g56
NtRp457
(dp458
g59
(dp459
sg68
g445
sg61
(lp460
g54
(g55
g56
NtRp461
(dp462
g59
(dp463
g67
I3
ssg68
g457
sg61
(lp464
S''
asbasbasbag54
(g70
g56
NtRp465
(dp466
g59
(dp467
sg68
g441
sg61
(lp468
g54
(g75
g56
NtRp469
(dp470
g59
(dp471
g79
g80
ssg68
g465
sg61
(lp472
g302
asbag54
(g75
g56
NtRp473
(dp474
g59
(dp475
g86
g87
ssg68
g465
sg61
(lp476
S':'
asbag54
(g75
g56
NtRp477
(dp478
g59
(dp479
sg68
g465
sg61
(lp480
g54
(g55
g56
NtRp481
(dp482
g59
(dp483
g67
I3
ssg68
g477
sg61
(lp484
S''
asbasbasbag54
(g70
g56
NtRp485
(dp486
g59
(dp487
sg68
g441
sg61
(lp488
g54
(g75
g56
NtRp489
(dp490
g59
(dp491
g79
g80
ssg68
g485
sg61
(lp492
g323
asbag54
(g75
g56
NtRp493
(dp494
g59
(dp495
g86
g87
ssg68
g485
sg61
(lp496
S':'
asbag54
(g75
g56
NtRp497
(dp498
g59
(dp499
sg68
g485
sg61
(lp500
g54
(g55
g56
NtRp501
(dp502
g59
(dp503
g67
I3
ssg68
g497
sg61
(lp504
S''
asbasbasbag54
(g70
g56
NtRp505
(dp506
g59
(dp507
sg68
g441
sg61
(lp508
g54
(g75
g56
NtRp509
(dp510
g59
(dp511
g79
g80
ssg68
g505
sg61
(lp512
g344
asbag54
(g75
g56
NtRp513
(dp514
g59
(dp515
g86
g87
ssg68
g505
sg61
(lp516
S':'
asbag54
(g75
g56
NtRp517
(dp518
g59
(dp519
sg68
g505
sg61
(lp520
g54
(g55
g56
NtRp521
(dp522
g59
(dp523
g67
I3
ssg68
g517
sg61
(lp524
S''
asbasbasbag54
(g70
g56
NtRp525
(dp526
g59
(dp527
sg68
g441
sg61
(lp528
g54
(g75
g56
NtRp529
(dp530
g59
(dp531
g79
g80
ssg68
g525
sg61
(lp532
g365
asbag54
(g75
g56
NtRp533
(dp534
g59
(dp535
g86
g87
ssg68
g525
sg61
(lp536
S':'
asbag54
(g75
g56
NtRp537
(dp538
g59
(dp539
sg68
g525
sg61
(lp540
g54
(g55
g56
NtRp541
(dp542
g59
(dp543
g67
I3
ssg68
g537
sg61
(lp544
S''
asbasbasbag54
(g70
g56
NtRp545
(dp546
g59
(dp547
sg68
g441
sg61
(lp548
g54
(g75
g56
NtRp549
(dp550
g59
(dp551
g79
g80
ssg68
g545
sg61
(lp552
g386
asbag54
(g75
g56
NtRp553
(dp554
g59
(dp555
g86
g87
ssg68
g545
sg61
(lp556
S':'
asbag54
(g75
g56
NtRp557
(dp558
g59
(dp559
sg68
g545
sg61
(lp560
g54
(g55
g56
NtRp561
(dp562
g59
(dp563
g67
I3
ssg68
g557
sg61
(lp564
S''
asbasbasbag54
(g70
g56
NtRp565
(dp566
g59
(dp567
sg68
g441
sg61
(lp568
g54
(g75
g56
NtRp569
(dp570
g59
(dp571
g79
g80
ssg68
g565
sg61
(lp572
g407
asbag54
(g75
g56
NtRp573
(dp574
g59
(dp575
g86
g87
ssg68
g565
sg61
(lp576
S':'
asbag54
(g75
g56
NtRp577
(dp578
g59
(dp579
sg68
g565
sg61
(lp580
g54
(g55
g56
NtRp581
(dp582
g59
(dp583
g67
I3
ssg68
g577
sg61
(lp584
S''
asbasbasbasbasbasbasbasbasbasbasbag54
(g70
g56
NtRp585
(dp586
g59
(dp587
sg68
g64
sg61
(lp588
g54
(g75
g56
NtRp589
(dp590
g59
(dp591
g79
g80
ssg68
g585
sg61
(lp592
S'env'
p593
asbag54
(g75
g56
NtRp594
(dp595
g59
(dp596
g86
g87
ssg68
g585
sg61
(lp597
S':'
asbag54
(g75
g56
NtRp598
(dp599
g59
(dp600
sg68
g585
sg61
(lp601
g54
(g55
g56
NtRp602
(dp603
g59
(dp604
g67
I5
ssg68
g598
sg61
(lp605
g54
(g63
g56
NtRp606
(dp607
g59
(dp608
g67
I4
ssg68
Nsg61
(lp609
g54
(g70
g56
NtRp610
(dp611
g59
(dp612
sg68
g606
sg61
(lp613
g54
(g75
g56
NtRp614
(dp615
g59
(dp616
g79
g80
ssg68
g610
sg61
(lp617
S'app_folders'
p618
asbag54
(g75
g56
NtRp619
(dp620
g59
(dp621
g86
g87
ssg68
g610
sg61
(lp622
S':'
asbag54
(g75
g56
NtRp623
(dp624
g59
(dp625
sg68
g610
sg61
(lp626
g54
(g55
g56
NtRp627
(dp628
g59
(dp629
g67
I4
ssg68
g623
sg61
(lp630
S"set(['C:\\\\Users\\\\Bussiere\\\\Dropbox\\\\Projets\\\\jackpoint\\\\web2py\\\\applications\\\\init\\\\', 'C:\\\\Users\\\\Bussiere\\\\Dropbox\\\\Projets\\\\jackpoint\\\\web2py\\\\applications\\\\admin\\\\'])"
p631
asbasbasbag54
(g70
g56
NtRp632
(dp633
g59
(dp634
sg68
g606
sg61
(lp635
g54
(g75
g56
NtRp636
(dp637
g59
(dp638
g79
g80
ssg68
g632
sg61
(lp639
S'applications_parent'
p640
asbag54
(g75
g56
NtRp641
(dp642
g59
(dp643
g86
g87
ssg68
g632
sg61
(lp644
S':'
asbag54
(g75
g56
NtRp645
(dp646
g59
(dp647
sg68
g632
sg61
(lp648
g54
(g55
g56
NtRp649
(dp650
g59
(dp651
g67
I4
ssg68
g645
sg61
(lp652
S'C:\\Users\\Bussiere\\Dropbox\\Projets\\jackpoint\\web2py'
p653
asbasbasbag54
(g70
g56
NtRp654
(dp655
g59
(dp656
sg68
g606
sg61
(lp657
g54
(g75
g56
NtRp658
(dp659
g59
(dp660
g79
g80
ssg68
g654
sg61
(lp661
S'cmd_args'
p662
asbag54
(g75
g56
NtRp663
(dp664
g59
(dp665
g86
g87
ssg68
g654
sg61
(lp666
S':'
asbag54
(g75
g56
NtRp667
(dp668
g59
(dp669
sg68
g654
sg61
(lp670
g54
(g55
g56
NtRp671
(dp672
g59
(dp673
g67
I4
ssg68
g667
sg61
(lp674
g54
(g63
g56
NtRp675
(dp676
g59
(dp677
g67
I3
ssg68
Nsg61
(lp678
sbasbasbasbag54
(g70
g56
NtRp679
(dp680
g59
(dp681
sg68
g606
sg61
(lp682
g54
(g75
g56
NtRp683
(dp684
g59
(dp685
g79
g80
ssg68
g679
sg61
(lp686
S'cmd_options'
p687
asbag54
(g75
g56
NtRp688
(dp689
g59
(dp690
g86
g87
ssg68
g679
sg61
(lp691
S':'
asbag54
(g75
g56
NtRp692
(dp693
g59
(dp694
sg68
g679
sg61
(lp695
g54
(g55
g56
NtRp696
(dp697
g59
(dp698
g67
I4
ssg68
g692
sg61
(lp699
S"<Values at 0x3c40f58: {'verbose': False, 'ip': '127.0.0.1', 'shutdown_timeout': 5, 'taskbar': False, 'nocron': False, 'pid_filename': 'httpserver.pid', 'maxthreads': None, 'softcron': False, 'server_name': 'Batou', 'bpython': False, 'nogui': False, 'port': 8000, 'extcron': False, 'debuglevel': 30, 'test': None, 'folder': 'C:\\\\Users\\\\Bussiere\\\\Dropbox\\\\Projets\\\\jackpoint\\\\web2py', 'config': '', 'import_models': False, 'winservice': '', 'shell': None, 'run': '', 'log_filename': 'httpserver.log', 'args': [''], 'socket_timeout': 5, 'ssl_ca_certificate': None, 'scheduler': None, 'profiler_filename': None, 'ssl_private_key': '', 'password': '<ask>', 'request_queue_size': 5, 'ssl_certificate': '', 'cronjob': False, 'numthreads': None, 'quiet': False, 'interfaces': None, 'minthreads': None, 'timeout': 10, 'plain': False, 'nobanner': False}>"
p700
asbasbasbag54
(g70
g56
NtRp701
(dp702
g59
(dp703
sg68
g606
sg61
(lp704
g54
(g75
g56
NtRp705
(dp706
g59
(dp707
g79
g80
ssg68
g701
sg61
(lp708
S'content_length'
p709
asbag54
(g75
g56
NtRp710
(dp711
g59
(dp712
g86
g87
ssg68
g701
sg61
(lp713
S':'
asbag54
(g75
g56
NtRp714
(dp715
g59
(dp716
sg68
g701
sg61
(lp717
g54
(g55
g56
NtRp718
(dp719
g59
(dp720
g67
I4
ssg68
g714
sg61
(lp721
S'0'
asbasbasbag54
(g70
g56
NtRp722
(dp723
g59
(dp724
sg68
g606
sg61
(lp725
g54
(g75
g56
NtRp726
(dp727
g59
(dp728
g79
g80
ssg68
g722
sg61
(lp729
S'db_sessions'
p730
asbag54
(g75
g56
NtRp731
(dp732
g59
(dp733
g86
g87
ssg68
g722
sg61
(lp734
S':'
asbag54
(g75
g56
NtRp735
(dp736
g59
(dp737
sg68
g722
sg61
(lp738
g54
(g55
g56
NtRp739
(dp740
g59
(dp741
g67
I4
ssg68
g735
sg61
(lp742
S'set([])'
p743
asbasbasbag54
(g70
g56
NtRp744
(dp745
g59
(dp746
sg68
g606
sg61
(lp747
g54
(g75
g56
NtRp748
(dp749
g59
(dp750
g79
g80
ssg68
g744
sg61
(lp751
S'debugging'
p752
asbag54
(g75
g56
NtRp753
(dp754
g59
(dp755
g86
g87
ssg68
g744
sg61
(lp756
S':'
asbag54
(g75
g56
NtRp757
(dp758
g59
(dp759
sg68
g744
sg61
(lp760
g54
(g55
g56
NtRp761
(dp762
g59
(dp763
g67
I4
ssg68
g757
sg61
(lp764
g97
asbasbasbag54
(g70
g56
NtRp765
(dp766
g59
(dp767
sg68
g606
sg61
(lp768
g54
(g75
g56
NtRp769
(dp770
g59
(dp771
g79
g80
ssg68
g765
sg61
(lp772
S'gluon_parent'
p773
asbag54
(g75
g56
NtRp774
(dp775
g59
(dp776
g86
g87
ssg68
g765
sg61
(lp777
S':'
asbag54
(g75
g56
NtRp778
(dp779
g59
(dp780
sg68
g765
sg61
(lp781
g54
(g55
g56
NtRp782
(dp783
g59
(dp784
g67
I4
ssg68
g778
sg61
(lp785
S'C:\\Users\\Bussiere\\Dropbox\\Projets\\jackpoint\\web2py'
p786
asbasbasbag54
(g70
g56
NtRp787
(dp788
g59
(dp789
sg68
g606
sg61
(lp790
g54
(g75
g56
NtRp791
(dp792
g59
(dp793
g79
g80
ssg68
g787
sg61
(lp794
S'http_accept'
p795
asbag54
(g75
g56
NtRp796
(dp797
g59
(dp798
g86
g87
ssg68
g787
sg61
(lp799
S':'
asbag54
(g75
g56
NtRp800
(dp801
g59
(dp802
sg68
g787
sg61
(lp803
g54
(g55
g56
NtRp804
(dp805
g59
(dp806
g67
I4
ssg68
g800
sg61
(lp807
S'*/*'
p808
asbasbasbag54
(g70
g56
NtRp809
(dp810
g59
(dp811
sg68
g606
sg61
(lp812
g54
(g75
g56
NtRp813
(dp814
g59
(dp815
g79
g80
ssg68
g809
sg61
(lp816
S'http_accept_charset'
p817
asbag54
(g75
g56
NtRp818
(dp819
g59
(dp820
g86
g87
ssg68
g809
sg61
(lp821
S':'
asbag54
(g75
g56
NtRp822
(dp823
g59
(dp824
sg68
g809
sg61
(lp825
g54
(g55
g56
NtRp826
(dp827
g59
(dp828
g67
I4
ssg68
g822
sg61
(lp829
S'ISO-8859-1,utf-8;q=0.7,*;q=0.3'
p830
asbasbasbag54
(g70
g56
NtRp831
(dp832
g59
(dp833
sg68
g606
sg61
(lp834
g54
(g75
g56
NtRp835
(dp836
g59
(dp837
g79
g80
ssg68
g831
sg61
(lp838
S'http_accept_encoding'
p839
asbag54
(g75
g56
NtRp840
(dp841
g59
(dp842
g86
g87
ssg68
g831
sg61
(lp843
S':'
asbag54
(g75
g56
NtRp844
(dp845
g59
(dp846
sg68
g831
sg61
(lp847
g54
(g55
g56
NtRp848
(dp849
g59
(dp850
g67
I4
ssg68
g844
sg61
(lp851
S'gzip,deflate,sdch'
p852
asbasbasbag54
(g70
g56
NtRp853
(dp854
g59
(dp855
sg68
g606
sg61
(lp856
g54
(g75
g56
NtRp857
(dp858
g59
(dp859
g79
g80
ssg68
g853
sg61
(lp860
S'http_accept_language'
p861
asbag54
(g75
g56
NtRp862
(dp863
g59
(dp864
g86
g87
ssg68
g853
sg61
(lp865
S':'
asbag54
(g75
g56
NtRp866
(dp867
g59
(dp868
sg68
g853
sg61
(lp869
g54
(g55
g56
NtRp870
(dp871
g59
(dp872
g67
I4
ssg68
g866
sg61
(lp873
S'en-US,en;q=0.8'
p874
asbasbasbag54
(g70
g56
NtRp875
(dp876
g59
(dp877
sg68
g606
sg61
(lp878
g54
(g75
g56
NtRp879
(dp880
g59
(dp881
g79
g80
ssg68
g875
sg61
(lp882
S'http_connection'
p883
asbag54
(g75
g56
NtRp884
(dp885
g59
(dp886
g86
g87
ssg68
g875
sg61
(lp887
S':'
asbag54
(g75
g56
NtRp888
(dp889
g59
(dp890
sg68
g875
sg61
(lp891
g54
(g55
g56
NtRp892
(dp893
g59
(dp894
g67
I4
ssg68
g888
sg61
(lp895
S'keep-alive'
p896
asbasbasbag54
(g70
g56
NtRp897
(dp898
g59
(dp899
sg68
g606
sg61
(lp900
g54
(g75
g56
NtRp901
(dp902
g59
(dp903
g79
g80
ssg68
g897
sg61
(lp904
S'http_content_length'
p905
asbag54
(g75
g56
NtRp906
(dp907
g59
(dp908
g86
g87
ssg68
g897
sg61
(lp909
S':'
asbag54
(g75
g56
NtRp910
(dp911
g59
(dp912
sg68
g897
sg61
(lp913
g54
(g55
g56
NtRp914
(dp915
g59
(dp916
g67
I4
ssg68
g910
sg61
(lp917
S'0'
asbasbasbag54
(g70
g56
NtRp918
(dp919
g59
(dp920
sg68
g606
sg61
(lp921
g54
(g75
g56
NtRp922
(dp923
g59
(dp924
g79
g80
ssg68
g918
sg61
(lp925
S'http_cookie'
p926
asbag54
(g75
g56
NtRp927
(dp928
g59
(dp929
g86
g87
ssg68
g918
sg61
(lp930
S':'
asbag54
(g75
g56
NtRp931
(dp932
g59
(dp933
sg68
g918
sg61
(lp934
g54
(g55
g56
NtRp935
(dp936
g59
(dp937
g67
I4
ssg68
g931
sg61
(lp938
S'session_id_init=127.0.0.1-f148abf3-88d6-429a-ad58-8a2bd4fe4df6; session_id_admin=127.0.0.1-39f0a94b-773e-4424-b240-8c1ea9c1ed01'
p939
asbasbasbag54
(g70
g56
NtRp940
(dp941
g59
(dp942
sg68
g606
sg61
(lp943
g54
(g75
g56
NtRp944
(dp945
g59
(dp946
g79
g80
ssg68
g940
sg61
(lp947
S'http_host'
p948
asbag54
(g75
g56
NtRp949
(dp950
g59
(dp951
g86
g87
ssg68
g940
sg61
(lp952
S':'
asbag54
(g75
g56
NtRp953
(dp954
g59
(dp955
sg68
g940
sg61
(lp956
g54
(g55
g56
NtRp957
(dp958
g59
(dp959
g67
I4
ssg68
g953
sg61
(lp960
S'127.0.0.1:8000'
p961
asbasbasbag54
(g70
g56
NtRp962
(dp963
g59
(dp964
sg68
g606
sg61
(lp965
g54
(g75
g56
NtRp966
(dp967
g59
(dp968
g79
g80
ssg68
g962
sg61
(lp969
S'http_origin'
p970
asbag54
(g75
g56
NtRp971
(dp972
g59
(dp973
g86
g87
ssg68
g962
sg61
(lp974
S':'
asbag54
(g75
g56
NtRp975
(dp976
g59
(dp977
sg68
g962
sg61
(lp978
g54
(g55
g56
NtRp979
(dp980
g59
(dp981
g67
I4
ssg68
g975
sg61
(lp982
S'http://127.0.0.1:8000'
p983
asbasbasbag54
(g70
g56
NtRp984
(dp985
g59
(dp986
sg68
g606
sg61
(lp987
g54
(g75
g56
NtRp988
(dp989
g59
(dp990
g79
g80
ssg68
g984
sg61
(lp991
S'http_referer'
p992
asbag54
(g75
g56
NtRp993
(dp994
g59
(dp995
g86
g87
ssg68
g984
sg61
(lp996
S':'
asbag54
(g75
g56
NtRp997
(dp998
g59
(dp999
sg68
g984
sg61
(lp1000
g54
(g55
g56
NtRp1001
(dp1002
g59
(dp1003
g67
I4
ssg68
g997
sg61
(lp1004
S'http://127.0.0.1:8000/admin/default/site'
p1005
asbasbasbag54
(g70
g56
NtRp1006
(dp1007
g59
(dp1008
sg68
g606
sg61
(lp1009
g54
(g75
g56
NtRp1010
(dp1011
g59
(dp1012
g79
g80
ssg68
g1006
sg61
(lp1013
S'http_user_agent'
p1014
asbag54
(g75
g56
NtRp1015
(dp1016
g59
(dp1017
g86
g87
ssg68
g1006
sg61
(lp1018
S':'
asbag54
(g75
g56
NtRp1019
(dp1020
g59
(dp1021
sg68
g1006
sg61
(lp1022
g54
(g55
g56
NtRp1023
(dp1024
g59
(dp1025
g67
I4
ssg68
g1019
sg61
(lp1026
S'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/535.18 (KHTML, like Gecko) Chrome/18.0.1011.0 Safari/535.18'
p1027
asbasbasbag54
(g70
g56
NtRp1028
(dp1029
g59
(dp1030
sg68
g606
sg61
(lp1031
g54
(g75
g56
NtRp1032
(dp1033
g59
(dp1034
g79
g80
ssg68
g1028
sg61
(lp1035
S'http_x_requested_with'
p1036
asbag54
(g75
g56
NtRp1037
(dp1038
g59
(dp1039
g86
g87
ssg68
g1028
sg61
(lp1040
S':'
asbag54
(g75
g56
NtRp1041
(dp1042
g59
(dp1043
sg68
g1028
sg61
(lp1044
g54
(g55
g56
NtRp1045
(dp1046
g59
(dp1047
g67
I4
ssg68
g1041
sg61
(lp1048
S'XMLHttpRequest'
p1049
asbasbasbag54
(g70
g56
NtRp1050
(dp1051
g59
(dp1052
sg68
g606
sg61
(lp1053
g54
(g75
g56
NtRp1054
(dp1055
g59
(dp1056
g79
g80
ssg68
g1050
sg61
(lp1057
S'is_jython'
p1058
asbag54
(g75
g56
NtRp1059
(dp1060
g59
(dp1061
g86
g87
ssg68
g1050
sg61
(lp1062
S':'
asbag54
(g75
g56
NtRp1063
(dp1064
g59
(dp1065
sg68
g1050
sg61
(lp1066
g54
(g55
g56
NtRp1067
(dp1068
g59
(dp1069
g67
I4
ssg68
g1063
sg61
(lp1070
S'False'
p1071
asbasbasbag54
(g70
g56
NtRp1072
(dp1073
g59
(dp1074
sg68
g606
sg61
(lp1075
g54
(g75
g56
NtRp1076
(dp1077
g59
(dp1078
g79
g80
ssg68
g1072
sg61
(lp1079
S'is_pypy'
p1080
asbag54
(g75
g56
NtRp1081
(dp1082
g59
(dp1083
g86
g87
ssg68
g1072
sg61
(lp1084
S':'
asbag54
(g75
g56
NtRp1085
(dp1086
g59
(dp1087
sg68
g1072
sg61
(lp1088
g54
(g55
g56
NtRp1089
(dp1090
g59
(dp1091
g67
I4
ssg68
g1085
sg61
(lp1092
g1071
asbasbasbag54
(g70
g56
NtRp1093
(dp1094
g59
(dp1095
sg68
g606
sg61
(lp1096
g54
(g75
g56
NtRp1097
(dp1098
g59
(dp1099
g79
g80
ssg68
g1093
sg61
(lp1100
S'path_info'
p1101
asbag54
(g75
g56
NtRp1102
(dp1103
g59
(dp1104
g86
g87
ssg68
g1093
sg61
(lp1105
S':'
asbag54
(g75
g56
NtRp1106
(dp1107
g59
(dp1108
sg68
g1093
sg61
(lp1109
g54
(g55
g56
NtRp1110
(dp1111
g59
(dp1112
g67
I4
ssg68
g1106
sg61
(lp1113
S'/admin/default/enable/README'
p1114
asbasbasbag54
(g70
g56
NtRp1115
(dp1116
g59
(dp1117
sg68
g606
sg61
(lp1118
g54
(g75
g56
NtRp1119
(dp1120
g59
(dp1121
g79
g80
ssg68
g1115
sg61
(lp1122
S'query_string'
p1123
asbag54
(g75
g56
NtRp1124
(dp1125
g59
(dp1126
g86
g87
ssg68
g1115
sg61
(lp1127
S':'
asbag54
(g75
g56
NtRp1128
(dp1129
g59
(dp1130
sg68
g1115
sg61
(lp1131
g54
(g55
g56
NtRp1132
(dp1133
g59
(dp1134
g67
I4
ssg68
g1128
sg61
(lp1135
S''
asbasbasbag54
(g70
g56
NtRp1136
(dp1137
g59
(dp1138
sg68
g606
sg61
(lp1139
g54
(g75
g56
NtRp1140
(dp1141
g59
(dp1142
g79
g80
ssg68
g1136
sg61
(lp1143
S'remote_addr'
p1144
asbag54
(g75
g56
NtRp1145
(dp1146
g59
(dp1147
g86
g87
ssg68
g1136
sg61
(lp1148
S':'
asbag54
(g75
g56
NtRp1149
(dp1150
g59
(dp1151
sg68
g1136
sg61
(lp1152
g54
(g55
g56
NtRp1153
(dp1154
g59
(dp1155
g67
I4
ssg68
g1149
sg61
(lp1156
g200
asbasbasbag54
(g70
g56
NtRp1157
(dp1158
g59
(dp1159
sg68
g606
sg61
(lp1160
g54
(g75
g56
NtRp1161
(dp1162
g59
(dp1163
g79
g80
ssg68
g1157
sg61
(lp1164
S'remote_port'
p1165
asbag54
(g75
g56
NtRp1166
(dp1167
g59
(dp1168
g86
g87
ssg68
g1157
sg61
(lp1169
S':'
asbag54
(g75
g56
NtRp1170
(dp1171
g59
(dp1172
sg68
g1157
sg61
(lp1173
g54
(g55
g56
NtRp1174
(dp1175
g59
(dp1176
g67
I4
ssg68
g1170
sg61
(lp1177
S'61698'
p1178
asbasbasbag54
(g70
g56
NtRp1179
(dp1180
g59
(dp1181
sg68
g606
sg61
(lp1182
g54
(g75
g56
NtRp1183
(dp1184
g59
(dp1185
g79
g80
ssg68
g1179
sg61
(lp1186
S'request_method'
p1187
asbag54
(g75
g56
NtRp1188
(dp1189
g59
(dp1190
g86
g87
ssg68
g1179
sg61
(lp1191
S':'
asbag54
(g75
g56
NtRp1192
(dp1193
g59
(dp1194
sg68
g1179
sg61
(lp1195
g54
(g55
g56
NtRp1196
(dp1197
g59
(dp1198
g67
I4
ssg68
g1192
sg61
(lp1199
S'POST'
p1200
asbasbasbag54
(g70
g56
NtRp1201
(dp1202
g59
(dp1203
sg68
g606
sg61
(lp1204
g54
(g75
g56
NtRp1205
(dp1206
g59
(dp1207
g79
g80
ssg68
g1201
sg61
(lp1208
S'script_name'
p1209
asbag54
(g75
g56
NtRp1210
(dp1211
g59
(dp1212
g86
g87
ssg68
g1201
sg61
(lp1213
S':'
asbag54
(g75
g56
NtRp1214
(dp1215
g59
(dp1216
sg68
g1201
sg61
(lp1217
g54
(g55
g56
NtRp1218
(dp1219
g59
(dp1220
g67
I4
ssg68
g1214
sg61
(lp1221
S''
asbasbasbag54
(g70
g56
NtRp1222
(dp1223
g59
(dp1224
sg68
g606
sg61
(lp1225
g54
(g75
g56
NtRp1226
(dp1227
g59
(dp1228
g79
g80
ssg68
g1222
sg61
(lp1229
S'server_name'
p1230
asbag54
(g75
g56
NtRp1231
(dp1232
g59
(dp1233
g86
g87
ssg68
g1222
sg61
(lp1234
S':'
asbag54
(g75
g56
NtRp1235
(dp1236
g59
(dp1237
sg68
g1222
sg61
(lp1238
g54
(g55
g56
NtRp1239
(dp1240
g59
(dp1241
g67
I4
ssg68
g1235
sg61
(lp1242
S'Batou'
p1243
asbasbasbag54
(g70
g56
NtRp1244
(dp1245
g59
(dp1246
sg68
g606
sg61
(lp1247
g54
(g75
g56
NtRp1248
(dp1249
g59
(dp1250
g79
g80
ssg68
g1244
sg61
(lp1251
S'server_port'
p1252
asbag54
(g75
g56
NtRp1253
(dp1254
g59
(dp1255
g86
g87
ssg68
g1244
sg61
(lp1256
S':'
asbag54
(g75
g56
NtRp1257
(dp1258
g59
(dp1259
sg68
g1244
sg61
(lp1260
g54
(g55
g56
NtRp1261
(dp1262
g59
(dp1263
g67
I4
ssg68
g1257
sg61
(lp1264
S'8000'
p1265
asbasbasbag54
(g70
g56
NtRp1266
(dp1267
g59
(dp1268
sg68
g606
sg61
(lp1269
g54
(g75
g56
NtRp1270
(dp1271
g59
(dp1272
g79
g80
ssg68
g1266
sg61
(lp1273
S'server_protocol'
p1274
asbag54
(g75
g56
NtRp1275
(dp1276
g59
(dp1277
g86
g87
ssg68
g1266
sg61
(lp1278
S':'
asbag54
(g75
g56
NtRp1279
(dp1280
g59
(dp1281
sg68
g1266
sg61
(lp1282
g54
(g55
g56
NtRp1283
(dp1284
g59
(dp1285
g67
I4
ssg68
g1279
sg61
(lp1286
S'HTTP/1.1'
p1287
asbasbasbag54
(g70
g56
NtRp1288
(dp1289
g59
(dp1290
sg68
g606
sg61
(lp1291
g54
(g75
g56
NtRp1292
(dp1293
g59
(dp1294
g79
g80
ssg68
g1288
sg61
(lp1295
S'server_software'
p1296
asbag54
(g75
g56
NtRp1297
(dp1298
g59
(dp1299
g86
g87
ssg68
g1288
sg61
(lp1300
S':'
asbag54
(g75
g56
NtRp1301
(dp1302
g59
(dp1303
sg68
g1288
sg61
(lp1304
g54
(g55
g56
NtRp1305
(dp1306
g59
(dp1307
g67
I4
ssg68
g1301
sg61
(lp1308
S'Rocket 1.2.4'
p1309
asbasbasbag54
(g70
g56
NtRp1310
(dp1311
g59
(dp1312
sg68
g606
sg61
(lp1313
g54
(g75
g56
NtRp1314
(dp1315
g59
(dp1316
g79
g80
ssg68
g1310
sg61
(lp1317
S'web2py_crontype'
p1318
asbag54
(g75
g56
NtRp1319
(dp1320
g59
(dp1321
g86
g87
ssg68
g1310
sg61
(lp1322
S':'
asbag54
(g75
g56
NtRp1323
(dp1324
g59
(dp1325
sg68
g1310
sg61
(lp1326
g54
(g55
g56
NtRp1327
(dp1328
g59
(dp1329
g67
I4
ssg68
g1323
sg61
(lp1330
S'hard'
p1331
asbasbasbag54
(g70
g56
NtRp1332
(dp1333
g59
(dp1334
sg68
g606
sg61
(lp1335
g54
(g75
g56
NtRp1336
(dp1337
g59
(dp1338
g79
g80
ssg68
g1332
sg61
(lp1339
S'web2py_path'
p1340
asbag54
(g75
g56
NtRp1341
(dp1342
g59
(dp1343
g86
g87
ssg68
g1332
sg61
(lp1344
S':'
asbag54
(g75
g56
NtRp1345
(dp1346
g59
(dp1347
sg68
g1332
sg61
(lp1348
g54
(g55
g56
NtRp1349
(dp1350
g59
(dp1351
g67
I4
ssg68
g1345
sg61
(lp1352
g653
asbasbasbag54
(g70
g56
NtRp1353
(dp1354
g59
(dp1355
sg68
g606
sg61
(lp1356
g54
(g75
g56
NtRp1357
(dp1358
g59
(dp1359
g79
g80
ssg68
g1353
sg61
(lp1360
S'web2py_version'
p1361
asbag54
(g75
g56
NtRp1362
(dp1363
g59
(dp1364
g86
g87
ssg68
g1353
sg61
(lp1365
S':'
asbag54
(g75
g56
NtRp1366
(dp1367
g59
(dp1368
sg68
g1353
sg61
(lp1369
g54
(g55
g56
NtRp1370
(dp1371
g59
(dp1372
g67
I4
ssg68
g1366
sg61
(lp1373
g54
(g63
g56
NtRp1374
(dp1375
g59
(dp1376
g67
I3
ssg68
Nsg61
(lp1377
g54
(g70
g56
NtRp1378
(dp1379
g59
(dp1380
sg68
g1374
sg61
(lp1381
g54
(g75
g56
NtRp1382
(dp1383
g59
(dp1384
sg68
g1378
sg61
(lp1385
g54
(g55
g56
NtRp1386
(dp1387
g59
(dp1388
g67
I3
ssg68
g1382
sg61
(lp1389
S'1'
asbasbasbag54
(g70
g56
NtRp1390
(dp1391
g59
(dp1392
sg68
g1374
sg61
(lp1393
g54
(g75
g56
NtRp1394
(dp1395
g59
(dp1396
sg68
g1390
sg61
(lp1397
g54
(g55
g56
NtRp1398
(dp1399
g59
(dp1400
g67
I3
ssg68
g1394
sg61
(lp1401
S'99'
p1402
asbasbasbag54
(g70
g56
NtRp1403
(dp1404
g59
(dp1405
sg68
g1374
sg61
(lp1406
g54
(g75
g56
NtRp1407
(dp1408
g59
(dp1409
sg68
g1403
sg61
(lp1410
g54
(g55
g56
NtRp1411
(dp1412
g59
(dp1413
g67
I3
ssg68
g1407
sg61
(lp1414
S'7'
asbasbasbag54
(g70
g56
NtRp1415
(dp1416
g59
(dp1417
sg68
g1374
sg61
(lp1418
g54
(g75
g56
NtRp1419
(dp1420
g59
(dp1421
sg68
g1415
sg61
(lp1422
g54
(g55
g56
NtRp1423
(dp1424
g59
(dp1425
g67
I3
ssg68
g1419
sg61
(lp1426
S'datetime.datetime(2012, 3, 4, 22, 12, 8)'
p1427
asbasbasbag54
(g70
g56
NtRp1428
(dp1429
g59
(dp1430
sg68
g1374
sg61
(lp1431
g54
(g75
g56
NtRp1432
(dp1433
g59
(dp1434
sg68
g1428
sg61
(lp1435
g54
(g55
g56
NtRp1436
(dp1437
g59
(dp1438
g67
I3
ssg68
g1432
sg61
(lp1439
S'stable'
p1440
asbasbasbasbasbasbasbag54
(g70
g56
NtRp1441
(dp1442
g59
(dp1443
sg68
g606
sg61
(lp1444
g54
(g75
g56
NtRp1445
(dp1446
g59
(dp1447
g79
g80
ssg68
g1441
sg61
(lp1448
S'wsgi_errors'
p1449
asbag54
(g75
g56
NtRp1450
(dp1451
g59
(dp1452
g86
g87
ssg68
g1441
sg61
(lp1453
S':'
asbag54
(g75
g56
NtRp1454
(dp1455
g59
(dp1456
sg68
g1441
sg61
(lp1457
g54
(g55
g56
NtRp1458
(dp1459
g59
(dp1460
g67
I4
ssg68
g1454
sg61
(lp1461
S"<open file '<stderr>', mode 'w' at 0x01EE00B0>"
p1462
asbasbasbag54
(g70
g56
NtRp1463
(dp1464
g59
(dp1465
sg68
g606
sg61
(lp1466
g54
(g75
g56
NtRp1467
(dp1468
g59
(dp1469
g79
g80
ssg68
g1463
sg61
(lp1470
S'wsgi_file_wrapper'
p1471
asbag54
(g75
g56
NtRp1472
(dp1473
g59
(dp1474
g86
g87
ssg68
g1463
sg61
(lp1475
S':'
asbag54
(g75
g56
NtRp1476
(dp1477
g59
(dp1478
sg68
g1463
sg61
(lp1479
g54
(g55
g56
NtRp1480
(dp1481
g59
(dp1482
g67
I4
ssg68
g1476
sg61
(lp1483
S'<class wsgiref.util.FileWrapper at 0x02C6D8D0>'
p1484
asbasbasbag54
(g70
g56
NtRp1485
(dp1486
g59
(dp1487
sg68
g606
sg61
(lp1488
g54
(g75
g56
NtRp1489
(dp1490
g59
(dp1491
g79
g80
ssg68
g1485
sg61
(lp1492
S'wsgi_input'
p1493
asbag54
(g75
g56
NtRp1494
(dp1495
g59
(dp1496
g86
g87
ssg68
g1485
sg61
(lp1497
S':'
asbag54
(g75
g56
NtRp1498
(dp1499
g59
(dp1500
sg68
g1485
sg61
(lp1501
g54
(g55
g56
NtRp1502
(dp1503
g59
(dp1504
g67
I4
ssg68
g1498
sg61
(lp1505
S'<socket._fileobject object at 0x03DDB870>'
p1506
asbasbasbag54
(g70
g56
NtRp1507
(dp1508
g59
(dp1509
sg68
g606
sg61
(lp1510
g54
(g75
g56
NtRp1511
(dp1512
g59
(dp1513
g79
g80
ssg68
g1507
sg61
(lp1514
S'wsgi_multiprocess'
p1515
asbag54
(g75
g56
NtRp1516
(dp1517
g59
(dp1518
g86
g87
ssg68
g1507
sg61
(lp1519
S':'
asbag54
(g75
g56
NtRp1520
(dp1521
g59
(dp1522
sg68
g1507
sg61
(lp1523
g54
(g55
g56
NtRp1524
(dp1525
g59
(dp1526
g67
I4
ssg68
g1520
sg61
(lp1527
g1071
asbasbasbag54
(g70
g56
NtRp1528
(dp1529
g59
(dp1530
sg68
g606
sg61
(lp1531
g54
(g75
g56
NtRp1532
(dp1533
g59
(dp1534
g79
g80
ssg68
g1528
sg61
(lp1535
S'wsgi_multithread'
p1536
asbag54
(g75
g56
NtRp1537
(dp1538
g59
(dp1539
g86
g87
ssg68
g1528
sg61
(lp1540
S':'
asbag54
(g75
g56
NtRp1541
(dp1542
g59
(dp1543
sg68
g1528
sg61
(lp1544
g54
(g55
g56
NtRp1545
(dp1546
g59
(dp1547
g67
I4
ssg68
g1541
sg61
(lp1548
g97
asbasbasbag54
(g70
g56
NtRp1549
(dp1550
g59
(dp1551
sg68
g606
sg61
(lp1552
g54
(g75
g56
NtRp1553
(dp1554
g59
(dp1555
g79
g80
ssg68
g1549
sg61
(lp1556
S'wsgi_run_once'
p1557
asbag54
(g75
g56
NtRp1558
(dp1559
g59
(dp1560
g86
g87
ssg68
g1549
sg61
(lp1561
S':'
asbag54
(g75
g56
NtRp1562
(dp1563
g59
(dp1564
sg68
g1549
sg61
(lp1565
g54
(g55
g56
NtRp1566
(dp1567
g59
(dp1568
g67
I4
ssg68
g1562
sg61
(lp1569
g1071
asbasbasbag54
(g70
g56
NtRp1570
(dp1571
g59
(dp1572
sg68
g606
sg61
(lp1573
g54
(g75
g56
NtRp1574
(dp1575
g59
(dp1576
g79
g80
ssg68
g1570
sg61
(lp1577
S'wsgi_url_scheme'
p1578
asbag54
(g75
g56
NtRp1579
(dp1580
g59
(dp1581
g86
g87
ssg68
g1570
sg61
(lp1582
S':'
asbag54
(g75
g56
NtRp1583
(dp1584
g59
(dp1585
sg68
g1570
sg61
(lp1586
g54
(g55
g56
NtRp1587
(dp1588
g59
(dp1589
g67
I4
ssg68
g1583
sg61
(lp1590
S'http'
p1591
asbasbasbag54
(g70
g56
NtRp1592
(dp1593
g59
(dp1594
sg68
g606
sg61
(lp1595
g54
(g75
g56
NtRp1596
(dp1597
g59
(dp1598
g79
g80
ssg68
g1592
sg61
(lp1599
S'wsgi_version'
p1600
asbag54
(g75
g56
NtRp1601
(dp1602
g59
(dp1603
g86
g87
ssg68
g1592
sg61
(lp1604
S':'
asbag54
(g75
g56
NtRp1605
(dp1606
g59
(dp1607
sg68
g1592
sg61
(lp1608
g54
(g55
g56
NtRp1609
(dp1610
g59
(dp1611
g67
I4
ssg68
g1605
sg61
(lp1612
g54
(g63
g56
NtRp1613
(dp1614
g59
(dp1615
g67
I3
ssg68
Nsg61
(lp1616
g54
(g70
g56
NtRp1617
(dp1618
g59
(dp1619
sg68
g1613
sg61
(lp1620
g54
(g75
g56
NtRp1621
(dp1622
g59
(dp1623
sg68
g1617
sg61
(lp1624
g54
(g55
g56
NtRp1625
(dp1626
g59
(dp1627
g67
I3
ssg68
g1621
sg61
(lp1628
S'1'
asbasbasbag54
(g70
g56
NtRp1629
(dp1630
g59
(dp1631
sg68
g1613
sg61
(lp1632
g54
(g75
g56
NtRp1633
(dp1634
g59
(dp1635
sg68
g1629
sg61
(lp1636
g54
(g55
g56
NtRp1637
(dp1638
g59
(dp1639
g67
I3
ssg68
g1633
sg61
(lp1640
S'0'
asbasbasbasbasbasbasbasbasbasbasbag54
(g70
g56
NtRp1641
(dp1642
g59
(dp1643
sg68
g64
sg61
(lp1644
g54
(g75
g56
NtRp1645
(dp1646
g59
(dp1647
g79
g80
ssg68
g1641
sg61
(lp1648
S'extension'
p1649
asbag54
(g75
g56
NtRp1650
(dp1651
g59
(dp1652
g86
g87
ssg68
g1641
sg61
(lp1653
S':'
asbag54
(g75
g56
NtRp1654
(dp1655
g59
(dp1656
sg68
g1641
sg61
(lp1657
g54
(g55
g56
NtRp1658
(dp1659
g59
(dp1660
g67
I5
ssg68
g1654
sg61
(lp1661
S'html'
p1662
asbasbasbag54
(g70
g56
NtRp1663
(dp1664
g59
(dp1665
sg68
g64
sg61
(lp1666
g54
(g75
g56
NtRp1667
(dp1668
g59
(dp1669
g79
g80
ssg68
g1663
sg61
(lp1670
S'folder'
p1671
asbag54
(g75
g56
NtRp1672
(dp1673
g59
(dp1674
g86
g87
ssg68
g1663
sg61
(lp1675
S':'
asbag54
(g75
g56
NtRp1676
(dp1677
g59
(dp1678
sg68
g1663
sg61
(lp1679
g54
(g55
g56
NtRp1680
(dp1681
g59
(dp1682
g67
I5
ssg68
g1676
sg61
(lp1683
S'C:\\Users\\Bussiere\\Dropbox\\Projets\\jackpoint\\web2py\\applications\\admin\\'
p1684
asbasbasbag54
(g70
g56
NtRp1685
(dp1686
g59
(dp1687
sg68
g64
sg61
(lp1688
g54
(g75
g56
NtRp1689
(dp1690
g59
(dp1691
g79
g80
ssg68
g1685
sg61
(lp1692
S'function'
p1693
asbag54
(g75
g56
NtRp1694
(dp1695
g59
(dp1696
g86
g87
ssg68
g1685
sg61
(lp1697
S':'
asbag54
(g75
g56
NtRp1698
(dp1699
g59
(dp1700
sg68
g1685
sg61
(lp1701
g54
(g55
g56
NtRp1702
(dp1703
g59
(dp1704
g67
I5
ssg68
g1698
sg61
(lp1705
S'enable'
p1706
asbasbasbag54
(g70
g56
NtRp1707
(dp1708
g59
(dp1709
sg68
g64
sg61
(lp1710
g54
(g75
g56
NtRp1711
(dp1712
g59
(dp1713
g79
g80
ssg68
g1707
sg61
(lp1714
S'get_vars'
p1715
asbag54
(g75
g56
NtRp1716
(dp1717
g59
(dp1718
g86
g87
ssg68
g1707
sg61
(lp1719
S':'
asbag54
(g75
g56
NtRp1720
(dp1721
g59
(dp1722
sg68
g1707
sg61
(lp1723
g54
(g55
g56
NtRp1724
(dp1725
g59
(dp1726
g67
I5
ssg68
g1720
sg61
(lp1727
g54
(g63
g56
NtRp1728
(dp1729
g59
(dp1730
g67
I4
ssg68
Nsg61
(lp1731
sbasbasbasbag54
(g70
g56
NtRp1732
(dp1733
g59
(dp1734
sg68
g64
sg61
(lp1735
g54
(g75
g56
NtRp1736
(dp1737
g59
(dp1738
g79
g80
ssg68
g1732
sg61
(lp1739
S'global_settings'
p1740
asbag54
(g75
g56
NtRp1741
(dp1742
g59
(dp1743
g86
g87
ssg68
g1732
sg61
(lp1744
S':'
asbag54
(g75
g56
NtRp1745
(dp1746
g59
(dp1747
sg68
g1732
sg61
(lp1748
g54
(g55
g56
NtRp1749
(dp1750
g59
(dp1751
g67
I5
ssg68
g1745
sg61
(lp1752
g54
(g63
g56
NtRp1753
(dp1754
g59
(dp1755
g67
I4
ssg68
Nsg61
(lp1756
g54
(g70
g56
NtRp1757
(dp1758
g59
(dp1759
sg68
g1753
sg61
(lp1760
g54
(g75
g56
NtRp1761
(dp1762
g59
(dp1763
g79
g80
ssg68
g1757
sg61
(lp1764
g618
asbag54
(g75
g56
NtRp1765
(dp1766
g59
(dp1767
g86
g87
ssg68
g1757
sg61
(lp1768
S':'
asbag54
(g75
g56
NtRp1769
(dp1770
g59
(dp1771
sg68
g1757
sg61
(lp1772
g54
(g55
g56
NtRp1773
(dp1774
g59
(dp1775
g67
I4
ssg68
g1769
sg61
(lp1776
S"set(['C:\\\\Users\\\\Bussiere\\\\Dropbox\\\\Projets\\\\jackpoint\\\\web2py\\\\applications\\\\init\\\\', 'C:\\\\Users\\\\Bussiere\\\\Dropbox\\\\Projets\\\\jackpoint\\\\web2py\\\\applications\\\\admin\\\\'])"
p1777
asbasbasbag54
(g70
g56
NtRp1778
(dp1779
g59
(dp1780
sg68
g1753
sg61
(lp1781
g54
(g75
g56
NtRp1782
(dp1783
g59
(dp1784
g79
g80
ssg68
g1778
sg61
(lp1785
g640
asbag54
(g75
g56
NtRp1786
(dp1787
g59
(dp1788
g86
g87
ssg68
g1778
sg61
(lp1789
S':'
asbag54
(g75
g56
NtRp1790
(dp1791
g59
(dp1792
sg68
g1778
sg61
(lp1793
g54
(g55
g56
NtRp1794
(dp1795
g59
(dp1796
g67
I4
ssg68
g1790
sg61
(lp1797
g653
asbasbasbag54
(g70
g56
NtRp1798
(dp1799
g59
(dp1800
sg68
g1753
sg61
(lp1801
g54
(g75
g56
NtRp1802
(dp1803
g59
(dp1804
g79
g80
ssg68
g1798
sg61
(lp1805
g662
asbag54
(g75
g56
NtRp1806
(dp1807
g59
(dp1808
g86
g87
ssg68
g1798
sg61
(lp1809
S':'
asbag54
(g75
g56
NtRp1810
(dp1811
g59
(dp1812
sg68
g1798
sg61
(lp1813
g54
(g55
g56
NtRp1814
(dp1815
g59
(dp1816
g67
I4
ssg68
g1810
sg61
(lp1817
g54
(g63
g56
NtRp1818
(dp1819
g59
(dp1820
g67
I3
ssg68
Nsg61
(lp1821
sbasbasbasbag54
(g70
g56
NtRp1822
(dp1823
g59
(dp1824
sg68
g1753
sg61
(lp1825
g54
(g75
g56
NtRp1826
(dp1827
g59
(dp1828
g79
g80
ssg68
g1822
sg61
(lp1829
g687
asbag54
(g75
g56
NtRp1830
(dp1831
g59
(dp1832
g86
g87
ssg68
g1822
sg61
(lp1833
S':'
asbag54
(g75
g56
NtRp1834
(dp1835
g59
(dp1836
sg68
g1822
sg61
(lp1837
g54
(g55
g56
NtRp1838
(dp1839
g59
(dp1840
g67
I4
ssg68
g1834
sg61
(lp1841
S"<Values at 0x3c40f58: {'verbose': False, 'ip': '127.0.0.1', 'shutdown_timeout': 5, 'taskbar': False, 'nocron': False, 'pid_filename': 'httpserver.pid', 'maxthreads': None, 'softcron': False, 'server_name': 'Batou', 'bpython': False, 'nogui': False, 'port': 8000, 'extcron': False, 'debuglevel': 30, 'test': None, 'folder': 'C:\\\\Users\\\\Bussiere\\\\Dropbox\\\\Projets\\\\jackpoint\\\\web2py', 'config': '', 'import_models': False, 'winservice': '', 'shell': None, 'run': '', 'log_filename': 'httpserver.log', 'args': [''], 'socket_timeout': 5, 'ssl_ca_certificate': None, 'scheduler': None, 'profiler_filename': None, 'ssl_private_key': '', 'password': '<ask>', 'request_queue_size': 5, 'ssl_certificate': '', 'cronjob': False, 'numthreads': None, 'quiet': False, 'interfaces': None, 'minthreads': None, 'timeout': 10, 'plain': False, 'nobanner': False}>"
p1842
asbasbasbag54
(g70
g56
NtRp1843
(dp1844
g59
(dp1845
sg68
g1753
sg61
(lp1846
g54
(g75
g56
NtRp1847
(dp1848
g59
(dp1849
g79
g80
ssg68
g1843
sg61
(lp1850
g730
asbag54
(g75
g56
NtRp1851
(dp1852
g59
(dp1853
g86
g87
ssg68
g1843
sg61
(lp1854
S':'
asbag54
(g75
g56
NtRp1855
(dp1856
g59
(dp1857
sg68
g1843
sg61
(lp1858
g54
(g55
g56
NtRp1859
(dp1860
g59
(dp1861
g67
I4
ssg68
g1855
sg61
(lp1862
S'set([])'
p1863
asbasbasbag54
(g70
g56
NtRp1864
(dp1865
g59
(dp1866
sg68
g1753
sg61
(lp1867
g54
(g75
g56
NtRp1868
(dp1869
g59
(dp1870
g79
g80
ssg68
g1864
sg61
(lp1871
g752
asbag54
(g75
g56
NtRp1872
(dp1873
g59
(dp1874
g86
g87
ssg68
g1864
sg61
(lp1875
S':'
asbag54
(g75
g56
NtRp1876
(dp1877
g59
(dp1878
sg68
g1864
sg61
(lp1879
g54
(g55
g56
NtRp1880
(dp1881
g59
(dp1882
g67
I4
ssg68
g1876
sg61
(lp1883
g97
asbasbasbag54
(g70
g56
NtRp1884
(dp1885
g59
(dp1886
sg68
g1753
sg61
(lp1887
g54
(g75
g56
NtRp1888
(dp1889
g59
(dp1890
g79
g80
ssg68
g1884
sg61
(lp1891
g773
asbag54
(g75
g56
NtRp1892
(dp1893
g59
(dp1894
g86
g87
ssg68
g1884
sg61
(lp1895
S':'
asbag54
(g75
g56
NtRp1896
(dp1897
g59
(dp1898
sg68
g1884
sg61
(lp1899
g54
(g55
g56
NtRp1900
(dp1901
g59
(dp1902
g67
I4
ssg68
g1896
sg61
(lp1903
g786
asbasbasbag54
(g70
g56
NtRp1904
(dp1905
g59
(dp1906
sg68
g1753
sg61
(lp1907
g54
(g75
g56
NtRp1908
(dp1909
g59
(dp1910
g79
g80
ssg68
g1904
sg61
(lp1911
g1058
asbag54
(g75
g56
NtRp1912
(dp1913
g59
(dp1914
g86
g87
ssg68
g1904
sg61
(lp1915
S':'
asbag54
(g75
g56
NtRp1916
(dp1917
g59
(dp1918
sg68
g1904
sg61
(lp1919
g54
(g55
g56
NtRp1920
(dp1921
g59
(dp1922
g67
I4
ssg68
g1916
sg61
(lp1923
g1071
asbasbasbag54
(g70
g56
NtRp1924
(dp1925
g59
(dp1926
sg68
g1753
sg61
(lp1927
g54
(g75
g56
NtRp1928
(dp1929
g59
(dp1930
g79
g80
ssg68
g1924
sg61
(lp1931
g1080
asbag54
(g75
g56
NtRp1932
(dp1933
g59
(dp1934
g86
g87
ssg68
g1924
sg61
(lp1935
S':'
asbag54
(g75
g56
NtRp1936
(dp1937
g59
(dp1938
sg68
g1924
sg61
(lp1939
g54
(g55
g56
NtRp1940
(dp1941
g59
(dp1942
g67
I4
ssg68
g1936
sg61
(lp1943
g1071
asbasbasbag54
(g70
g56
NtRp1944
(dp1945
g59
(dp1946
sg68
g1753
sg61
(lp1947
g54
(g75
g56
NtRp1948
(dp1949
g59
(dp1950
g79
g80
ssg68
g1944
sg61
(lp1951
g1318
asbag54
(g75
g56
NtRp1952
(dp1953
g59
(dp1954
g86
g87
ssg68
g1944
sg61
(lp1955
S':'
asbag54
(g75
g56
NtRp1956
(dp1957
g59
(dp1958
sg68
g1944
sg61
(lp1959
g54
(g55
g56
NtRp1960
(dp1961
g59
(dp1962
g67
I4
ssg68
g1956
sg61
(lp1963
g1331
asbasbasbag54
(g70
g56
NtRp1964
(dp1965
g59
(dp1966
sg68
g1753
sg61
(lp1967
g54
(g75
g56
NtRp1968
(dp1969
g59
(dp1970
g79
g80
ssg68
g1964
sg61
(lp1971
g1361
asbag54
(g75
g56
NtRp1972
(dp1973
g59
(dp1974
g86
g87
ssg68
g1964
sg61
(lp1975
S':'
asbag54
(g75
g56
NtRp1976
(dp1977
g59
(dp1978
sg68
g1964
sg61
(lp1979
g54
(g55
g56
NtRp1980
(dp1981
g59
(dp1982
g67
I4
ssg68
g1976
sg61
(lp1983
g54
(g63
g56
NtRp1984
(dp1985
g59
(dp1986
g67
I3
ssg68
Nsg61
(lp1987
g54
(g70
g56
NtRp1988
(dp1989
g59
(dp1990
sg68
g1984
sg61
(lp1991
g54
(g75
g56
NtRp1992
(dp1993
g59
(dp1994
sg68
g1988
sg61
(lp1995
g54
(g55
g56
NtRp1996
(dp1997
g59
(dp1998
g67
I3
ssg68
g1992
sg61
(lp1999
S'1'
asbasbasbag54
(g70
g56
NtRp2000
(dp2001
g59
(dp2002
sg68
g1984
sg61
(lp2003
g54
(g75
g56
NtRp2004
(dp2005
g59
(dp2006
sg68
g2000
sg61
(lp2007
g54
(g55
g56
NtRp2008
(dp2009
g59
(dp2010
g67
I3
ssg68
g2004
sg61
(lp2011
S'99'
p2012
asbasbasbag54
(g70
g56
NtRp2013
(dp2014
g59
(dp2015
sg68
g1984
sg61
(lp2016
g54
(g75
g56
NtRp2017
(dp2018
g59
(dp2019
sg68
g2013
sg61
(lp2020
g54
(g55
g56
NtRp2021
(dp2022
g59
(dp2023
g67
I3
ssg68
g2017
sg61
(lp2024
S'7'
asbasbasbag54
(g70
g56
NtRp2025
(dp2026
g59
(dp2027
sg68
g1984
sg61
(lp2028
g54
(g75
g56
NtRp2029
(dp2030
g59
(dp2031
sg68
g2025
sg61
(lp2032
g54
(g55
g56
NtRp2033
(dp2034
g59
(dp2035
g67
I3
ssg68
g2029
sg61
(lp2036
S'datetime.datetime(2012, 3, 4, 22, 12, 8)'
p2037
asbasbasbag54
(g70
g56
NtRp2038
(dp2039
g59
(dp2040
sg68
g1984
sg61
(lp2041
g54
(g75
g56
NtRp2042
(dp2043
g59
(dp2044
sg68
g2038
sg61
(lp2045
g54
(g55
g56
NtRp2046
(dp2047
g59
(dp2048
g67
I3
ssg68
g2042
sg61
(lp2049
g1440
asbasbasbasbasbasbasbasbasbasbasbag54
(g70
g56
NtRp2050
(dp2051
g59
(dp2052
sg68
g64
sg61
(lp2053
g54
(g75
g56
NtRp2054
(dp2055
g59
(dp2056
g79
g80
ssg68
g2050
sg61
(lp2057
S'is_https'
p2058
asbag54
(g75
g56
NtRp2059
(dp2060
g59
(dp2061
g86
g87
ssg68
g2050
sg61
(lp2062
S':'
asbag54
(g75
g56
NtRp2063
(dp2064
g59
(dp2065
sg68
g2050
sg61
(lp2066
g54
(g55
g56
NtRp2067
(dp2068
g59
(dp2069
g67
I5
ssg68
g2063
sg61
(lp2070
g1071
asbasbasbag54
(g70
g56
NtRp2071
(dp2072
g59
(dp2073
sg68
g64
sg61
(lp2074
g54
(g75
g56
NtRp2075
(dp2076
g59
(dp2077
g79
g80
ssg68
g2071
sg61
(lp2078
S'is_local'
p2079
asbag54
(g75
g56
NtRp2080
(dp2081
g59
(dp2082
g86
g87
ssg68
g2071
sg61
(lp2083
S':'
asbag54
(g75
g56
NtRp2084
(dp2085
g59
(dp2086
sg68
g2071
sg61
(lp2087
g54
(g55
g56
NtRp2088
(dp2089
g59
(dp2090
g67
I5
ssg68
g2084
sg61
(lp2091
g97
asbasbasbag54
(g70
g56
NtRp2092
(dp2093
g59
(dp2094
sg68
g64
sg61
(lp2095
g54
(g75
g56
NtRp2096
(dp2097
g59
(dp2098
g79
g80
ssg68
g2092
sg61
(lp2099
S'is_restful'
p2100
asbag54
(g75
g56
NtRp2101
(dp2102
g59
(dp2103
g86
g87
ssg68
g2092
sg61
(lp2104
S':'
asbag54
(g75
g56
NtRp2105
(dp2106
g59
(dp2107
sg68
g2092
sg61
(lp2108
g54
(g55
g56
NtRp2109
(dp2110
g59
(dp2111
g67
I5
ssg68
g2105
sg61
(lp2112
g1071
asbasbasbag54
(g70
g56
NtRp2113
(dp2114
g59
(dp2115
sg68
g64
sg61
(lp2116
g54
(g75
g56
NtRp2117
(dp2118
g59
(dp2119
g79
g80
ssg68
g2113
sg61
(lp2120
S'now'
p2121
asbag54
(g75
g56
NtRp2122
(dp2123
g59
(dp2124
g86
g87
ssg68
g2113
sg61
(lp2125
S':'
asbag54
(g75
g56
NtRp2126
(dp2127
g59
(dp2128
sg68
g2113
sg61
(lp2129
g54
(g55
g56
NtRp2130
(dp2131
g59
(dp2132
g67
I5
ssg68
g2126
sg61
(lp2133
S'datetime.datetime(2012, 3, 13, 2, 49, 40, 81000)'
p2134
asbasbasbag54
(g70
g56
NtRp2135
(dp2136
g59
(dp2137
sg68
g64
sg61
(lp2138
g54
(g75
g56
NtRp2139
(dp2140
g59
(dp2141
g79
g80
ssg68
g2135
sg61
(lp2142
S'post_vars'
p2143
asbag54
(g75
g56
NtRp2144
(dp2145
g59
(dp2146
g86
g87
ssg68
g2135
sg61
(lp2147
S':'
asbag54
(g75
g56
NtRp2148
(dp2149
g59
(dp2150
sg68
g2135
sg61
(lp2151
g54
(g55
g56
NtRp2152
(dp2153
g59
(dp2154
g67
I5
ssg68
g2148
sg61
(lp2155
g54
(g63
g56
NtRp2156
(dp2157
g59
(dp2158
g67
I4
ssg68
Nsg61
(lp2159
sbasbasbasbag54
(g70
g56
NtRp2160
(dp2161
g59
(dp2162
sg68
g64
sg61
(lp2163
g54
(g75
g56
NtRp2164
(dp2165
g59
(dp2166
g79
g80
ssg68
g2160
sg61
(lp2167
S'raw_args'
p2168
asbag54
(g75
g56
NtRp2169
(dp2170
g59
(dp2171
g86
g87
ssg68
g2160
sg61
(lp2172
S':'
asbag54
(g75
g56
NtRp2173
(dp2174
g59
(dp2175
sg68
g2160
sg61
(lp2176
g54
(g55
g56
NtRp2177
(dp2178
g59
(dp2179
g67
I5
ssg68
g2173
sg61
(lp2180
S'README'
p2181
asbasbasbag54
(g70
g56
NtRp2182
(dp2183
g59
(dp2184
sg68
g64
sg61
(lp2185
g54
(g75
g56
NtRp2186
(dp2187
g59
(dp2188
g79
g80
ssg68
g2182
sg61
(lp2189
S'url'
p2190
asbag54
(g75
g56
NtRp2191
(dp2192
g59
(dp2193
g86
g87
ssg68
g2182
sg61
(lp2194
S':'
asbag54
(g75
g56
NtRp2195
(dp2196
g59
(dp2197
sg68
g2182
sg61
(lp2198
g54
(g55
g56
NtRp2199
(dp2200
g59
(dp2201
g67
I5
ssg68
g2195
sg61
(lp2202
S'/admin/default/enable/README'
p2203
asbasbasbag54
(g70
g56
NtRp2204
(dp2205
g59
(dp2206
sg68
g64
sg61
(lp2207
g54
(g75
g56
NtRp2208
(dp2209
g59
(dp2210
g79
g80
ssg68
g2204
sg61
(lp2211
S'utcnow'
p2212
asbag54
(g75
g56
NtRp2213
(dp2214
g59
(dp2215
g86
g87
ssg68
g2204
sg61
(lp2216
S':'
asbag54
(g75
g56
NtRp2217
(dp2218
g59
(dp2219
sg68
g2204
sg61
(lp2220
g54
(g55
g56
NtRp2221
(dp2222
g59
(dp2223
g67
I5
ssg68
g2217
sg61
(lp2224
S'datetime.datetime(2012, 3, 13, 1, 49, 40, 81000)'
p2225
asbasbasbag54
(g70
g56
NtRp2226
(dp2227
g59
(dp2228
sg68
g64
sg61
(lp2229
g54
(g75
g56
NtRp2230
(dp2231
g59
(dp2232
g79
g80
ssg68
g2226
sg61
(lp2233
S'uuid'
p2234
asbag54
(g75
g56
NtRp2235
(dp2236
g59
(dp2237
g86
g87
ssg68
g2226
sg61
(lp2238
S':'
asbag54
(g75
g56
NtRp2239
(dp2240
g59
(dp2241
sg68
g2226
sg61
(lp2242
g54
(g55
g56
NtRp2243
(dp2244
g59
(dp2245
g67
I5
ssg68
g2239
sg61
(lp2246
S'admin/127.0.0.1.2012-03-13.02-49-40.b18f7aaa-1205-4f1a-b919-3e3e0ff75585'
p2247
asbasbasbag54
(g70
g56
NtRp2248
(dp2249
g59
(dp2250
sg68
g64
sg61
(lp2251
g54
(g75
g56
NtRp2252
(dp2253
g59
(dp2254
g79
g80
ssg68
g2248
sg61
(lp2255
S'vars'
p2256
asbag54
(g75
g56
NtRp2257
(dp2258
g59
(dp2259
g86
g87
ssg68
g2248
sg61
(lp2260
S':'
asbag54
(g75
g56
NtRp2261
(dp2262
g59
(dp2263
sg68
g2248
sg61
(lp2264
g54
(g55
g56
NtRp2265
(dp2266
g59
(dp2267
g67
I5
ssg68
g2261
sg61
(lp2268
g54
(g63
g56
NtRp2269
(dp2270
g59
(dp2271
g67
I4
ssg68
Nsg61
(lp2272
sbasbasbasbag54
(g70
g56
NtRp2273
(dp2274
g59
(dp2275
sg68
g64
sg61
(lp2276
g54
(g75
g56
NtRp2277
(dp2278
g59
(dp2279
g79
g80
ssg68
g2273
sg61
(lp2280
S'wsgi'
p2281
asbag54
(g75
g56
NtRp2282
(dp2283
g59
(dp2284
g86
g87
ssg68
g2273
sg61
(lp2285
S':'
asbag54
(g75
g56
NtRp2286
(dp2287
g59
(dp2288
sg68
g2273
sg61
(lp2289
g54
(g55
g56
NtRp2290
(dp2291
g59
(dp2292
g67
I5
ssg68
g2286
sg61
(lp2293
g54
(g63
g56
NtRp2294
(dp2295
g59
(dp2296
g67
I4
ssg68
Nsg61
(lp2297
g54
(g70
g56
NtRp2298
(dp2299
g59
(dp2300
sg68
g2294
sg61
(lp2301
g54
(g75
g56
NtRp2302
(dp2303
g59
(dp2304
g79
g80
ssg68
g2298
sg61
(lp2305
S'environ'
p2306
asbag54
(g75
g56
NtRp2307
(dp2308
g59
(dp2309
g86
g87
ssg68
g2298
sg61
(lp2310
S':'
asbag54
(g75
g56
NtRp2311
(dp2312
g59
(dp2313
sg68
g2298
sg61
(lp2314
g54
(g55
g56
NtRp2315
(dp2316
g59
(dp2317
g67
I4
ssg68
g2311
sg61
(lp2318
g54
(g63
g56
NtRp2319
(dp2320
g59
(dp2321
g67
I3
ssg68
Nsg61
(lp2322
g54
(g70
g56
NtRp2323
(dp2324
g59
(dp2325
sg68
g2319
sg61
(lp2326
g54
(g75
g56
NtRp2327
(dp2328
g59
(dp2329
g79
g80
ssg68
g2323
sg61
(lp2330
S'CONTENT_LENGTH'
p2331
asbag54
(g75
g56
NtRp2332
(dp2333
g59
(dp2334
g86
g87
ssg68
g2323
sg61
(lp2335
S':'
asbag54
(g75
g56
NtRp2336
(dp2337
g59
(dp2338
sg68
g2323
sg61
(lp2339
g54
(g55
g56
NtRp2340
(dp2341
g59
(dp2342
g67
I3
ssg68
g2336
sg61
(lp2343
S'0'
asbasbasbag54
(g70
g56
NtRp2344
(dp2345
g59
(dp2346
sg68
g2319
sg61
(lp2347
g54
(g75
g56
NtRp2348
(dp2349
g59
(dp2350
g79
g80
ssg68
g2344
sg61
(lp2351
S'HTTP_ACCEPT'
p2352
asbag54
(g75
g56
NtRp2353
(dp2354
g59
(dp2355
g86
g87
ssg68
g2344
sg61
(lp2356
S':'
asbag54
(g75
g56
NtRp2357
(dp2358
g59
(dp2359
sg68
g2344
sg61
(lp2360
g54
(g55
g56
NtRp2361
(dp2362
g59
(dp2363
g67
I3
ssg68
g2357
sg61
(lp2364
g808
asbasbasbag54
(g70
g56
NtRp2365
(dp2366
g59
(dp2367
sg68
g2319
sg61
(lp2368
g54
(g75
g56
NtRp2369
(dp2370
g59
(dp2371
g79
g80
ssg68
g2365
sg61
(lp2372
S'HTTP_ACCEPT_CHARSET'
p2373
asbag54
(g75
g56
NtRp2374
(dp2375
g59
(dp2376
g86
g87
ssg68
g2365
sg61
(lp2377
S':'
asbag54
(g75
g56
NtRp2378
(dp2379
g59
(dp2380
sg68
g2365
sg61
(lp2381
g54
(g55
g56
NtRp2382
(dp2383
g59
(dp2384
g67
I3
ssg68
g2378
sg61
(lp2385
g830
asbasbasbag54
(g70
g56
NtRp2386
(dp2387
g59
(dp2388
sg68
g2319
sg61
(lp2389
g54
(g75
g56
NtRp2390
(dp2391
g59
(dp2392
g79
g80
ssg68
g2386
sg61
(lp2393
S'HTTP_ACCEPT_ENCODING'
p2394
asbag54
(g75
g56
NtRp2395
(dp2396
g59
(dp2397
g86
g87
ssg68
g2386
sg61
(lp2398
S':'
asbag54
(g75
g56
NtRp2399
(dp2400
g59
(dp2401
sg68
g2386
sg61
(lp2402
g54
(g55
g56
NtRp2403
(dp2404
g59
(dp2405
g67
I3
ssg68
g2399
sg61
(lp2406
g852
asbasbasbag54
(g70
g56
NtRp2407
(dp2408
g59
(dp2409
sg68
g2319
sg61
(lp2410
g54
(g75
g56
NtRp2411
(dp2412
g59
(dp2413
g79
g80
ssg68
g2407
sg61
(lp2414
S'HTTP_ACCEPT_LANGUAGE'
p2415
asbag54
(g75
g56
NtRp2416
(dp2417
g59
(dp2418
g86
g87
ssg68
g2407
sg61
(lp2419
S':'
asbag54
(g75
g56
NtRp2420
(dp2421
g59
(dp2422
sg68
g2407
sg61
(lp2423
g54
(g55
g56
NtRp2424
(dp2425
g59
(dp2426
g67
I3
ssg68
g2420
sg61
(lp2427
g874
asbasbasbag54
(g70
g56
NtRp2428
(dp2429
g59
(dp2430
sg68
g2319
sg61
(lp2431
g54
(g75
g56
NtRp2432
(dp2433
g59
(dp2434
g79
g80
ssg68
g2428
sg61
(lp2435
S'HTTP_CONNECTION'
p2436
asbag54
(g75
g56
NtRp2437
(dp2438
g59
(dp2439
g86
g87
ssg68
g2428
sg61
(lp2440
S':'
asbag54
(g75
g56
NtRp2441
(dp2442
g59
(dp2443
sg68
g2428
sg61
(lp2444
g54
(g55
g56
NtRp2445
(dp2446
g59
(dp2447
g67
I3
ssg68
g2441
sg61
(lp2448
g896
asbasbasbag54
(g70
g56
NtRp2449
(dp2450
g59
(dp2451
sg68
g2319
sg61
(lp2452
g54
(g75
g56
NtRp2453
(dp2454
g59
(dp2455
g79
g80
ssg68
g2449
sg61
(lp2456
S'HTTP_CONTENT_LENGTH'
p2457
asbag54
(g75
g56
NtRp2458
(dp2459
g59
(dp2460
g86
g87
ssg68
g2449
sg61
(lp2461
S':'
asbag54
(g75
g56
NtRp2462
(dp2463
g59
(dp2464
sg68
g2449
sg61
(lp2465
g54
(g55
g56
NtRp2466
(dp2467
g59
(dp2468
g67
I3
ssg68
g2462
sg61
(lp2469
S'0'
asbasbasbag54
(g70
g56
NtRp2470
(dp2471
g59
(dp2472
sg68
g2319
sg61
(lp2473
g54
(g75
g56
NtRp2474
(dp2475
g59
(dp2476
g79
g80
ssg68
g2470
sg61
(lp2477
S'HTTP_COOKIE'
p2478
asbag54
(g75
g56
NtRp2479
(dp2480
g59
(dp2481
g86
g87
ssg68
g2470
sg61
(lp2482
S':'
asbag54
(g75
g56
NtRp2483
(dp2484
g59
(dp2485
sg68
g2470
sg61
(lp2486
g54
(g55
g56
NtRp2487
(dp2488
g59
(dp2489
g67
I3
ssg68
g2483
sg61
(lp2490
g939
asbasbasbag54
(g70
g56
NtRp2491
(dp2492
g59
(dp2493
sg68
g2319
sg61
(lp2494
g54
(g75
g56
NtRp2495
(dp2496
g59
(dp2497
g79
g80
ssg68
g2491
sg61
(lp2498
S'HTTP_HOST'
p2499
asbag54
(g75
g56
NtRp2500
(dp2501
g59
(dp2502
g86
g87
ssg68
g2491
sg61
(lp2503
S':'
asbag54
(g75
g56
NtRp2504
(dp2505
g59
(dp2506
sg68
g2491
sg61
(lp2507
g54
(g55
g56
NtRp2508
(dp2509
g59
(dp2510
g67
I3
ssg68
g2504
sg61
(lp2511
g961
asbasbasbag54
(g70
g56
NtRp2512
(dp2513
g59
(dp2514
sg68
g2319
sg61
(lp2515
g54
(g75
g56
NtRp2516
(dp2517
g59
(dp2518
g79
g80
ssg68
g2512
sg61
(lp2519
S'HTTP_ORIGIN'
p2520
asbag54
(g75
g56
NtRp2521
(dp2522
g59
(dp2523
g86
g87
ssg68
g2512
sg61
(lp2524
S':'
asbag54
(g75
g56
NtRp2525
(dp2526
g59
(dp2527
sg68
g2512
sg61
(lp2528
g54
(g55
g56
NtRp2529
(dp2530
g59
(dp2531
g67
I3
ssg68
g2525
sg61
(lp2532
g983
asbasbasbag54
(g70
g56
NtRp2533
(dp2534
g59
(dp2535
sg68
g2319
sg61
(lp2536
g54
(g75
g56
NtRp2537
(dp2538
g59
(dp2539
g79
g80
ssg68
g2533
sg61
(lp2540
S'HTTP_REFERER'
p2541
asbag54
(g75
g56
NtRp2542
(dp2543
g59
(dp2544
g86
g87
ssg68
g2533
sg61
(lp2545
S':'
asbag54
(g75
g56
NtRp2546
(dp2547
g59
(dp2548
sg68
g2533
sg61
(lp2549
g54
(g55
g56
NtRp2550
(dp2551
g59
(dp2552
g67
I3
ssg68
g2546
sg61
(lp2553
g1005
asbasbasbag54
(g70
g56
NtRp2554
(dp2555
g59
(dp2556
sg68
g2319
sg61
(lp2557
g54
(g75
g56
NtRp2558
(dp2559
g59
(dp2560
g79
g80
ssg68
g2554
sg61
(lp2561
S'HTTP_USER_AGENT'
p2562
asbag54
(g75
g56
NtRp2563
(dp2564
g59
(dp2565
g86
g87
ssg68
g2554
sg61
(lp2566
S':'
asbag54
(g75
g56
NtRp2567
(dp2568
g59
(dp2569
sg68
g2554
sg61
(lp2570
g54
(g55
g56
NtRp2571
(dp2572
g59
(dp2573
g67
I3
ssg68
g2567
sg61
(lp2574
g1027
asbasbasbag54
(g70
g56
NtRp2575
(dp2576
g59
(dp2577
sg68
g2319
sg61
(lp2578
g54
(g75
g56
NtRp2579
(dp2580
g59
(dp2581
g79
g80
ssg68
g2575
sg61
(lp2582
S'HTTP_X_REQUESTED_WITH'
p2583
asbag54
(g75
g56
NtRp2584
(dp2585
g59
(dp2586
g86
g87
ssg68
g2575
sg61
(lp2587
S':'
asbag54
(g75
g56
NtRp2588
(dp2589
g59
(dp2590
sg68
g2575
sg61
(lp2591
g54
(g55
g56
NtRp2592
(dp2593
g59
(dp2594
g67
I3
ssg68
g2588
sg61
(lp2595
g1049
asbasbasbag54
(g70
g56
NtRp2596
(dp2597
g59
(dp2598
sg68
g2319
sg61
(lp2599
g54
(g75
g56
NtRp2600
(dp2601
g59
(dp2602
g79
g80
ssg68
g2596
sg61
(lp2603
S'PATH_INFO'
p2604
asbag54
(g75
g56
NtRp2605
(dp2606
g59
(dp2607
g86
g87
ssg68
g2596
sg61
(lp2608
S':'
asbag54
(g75
g56
NtRp2609
(dp2610
g59
(dp2611
sg68
g2596
sg61
(lp2612
g54
(g55
g56
NtRp2613
(dp2614
g59
(dp2615
g67
I3
ssg68
g2609
sg61
(lp2616
g1114
asbasbasbag54
(g70
g56
NtRp2617
(dp2618
g59
(dp2619
sg68
g2319
sg61
(lp2620
g54
(g75
g56
NtRp2621
(dp2622
g59
(dp2623
g79
g80
ssg68
g2617
sg61
(lp2624
S'QUERY_STRING'
p2625
asbag54
(g75
g56
NtRp2626
(dp2627
g59
(dp2628
g86
g87
ssg68
g2617
sg61
(lp2629
S':'
asbag54
(g75
g56
NtRp2630
(dp2631
g59
(dp2632
sg68
g2617
sg61
(lp2633
g54
(g55
g56
NtRp2634
(dp2635
g59
(dp2636
g67
I3
ssg68
g2630
sg61
(lp2637
S''
asbasbasbag54
(g70
g56
NtRp2638
(dp2639
g59
(dp2640
sg68
g2319
sg61
(lp2641
g54
(g75
g56
NtRp2642
(dp2643
g59
(dp2644
g79
g80
ssg68
g2638
sg61
(lp2645
S'REMOTE_ADDR'
p2646
asbag54
(g75
g56
NtRp2647
(dp2648
g59
(dp2649
g86
g87
ssg68
g2638
sg61
(lp2650
S':'
asbag54
(g75
g56
NtRp2651
(dp2652
g59
(dp2653
sg68
g2638
sg61
(lp2654
g54
(g55
g56
NtRp2655
(dp2656
g59
(dp2657
g67
I3
ssg68
g2651
sg61
(lp2658
g200
asbasbasbag54
(g70
g56
NtRp2659
(dp2660
g59
(dp2661
sg68
g2319
sg61
(lp2662
g54
(g75
g56
NtRp2663
(dp2664
g59
(dp2665
g79
g80
ssg68
g2659
sg61
(lp2666
S'REMOTE_PORT'
p2667
asbag54
(g75
g56
NtRp2668
(dp2669
g59
(dp2670
g86
g87
ssg68
g2659
sg61
(lp2671
S':'
asbag54
(g75
g56
NtRp2672
(dp2673
g59
(dp2674
sg68
g2659
sg61
(lp2675
g54
(g55
g56
NtRp2676
(dp2677
g59
(dp2678
g67
I3
ssg68
g2672
sg61
(lp2679
g1178
asbasbasbag54
(g70
g56
NtRp2680
(dp2681
g59
(dp2682
sg68
g2319
sg61
(lp2683
g54
(g75
g56
NtRp2684
(dp2685
g59
(dp2686
g79
g80
ssg68
g2680
sg61
(lp2687
S'REQUEST_METHOD'
p2688
asbag54
(g75
g56
NtRp2689
(dp2690
g59
(dp2691
g86
g87
ssg68
g2680
sg61
(lp2692
S':'
asbag54
(g75
g56
NtRp2693
(dp2694
g59
(dp2695
sg68
g2680
sg61
(lp2696
g54
(g55
g56
NtRp2697
(dp2698
g59
(dp2699
g67
I3
ssg68
g2693
sg61
(lp2700
g1200
asbasbasbag54
(g70
g56
NtRp2701
(dp2702
g59
(dp2703
sg68
g2319
sg61
(lp2704
g54
(g75
g56
NtRp2705
(dp2706
g59
(dp2707
g79
g80
ssg68
g2701
sg61
(lp2708
S'SCRIPT_NAME'
p2709
asbag54
(g75
g56
NtRp2710
(dp2711
g59
(dp2712
g86
g87
ssg68
g2701
sg61
(lp2713
S':'
asbag54
(g75
g56
NtRp2714
(dp2715
g59
(dp2716
sg68
g2701
sg61
(lp2717
g54
(g55
g56
NtRp2718
(dp2719
g59
(dp2720
g67
I3
ssg68
g2714
sg61
(lp2721
S''
asbasbasbag54
(g70
g56
NtRp2722
(dp2723
g59
(dp2724
sg68
g2319
sg61
(lp2725
g54
(g75
g56
NtRp2726
(dp2727
g59
(dp2728
g79
g80
ssg68
g2722
sg61
(lp2729
S'SERVER_NAME'
p2730
asbag54
(g75
g56
NtRp2731
(dp2732
g59
(dp2733
g86
g87
ssg68
g2722
sg61
(lp2734
S':'
asbag54
(g75
g56
NtRp2735
(dp2736
g59
(dp2737
sg68
g2722
sg61
(lp2738
g54
(g55
g56
NtRp2739
(dp2740
g59
(dp2741
g67
I3
ssg68
g2735
sg61
(lp2742
g1243
asbasbasbag54
(g70
g56
NtRp2743
(dp2744
g59
(dp2745
sg68
g2319
sg61
(lp2746
g54
(g75
g56
NtRp2747
(dp2748
g59
(dp2749
g79
g80
ssg68
g2743
sg61
(lp2750
S'SERVER_PORT'
p2751
asbag54
(g75
g56
NtRp2752
(dp2753
g59
(dp2754
g86
g87
ssg68
g2743
sg61
(lp2755
S':'
asbag54
(g75
g56
NtRp2756
(dp2757
g59
(dp2758
sg68
g2743
sg61
(lp2759
g54
(g55
g56
NtRp2760
(dp2761
g59
(dp2762
g67
I3
ssg68
g2756
sg61
(lp2763
g1265
asbasbasbag54
(g70
g56
NtRp2764
(dp2765
g59
(dp2766
sg68
g2319
sg61
(lp2767
g54
(g75
g56
NtRp2768
(dp2769
g59
(dp2770
g79
g80
ssg68
g2764
sg61
(lp2771
S'SERVER_PROTOCOL'
p2772
asbag54
(g75
g56
NtRp2773
(dp2774
g59
(dp2775
g86
g87
ssg68
g2764
sg61
(lp2776
S':'
asbag54
(g75
g56
NtRp2777
(dp2778
g59
(dp2779
sg68
g2764
sg61
(lp2780
g54
(g55
g56
NtRp2781
(dp2782
g59
(dp2783
g67
I3
ssg68
g2777
sg61
(lp2784
g1287
asbasbasbag54
(g70
g56
NtRp2785
(dp2786
g59
(dp2787
sg68
g2319
sg61
(lp2788
g54
(g75
g56
NtRp2789
(dp2790
g59
(dp2791
g79
g80
ssg68
g2785
sg61
(lp2792
S'SERVER_SOFTWARE'
p2793
asbag54
(g75
g56
NtRp2794
(dp2795
g59
(dp2796
g86
g87
ssg68
g2785
sg61
(lp2797
S':'
asbag54
(g75
g56
NtRp2798
(dp2799
g59
(dp2800
sg68
g2785
sg61
(lp2801
g54
(g55
g56
NtRp2802
(dp2803
g59
(dp2804
g67
I3
ssg68
g2798
sg61
(lp2805
g1309
asbasbasbag54
(g70
g56
NtRp2806
(dp2807
g59
(dp2808
sg68
g2319
sg61
(lp2809
g54
(g75
g56
NtRp2810
(dp2811
g59
(dp2812
g79
g80
ssg68
g2806
sg61
(lp2813
S'wsgi.errors'
p2814
asbag54
(g75
g56
NtRp2815
(dp2816
g59
(dp2817
g86
g87
ssg68
g2806
sg61
(lp2818
S':'
asbag54
(g75
g56
NtRp2819
(dp2820
g59
(dp2821
sg68
g2806
sg61
(lp2822
g54
(g55
g56
NtRp2823
(dp2824
g59
(dp2825
g67
I3
ssg68
g2819
sg61
(lp2826
S"<open file '<stderr>', mode 'w' at 0x01EE00B0>"
p2827
asbasbasbag54
(g70
g56
NtRp2828
(dp2829
g59
(dp2830
sg68
g2319
sg61
(lp2831
g54
(g75
g56
NtRp2832
(dp2833
g59
(dp2834
g79
g80
ssg68
g2828
sg61
(lp2835
S'wsgi.file_wrapper'
p2836
asbag54
(g75
g56
NtRp2837
(dp2838
g59
(dp2839
g86
g87
ssg68
g2828
sg61
(lp2840
S':'
asbag54
(g75
g56
NtRp2841
(dp2842
g59
(dp2843
sg68
g2828
sg61
(lp2844
g54
(g55
g56
NtRp2845
(dp2846
g59
(dp2847
g67
I3
ssg68
g2841
sg61
(lp2848
S'<class wsgiref.util.FileWrapper at 0x02C6D8D0>'
p2849
asbasbasbag54
(g70
g56
NtRp2850
(dp2851
g59
(dp2852
sg68
g2319
sg61
(lp2853
g54
(g75
g56
NtRp2854
(dp2855
g59
(dp2856
g79
g80
ssg68
g2850
sg61
(lp2857
S'wsgi.input'
p2858
asbag54
(g75
g56
NtRp2859
(dp2860
g59
(dp2861
g86
g87
ssg68
g2850
sg61
(lp2862
S':'
asbag54
(g75
g56
NtRp2863
(dp2864
g59
(dp2865
sg68
g2850
sg61
(lp2866
g54
(g55
g56
NtRp2867
(dp2868
g59
(dp2869
g67
I3
ssg68
g2863
sg61
(lp2870
S"<open file '<fdopen>', mode 'w+b' at 0x03DCF0F8>"
p2871
asbasbasbag54
(g70
g56
NtRp2872
(dp2873
g59
(dp2874
sg68
g2319
sg61
(lp2875
g54
(g75
g56
NtRp2876
(dp2877
g59
(dp2878
g79
g80
ssg68
g2872
sg61
(lp2879
S'wsgi.multiprocess'
p2880
asbag54
(g75
g56
NtRp2881
(dp2882
g59
(dp2883
g86
g87
ssg68
g2872
sg61
(lp2884
S':'
asbag54
(g75
g56
NtRp2885
(dp2886
g59
(dp2887
sg68
g2872
sg61
(lp2888
g54
(g55
g56
NtRp2889
(dp2890
g59
(dp2891
g67
I3
ssg68
g2885
sg61
(lp2892
g1071
asbasbasbag54
(g70
g56
NtRp2893
(dp2894
g59
(dp2895
sg68
g2319
sg61
(lp2896
g54
(g75
g56
NtRp2897
(dp2898
g59
(dp2899
g79
g80
ssg68
g2893
sg61
(lp2900
S'wsgi.multithread'
p2901
asbag54
(g75
g56
NtRp2902
(dp2903
g59
(dp2904
g86
g87
ssg68
g2893
sg61
(lp2905
S':'
asbag54
(g75
g56
NtRp2906
(dp2907
g59
(dp2908
sg68
g2893
sg61
(lp2909
g54
(g55
g56
NtRp2910
(dp2911
g59
(dp2912
g67
I3
ssg68
g2906
sg61
(lp2913
g97
asbasbasbag54
(g70
g56
NtRp2914
(dp2915
g59
(dp2916
sg68
g2319
sg61
(lp2917
g54
(g75
g56
NtRp2918
(dp2919
g59
(dp2920
g79
g80
ssg68
g2914
sg61
(lp2921
S'wsgi.run_once'
p2922
asbag54
(g75
g56
NtRp2923
(dp2924
g59
(dp2925
g86
g87
ssg68
g2914
sg61
(lp2926
S':'
asbag54
(g75
g56
NtRp2927
(dp2928
g59
(dp2929
sg68
g2914
sg61
(lp2930
g54
(g55
g56
NtRp2931
(dp2932
g59
(dp2933
g67
I3
ssg68
g2927
sg61
(lp2934
g1071
asbasbasbag54
(g70
g56
NtRp2935
(dp2936
g59
(dp2937
sg68
g2319
sg61
(lp2938
g54
(g75
g56
NtRp2939
(dp2940
g59
(dp2941
g79
g80
ssg68
g2935
sg61
(lp2942
S'wsgi.url_scheme'
p2943
asbag54
(g75
g56
NtRp2944
(dp2945
g59
(dp2946
g86
g87
ssg68
g2935
sg61
(lp2947
S':'
asbag54
(g75
g56
NtRp2948
(dp2949
g59
(dp2950
sg68
g2935
sg61
(lp2951
g54
(g55
g56
NtRp2952
(dp2953
g59
(dp2954
g67
I3
ssg68
g2948
sg61
(lp2955
g1591
asbasbasbag54
(g70
g56
NtRp2956
(dp2957
g59
(dp2958
sg68
g2319
sg61
(lp2959
g54
(g75
g56
NtRp2960
(dp2961
g59
(dp2962
g79
g80
ssg68
g2956
sg61
(lp2963
S'wsgi.version'
p2964
asbag54
(g75
g56
NtRp2965
(dp2966
g59
(dp2967
g86
g87
ssg68
g2956
sg61
(lp2968
S':'
asbag54
(g75
g56
NtRp2969
(dp2970
g59
(dp2971
sg68
g2956
sg61
(lp2972
g54
(g55
g56
NtRp2973
(dp2974
g59
(dp2975
g67
I3
ssg68
g2969
sg61
(lp2976
S'1'
asbasbasbasbasbasbasbasbasbasbasbasbasbsS'frames'
p2977
(lp2978
(dp2979
S'file'
p2980
S'C:\\Users\\Bussiere\\Dropbox\\Projets\\jackpoint\\web2py\\gluon\\restricted.py'
p2981
sS'dump'
p2982
(dp2983
sS'lnum'
p2984
I205
sS'lines'
p2985
(dp2986
I200
S'    try:'
p2987
sI201
S'        if type(code) == types.CodeType:'
p2988
sI202
S'            ccode = code'
p2989
sI203
S'        else:'
p2990
sI204
S'            ccode = compile2(code,layer)'
p2991
sI205
S'        exec ccode in environment'
p2992
sI206
S'    except HTTP:'
p2993
sI207
S'        raise'
p2994
sI208
S'    except RestrictedError:'
p2995
sI209
S'        # do not encapsulate (obfuscate) the original RestrictedError'
p2996
ssS'call'
p2997
S'(code="# coding: utf8\\n\\nEXPERIMENTAL_STUFF = True\\n\\nif EX...te\'))\\n\\n\\n\\nresponse._vars=response._caller(enable)\\n", environment={\'A\': <class \'gluon.html.A\'>, \'ALLOW_TOGGLE\': \'true\', \'A_button\': <function A_button at 0x03EDB370>, \'B\': <class \'gluon.html.B\'>, \'BEAUTIFY\': <class \'gluon.html.BEAUTIFY\'>, \'BODY\': <class \'gluon.html.BODY\'>, \'BR\': <class \'gluon.html.BR\'>, \'BUTTON\': <class \'gluon.html.BUTTON\'>, \'CAT\': <class \'gluon.html.CAT\'>, \'CENTER\': <class \'gluon.html.CENTER\'>, ...}, layer=r\'C:\\Users\\Bussiere\\Dropbox\\Projets\\jackpoint\\web2py\\applications\\admin\\controllers/default.py\')'
p2998
sS'func'
p2999
S'restricted'
p3000
sa(dp3001
g2980
S'C:\\Users\\Bussiere\\Dropbox\\Projets\\jackpoint\\web2py\\applications\\admin\\controllers\\default.py'
p3002
sg2982
(dp3003
sg2984
I1352
sg2985
(dp3004
I1344
S'def reload_routes():'
p3005
sI1345
S'    """ Reload routes.py """'
p3006
sI1346
S'    import gluon.rewrite'
p3007
sI1347
S'    gluon.rewrite.load()'
p3008
sI1348
S"    redirect(URL('site'))"
p3009
sI1349
S''
sI1350
S''
sI1341
S'    else:'
p3010
sI1342
S'        return dict(form=T("Disabled"))'
p3011
sI1343
S''
ssg2997
S'()'
p3012
sg2999
S'<module>'
p3013
sa(dp3014
g2980
S'C:\\Users\\Bussiere\\Dropbox\\Projets\\jackpoint\\web2py\\gluon\\globals.py'
p3015
sg2982
(dp3016
sg2984
I173
sg2985
(dp3017
I168
S'        self.menu = []             # used by the default view layout'
p3018
sI169
S'        self.files = []            # used by web2py_ajax.html'
p3019
sI170
S'        self.generic_patterns = [] # patterns to allow generic views'
p3020
sI171
S"        self.delimiters = ('{{','}}')"
p3021
sI172
S'        self._vars = None'
p3022
sI173
S'        self._caller = lambda f: f()'
p3023
sI174
S'        self._view_environment = None'
p3024
sI175
S'        self._custom_commit = None'
p3025
sI176
S'        self._custom_rollback = None'
p3026
sI177
S''
ssg2997
S'(f=<function enable at 0x03E0BAB0>)'
p3027
sg2999
S'<lambda>'
p3028
sa(dp3029
g2980
S'C:\\Users\\Bussiere\\Dropbox\\Projets\\jackpoint\\web2py\\applications\\admin\\controllers\\default.py'
p3030
sg2982
(dp3031
sg2984
I344
sg2985
(dp3032
I339
S"    filename = os.path.join(apath(app, r=request),'DISABLED')"
p3033
sI340
S'    if os.path.exists(filename):'
p3034
sI341
S'        os.unlink(filename)'
p3035
sI342
S"        return SPAN(T('Disable'),_style='color:green')"
p3036
sI343
S'    else:'
p3037
sI344
S"        open(filename,'wb').write(time.ctime())"
p3038
sI345
S"        return SPAN(T('Enable'),_style='color:red')"
p3039
sI346
S''
sI347
S'def peek():'
p3040
sI348
S'    """ Visualize object code """'
p3041
ssg2997
S'()'
p3042
sg2999
S'enable'
p3043
sasS'pyver'
p3044
S'Python 2.5.4: C:\\Users\\Bussiere\\Dropbox\\Projets\\jackpoint\\web2py\\web2py.exe'
p3045
sS'session'
p3046
g54
(g55
g56
NtRp3047
(dp3048
g59
(dp3049
sg61
(lp3050
g54
(g63
g56
NtRp3051
(dp3052
g59
(dp3053
g67
I5
ssg68
Nsg61
(lp3054
g54
(g70
g56
NtRp3055
(dp3056
g59
(dp3057
sg68
g3051
sg61
(lp3058
g54
(g75
g56
NtRp3059
(dp3060
g59
(dp3061
g79
g80
ssg68
g3055
sg61
(lp3062
S'authorized'
p3063
asbag54
(g75
g56
NtRp3064
(dp3065
g59
(dp3066
g86
g87
ssg68
g3055
sg61
(lp3067
S':'
asbag54
(g75
g56
NtRp3068
(dp3069
g59
(dp3070
sg68
g3055
sg61
(lp3071
g54
(g55
g56
NtRp3072
(dp3073
g59
(dp3074
g67
I5
ssg68
g3068
sg61
(lp3075
g97
asbasbasbag54
(g70
g56
NtRp3076
(dp3077
g59
(dp3078
sg68
g3051
sg61
(lp3079
g54
(g75
g56
NtRp3080
(dp3081
g59
(dp3082
g79
g80
ssg68
g3076
sg61
(lp3083
S'check_version'
p3084
asbag54
(g75
g56
NtRp3085
(dp3086
g59
(dp3087
g86
g87
ssg68
g3076
sg61
(lp3088
S':'
asbag54
(g75
g56
NtRp3089
(dp3090
g59
(dp3091
sg68
g3076
sg61
(lp3092
g54
(g55
g56
NtRp3093
(dp3094
g59
(dp3095
g67
I5
ssg68
g3089
sg61
(lp3096
g1071
asbasbasbag54
(g70
g56
NtRp3097
(dp3098
g59
(dp3099
sg68
g3051
sg61
(lp3100
g54
(g75
g56
NtRp3101
(dp3102
g59
(dp3103
g79
g80
ssg68
g3097
sg61
(lp3104
S'last_time'
p3105
asbag54
(g75
g56
NtRp3106
(dp3107
g59
(dp3108
g86
g87
ssg68
g3097
sg61
(lp3109
S':'
asbag54
(g75
g56
NtRp3110
(dp3111
g59
(dp3112
sg68
g3097
sg61
(lp3113
g54
(g55
g56
NtRp3114
(dp3115
g59
(dp3116
g67
I5
ssg68
g3110
sg61
(lp3117
S'1331603380.1140001'
p3118
asbasbasbasbasbsS'etype'
p3119
S"<type 'exceptions.IOError'>"
p3120
sS'date'
p3121
S'Tue Mar 13 02:49:40 2012'
p3122
sS'response'
p3123
g54
(g55
g56
NtRp3124
(dp3125
g59
(dp3126
sg61
(lp3127
g54
(g63
g56
NtRp3128
(dp3129
g59
(dp3130
g67
I5
ssg68
Nsg61
(lp3131
g54
(g70
g56
NtRp3132
(dp3133
g59
(dp3134
sg68
g3128
sg61
(lp3135
g54
(g75
g56
NtRp3136
(dp3137
g59
(dp3138
g79
g80
ssg68
g3132
sg61
(lp3139
g165
asbag54
(g75
g56
NtRp3140
(dp3141
g59
(dp3142
g86
g87
ssg68
g3132
sg61
(lp3143
S':'
asbag54
(g75
g56
NtRp3144
(dp3145
g59
(dp3146
sg68
g3132
sg61
(lp3147
g54
(g55
g56
NtRp3148
(dp3149
g59
(dp3150
g67
I5
ssg68
g3144
sg61
(lp3151
S'<cStringIO.StringO object at 0x0405FEC0>'
p3152
asbasbasbag54
(g70
g56
NtRp3153
(dp3154
g59
(dp3155
sg68
g3128
sg61
(lp3156
g54
(g75
g56
NtRp3157
(dp3158
g59
(dp3159
g79
g80
ssg68
g3153
sg61
(lp3160
g231
asbag54
(g75
g56
NtRp3161
(dp3162
g59
(dp3163
g86
g87
ssg68
g3153
sg61
(lp3164
S':'
asbag54
(g75
g56
NtRp3165
(dp3166
g59
(dp3167
sg68
g3153
sg61
(lp3168
g54
(g55
g56
NtRp3169
(dp3170
g59
(dp3171
g67
I5
ssg68
g3165
sg61
(lp3172
g54
(g63
g56
NtRp3173
(dp3174
g59
(dp3175
g67
I4
ssg68
Nsg61
(lp3176
g54
(g70
g56
NtRp3177
(dp3178
g59
(dp3179
sg68
g3173
sg61
(lp3180
g54
(g75
g56
NtRp3181
(dp3182
g59
(dp3183
g79
g80
ssg68
g3177
sg61
(lp3184
S'session_id_admin'
p3185
asbag54
(g75
g56
NtRp3186
(dp3187
g59
(dp3188
g86
g87
ssg68
g3177
sg61
(lp3189
S':'
asbag54
(g75
g56
NtRp3190
(dp3191
g59
(dp3192
sg68
g3177
sg61
(lp3193
g54
(g55
g56
NtRp3194
(dp3195
g59
(dp3196
g67
I4
ssg68
g3190
sg61
(lp3197
g54
(g63
g56
NtRp3198
(dp3199
g59
(dp3200
g67
I3
ssg68
Nsg61
(lp3201
g54
(g70
g56
NtRp3202
(dp3203
g59
(dp3204
sg68
g3198
sg61
(lp3205
g54
(g75
g56
NtRp3206
(dp3207
g59
(dp3208
g79
g80
ssg68
g3202
sg61
(lp3209
g281
asbag54
(g75
g56
NtRp3210
(dp3211
g59
(dp3212
g86
g87
ssg68
g3202
sg61
(lp3213
S':'
asbag54
(g75
g56
NtRp3214
(dp3215
g59
(dp3216
sg68
g3202
sg61
(lp3217
g54
(g55
g56
NtRp3218
(dp3219
g59
(dp3220
g67
I3
ssg68
g3214
sg61
(lp3221
S''
asbasbasbag54
(g70
g56
NtRp3222
(dp3223
g59
(dp3224
sg68
g3198
sg61
(lp3225
g54
(g75
g56
NtRp3226
(dp3227
g59
(dp3228
g79
g80
ssg68
g3222
sg61
(lp3229
g302
asbag54
(g75
g56
NtRp3230
(dp3231
g59
(dp3232
g86
g87
ssg68
g3222
sg61
(lp3233
S':'
asbag54
(g75
g56
NtRp3234
(dp3235
g59
(dp3236
sg68
g3222
sg61
(lp3237
g54
(g55
g56
NtRp3238
(dp3239
g59
(dp3240
g67
I3
ssg68
g3234
sg61
(lp3241
S''
asbasbasbag54
(g70
g56
NtRp3242
(dp3243
g59
(dp3244
sg68
g3198
sg61
(lp3245
g54
(g75
g56
NtRp3246
(dp3247
g59
(dp3248
g79
g80
ssg68
g3242
sg61
(lp3249
g323
asbag54
(g75
g56
NtRp3250
(dp3251
g59
(dp3252
g86
g87
ssg68
g3242
sg61
(lp3253
S':'
asbag54
(g75
g56
NtRp3254
(dp3255
g59
(dp3256
sg68
g3242
sg61
(lp3257
g54
(g55
g56
NtRp3258
(dp3259
g59
(dp3260
g67
I3
ssg68
g3254
sg61
(lp3261
S''
asbasbasbag54
(g70
g56
NtRp3262
(dp3263
g59
(dp3264
sg68
g3198
sg61
(lp3265
g54
(g75
g56
NtRp3266
(dp3267
g59
(dp3268
g79
g80
ssg68
g3262
sg61
(lp3269
g344
asbag54
(g75
g56
NtRp3270
(dp3271
g59
(dp3272
g86
g87
ssg68
g3262
sg61
(lp3273
S':'
asbag54
(g75
g56
NtRp3274
(dp3275
g59
(dp3276
sg68
g3262
sg61
(lp3277
g54
(g55
g56
NtRp3278
(dp3279
g59
(dp3280
g67
I3
ssg68
g3274
sg61
(lp3281
S''
asbasbasbag54
(g70
g56
NtRp3282
(dp3283
g59
(dp3284
sg68
g3198
sg61
(lp3285
g54
(g75
g56
NtRp3286
(dp3287
g59
(dp3288
g79
g80
ssg68
g3282
sg61
(lp3289
g365
asbag54
(g75
g56
NtRp3290
(dp3291
g59
(dp3292
g86
g87
ssg68
g3282
sg61
(lp3293
S':'
asbag54
(g75
g56
NtRp3294
(dp3295
g59
(dp3296
sg68
g3282
sg61
(lp3297
g54
(g55
g56
NtRp3298
(dp3299
g59
(dp3300
g67
I3
ssg68
g3294
sg61
(lp3301
S'/'
asbasbasbag54
(g70
g56
NtRp3302
(dp3303
g59
(dp3304
sg68
g3198
sg61
(lp3305
g54
(g75
g56
NtRp3306
(dp3307
g59
(dp3308
g79
g80
ssg68
g3302
sg61
(lp3309
g386
asbag54
(g75
g56
NtRp3310
(dp3311
g59
(dp3312
g86
g87
ssg68
g3302
sg61
(lp3313
S':'
asbag54
(g75
g56
NtRp3314
(dp3315
g59
(dp3316
sg68
g3302
sg61
(lp3317
g54
(g55
g56
NtRp3318
(dp3319
g59
(dp3320
g67
I3
ssg68
g3314
sg61
(lp3321
S''
asbasbasbag54
(g70
g56
NtRp3322
(dp3323
g59
(dp3324
sg68
g3198
sg61
(lp3325
g54
(g75
g56
NtRp3326
(dp3327
g59
(dp3328
g79
g80
ssg68
g3322
sg61
(lp3329
g407
asbag54
(g75
g56
NtRp3330
(dp3331
g59
(dp3332
g86
g87
ssg68
g3322
sg61
(lp3333
S':'
asbag54
(g75
g56
NtRp3334
(dp3335
g59
(dp3336
sg68
g3322
sg61
(lp3337
g54
(g55
g56
NtRp3338
(dp3339
g59
(dp3340
g67
I3
ssg68
g3334
sg61
(lp3341
S''
asbasbasbasbasbasbasbasbasbasbasbag54
(g70
g56
NtRp3342
(dp3343
g59
(dp3344
sg68
g3128
sg61
(lp3345
g54
(g75
g56
NtRp3346
(dp3347
g59
(dp3348
g79
g80
ssg68
g3342
sg61
(lp3349
S'delimiters'
p3350
asbag54
(g75
g56
NtRp3351
(dp3352
g59
(dp3353
g86
g87
ssg68
g3342
sg61
(lp3354
S':'
asbag54
(g75
g56
NtRp3355
(dp3356
g59
(dp3357
sg68
g3342
sg61
(lp3358
g54
(g55
g56
NtRp3359
(dp3360
g59
(dp3361
g67
I5
ssg68
g3355
sg61
(lp3362
g54
(g63
g56
NtRp3363
(dp3364
g59
(dp3365
g67
I4
ssg68
Nsg61
(lp3366
g54
(g70
g56
NtRp3367
(dp3368
g59
(dp3369
sg68
g3363
sg61
(lp3370
g54
(g75
g56
NtRp3371
(dp3372
g59
(dp3373
sg68
g3367
sg61
(lp3374
g54
(g55
g56
NtRp3375
(dp3376
g59
(dp3377
g67
I4
ssg68
g3371
sg61
(lp3378
S'{{'
p3379
asbasbasbag54
(g70
g56
NtRp3380
(dp3381
g59
(dp3382
sg68
g3363
sg61
(lp3383
g54
(g75
g56
NtRp3384
(dp3385
g59
(dp3386
sg68
g3380
sg61
(lp3387
g54
(g55
g56
NtRp3388
(dp3389
g59
(dp3390
g67
I4
ssg68
g3384
sg61
(lp3391
S'}}'
p3392
asbasbasbasbasbasbasbag54
(g70
g56
NtRp3393
(dp3394
g59
(dp3395
sg68
g3128
sg61
(lp3396
g54
(g75
g56
NtRp3397
(dp3398
g59
(dp3399
g79
g80
ssg68
g3393
sg61
(lp3400
S'files'
p3401
asbag54
(g75
g56
NtRp3402
(dp3403
g59
(dp3404
g86
g87
ssg68
g3393
sg61
(lp3405
S':'
asbag54
(g75
g56
NtRp3406
(dp3407
g59
(dp3408
sg68
g3393
sg61
(lp3409
g54
(g55
g56
NtRp3410
(dp3411
g59
(dp3412
g67
I5
ssg68
g3406
sg61
(lp3413
g54
(g63
g56
NtRp3414
(dp3415
g59
(dp3416
g67
I4
ssg68
Nsg61
(lp3417
g54
(g70
g56
NtRp3418
(dp3419
g59
(dp3420
sg68
g3414
sg61
(lp3421
g54
(g75
g56
NtRp3422
(dp3423
g59
(dp3424
sg68
g3418
sg61
(lp3425
g54
(g55
g56
NtRp3426
(dp3427
g59
(dp3428
g67
I4
ssg68
g3422
sg61
(lp3429
S'/admin/static/plugin_multiselect/jquery.dimensions.js'
p3430
asbasbasbag54
(g70
g56
NtRp3431
(dp3432
g59
(dp3433
sg68
g3414
sg61
(lp3434
g54
(g75
g56
NtRp3435
(dp3436
g59
(dp3437
sg68
g3431
sg61
(lp3438
g54
(g55
g56
NtRp3439
(dp3440
g59
(dp3441
g67
I4
ssg68
g3435
sg61
(lp3442
S'/admin/static/plugin_multiselect/jquery.multiselect.js'
p3443
asbasbasbag54
(g70
g56
NtRp3444
(dp3445
g59
(dp3446
sg68
g3414
sg61
(lp3447
g54
(g75
g56
NtRp3448
(dp3449
g59
(dp3450
sg68
g3444
sg61
(lp3451
g54
(g55
g56
NtRp3452
(dp3453
g59
(dp3454
g67
I4
ssg68
g3448
sg61
(lp3455
S'/admin/static/plugin_multiselect/jquery.multiselect.css'
p3456
asbasbasbag54
(g70
g56
NtRp3457
(dp3458
g59
(dp3459
sg68
g3414
sg61
(lp3460
g54
(g75
g56
NtRp3461
(dp3462
g59
(dp3463
sg68
g3457
sg61
(lp3464
g54
(g55
g56
NtRp3465
(dp3466
g59
(dp3467
g67
I4
ssg68
g3461
sg61
(lp3468
S'/admin/static/plugin_multiselect/start.js'
p3469
asbasbasbasbasbasbasbag54
(g70
g56
NtRp3470
(dp3471
g59
(dp3472
sg68
g3128
sg61
(lp3473
g54
(g75
g56
NtRp3474
(dp3475
g59
(dp3476
g79
g80
ssg68
g3470
sg61
(lp3477
S'flash'
p3478
asbag54
(g75
g56
NtRp3479
(dp3480
g59
(dp3481
g86
g87
ssg68
g3470
sg61
(lp3482
S':'
asbag54
(g75
g56
NtRp3483
(dp3484
g59
(dp3485
sg68
g3470
sg61
(lp3486
g54
(g55
g56
NtRp3487
(dp3488
g59
(dp3489
g67
I5
ssg68
g3483
sg61
(lp3490
S''
asbasbasbag54
(g70
g56
NtRp3491
(dp3492
g59
(dp3493
sg68
g3128
sg61
(lp3494
g54
(g75
g56
NtRp3495
(dp3496
g59
(dp3497
g79
g80
ssg68
g3491
sg61
(lp3498
S'generic_patterns'
p3499
asbag54
(g75
g56
NtRp3500
(dp3501
g59
(dp3502
g86
g87
ssg68
g3491
sg61
(lp3503
S':'
asbag54
(g75
g56
NtRp3504
(dp3505
g59
(dp3506
sg68
g3491
sg61
(lp3507
g54
(g55
g56
NtRp3508
(dp3509
g59
(dp3510
g67
I5
ssg68
g3504
sg61
(lp3511
g54
(g63
g56
NtRp3512
(dp3513
g59
(dp3514
g67
I4
ssg68
Nsg61
(lp3515
sbasbasbasbag54
(g70
g56
NtRp3516
(dp3517
g59
(dp3518
sg68
g3128
sg61
(lp3519
g54
(g75
g56
NtRp3520
(dp3521
g59
(dp3522
g79
g80
ssg68
g3516
sg61
(lp3523
S'headers'
p3524
asbag54
(g75
g56
NtRp3525
(dp3526
g59
(dp3527
g86
g87
ssg68
g3516
sg61
(lp3528
S':'
asbag54
(g75
g56
NtRp3529
(dp3530
g59
(dp3531
sg68
g3516
sg61
(lp3532
g54
(g55
g56
NtRp3533
(dp3534
g59
(dp3535
g67
I5
ssg68
g3529
sg61
(lp3536
g54
(g63
g56
NtRp3537
(dp3538
g59
(dp3539
g67
I4
ssg68
Nsg61
(lp3540
g54
(g70
g56
NtRp3541
(dp3542
g59
(dp3543
sg68
g3537
sg61
(lp3544
g54
(g75
g56
NtRp3545
(dp3546
g59
(dp3547
g79
g80
ssg68
g3541
sg61
(lp3548
S'Cache-Control'
p3549
asbag54
(g75
g56
NtRp3550
(dp3551
g59
(dp3552
g86
g87
ssg68
g3541
sg61
(lp3553
S':'
asbag54
(g75
g56
NtRp3554
(dp3555
g59
(dp3556
sg68
g3541
sg61
(lp3557
g54
(g55
g56
NtRp3558
(dp3559
g59
(dp3560
g67
I4
ssg68
g3554
sg61
(lp3561
S'no-store, no-cache, must-revalidate, post-check=0, pre-check=0'
p3562
asbasbasbag54
(g70
g56
NtRp3563
(dp3564
g59
(dp3565
sg68
g3537
sg61
(lp3566
g54
(g75
g56
NtRp3567
(dp3568
g59
(dp3569
g79
g80
ssg68
g3563
sg61
(lp3570
S'Content-Type'
p3571
asbag54
(g75
g56
NtRp3572
(dp3573
g59
(dp3574
g86
g87
ssg68
g3563
sg61
(lp3575
S':'
asbag54
(g75
g56
NtRp3576
(dp3577
g59
(dp3578
sg68
g3563
sg61
(lp3579
g54
(g55
g56
NtRp3580
(dp3581
g59
(dp3582
g67
I4
ssg68
g3576
sg61
(lp3583
S'text/html; charset=utf-8'
p3584
asbasbasbag54
(g70
g56
NtRp3585
(dp3586
g59
(dp3587
sg68
g3537
sg61
(lp3588
g54
(g75
g56
NtRp3589
(dp3590
g59
(dp3591
g79
g80
ssg68
g3585
sg61
(lp3592
S'Expires'
p3593
asbag54
(g75
g56
NtRp3594
(dp3595
g59
(dp3596
g86
g87
ssg68
g3585
sg61
(lp3597
S':'
asbag54
(g75
g56
NtRp3598
(dp3599
g59
(dp3600
sg68
g3585
sg61
(lp3601
g54
(g55
g56
NtRp3602
(dp3603
g59
(dp3604
g67
I4
ssg68
g3598
sg61
(lp3605
S'Tue, 13 Mar 2012 01:49:40 GMT'
p3606
asbasbasbag54
(g70
g56
NtRp3607
(dp3608
g59
(dp3609
sg68
g3537
sg61
(lp3610
g54
(g75
g56
NtRp3611
(dp3612
g59
(dp3613
g79
g80
ssg68
g3607
sg61
(lp3614
S'Pragma'
p3615
asbag54
(g75
g56
NtRp3616
(dp3617
g59
(dp3618
g86
g87
ssg68
g3607
sg61
(lp3619
S':'
asbag54
(g75
g56
NtRp3620
(dp3621
g59
(dp3622
sg68
g3607
sg61
(lp3623
g54
(g55
g56
NtRp3624
(dp3625
g59
(dp3626
g67
I4
ssg68
g3620
sg61
(lp3627
S'no-cache'
p3628
asbasbasbag54
(g70
g56
NtRp3629
(dp3630
g59
(dp3631
sg68
g3537
sg61
(lp3632
g54
(g75
g56
NtRp3633
(dp3634
g59
(dp3635
g79
g80
ssg68
g3629
sg61
(lp3636
S'X-Powered-By'
p3637
asbag54
(g75
g56
NtRp3638
(dp3639
g59
(dp3640
g86
g87
ssg68
g3629
sg61
(lp3641
S':'
asbag54
(g75
g56
NtRp3642
(dp3643
g59
(dp3644
sg68
g3629
sg61
(lp3645
g54
(g55
g56
NtRp3646
(dp3647
g59
(dp3648
g67
I4
ssg68
g3642
sg61
(lp3649
S'web2py'
p3650
asbasbasbasbasbasbasbag54
(g70
g56
NtRp3651
(dp3652
g59
(dp3653
sg68
g3128
sg61
(lp3654
g54
(g75
g56
NtRp3655
(dp3656
g59
(dp3657
g79
g80
ssg68
g3651
sg61
(lp3658
S'menu'
p3659
asbag54
(g75
g56
NtRp3660
(dp3661
g59
(dp3662
g86
g87
ssg68
g3651
sg61
(lp3663
S':'
asbag54
(g75
g56
NtRp3664
(dp3665
g59
(dp3666
sg68
g3651
sg61
(lp3667
g54
(g55
g56
NtRp3668
(dp3669
g59
(dp3670
g67
I5
ssg68
g3664
sg61
(lp3671
g54
(g63
g56
NtRp3672
(dp3673
g59
(dp3674
g67
I4
ssg68
Nsg61
(lp3675
g54
(g70
g56
NtRp3676
(dp3677
g59
(dp3678
sg68
g3672
sg61
(lp3679
g54
(g75
g56
NtRp3680
(dp3681
g59
(dp3682
sg68
g3676
sg61
(lp3683
g54
(g55
g56
NtRp3684
(dp3685
g59
(dp3686
g67
I4
ssg68
g3680
sg61
(lp3687
g54
(g63
g56
NtRp3688
(dp3689
g59
(dp3690
g67
I3
ssg68
Nsg61
(lp3691
g54
(g70
g56
NtRp3692
(dp3693
g59
(dp3694
sg68
g3688
sg61
(lp3695
g54
(g75
g56
NtRp3696
(dp3697
g59
(dp3698
sg68
g3692
sg61
(lp3699
g54
(g55
g56
NtRp3700
(dp3701
g59
(dp3702
g67
I3
ssg68
g3696
sg61
(lp3703
cgluon.languages
lazyT_unpickle
p3704
(S's\x04\x00\x00\x00Site'
tRp3705
asbasbasbag54
(g70
g56
NtRp3706
(dp3707
g59
(dp3708
sg68
g3688
sg61
(lp3709
g54
(g75
g56
NtRp3710
(dp3711
g59
(dp3712
sg68
g3706
sg61
(lp3713
g54
(g55
g56
NtRp3714
(dp3715
g59
(dp3716
g67
I3
ssg68
g3710
sg61
(lp3717
g1071
asbasbasbag54
(g70
g56
NtRp3718
(dp3719
g59
(dp3720
sg68
g3688
sg61
(lp3721
g54
(g75
g56
NtRp3722
(dp3723
g59
(dp3724
sg68
g3718
sg61
(lp3725
g54
(g55
g56
NtRp3726
(dp3727
g59
(dp3728
g67
I3
ssg68
g3722
sg61
(lp3729
S'/admin/default/site'
p3730
asbasbasbasbasbasbasbag54
(g70
g56
NtRp3731
(dp3732
g59
(dp3733
sg68
g3672
sg61
(lp3734
g54
(g75
g56
NtRp3735
(dp3736
g59
(dp3737
sg68
g3731
sg61
(lp3738
g54
(g55
g56
NtRp3739
(dp3740
g59
(dp3741
g67
I4
ssg68
g3735
sg61
(lp3742
g54
(g63
g56
NtRp3743
(dp3744
g59
(dp3745
g67
I3
ssg68
Nsg61
(lp3746
g54
(g70
g56
NtRp3747
(dp3748
g59
(dp3749
sg68
g3743
sg61
(lp3750
g54
(g75
g56
NtRp3751
(dp3752
g59
(dp3753
sg68
g3747
sg61
(lp3754
g54
(g55
g56
NtRp3755
(dp3756
g59
(dp3757
g67
I3
ssg68
g3751
sg61
(lp3758
g3704
(S's\x04\x00\x00\x00Edit'
tRp3759
asbasbasbag54
(g70
g56
NtRp3760
(dp3761
g59
(dp3762
sg68
g3743
sg61
(lp3763
g54
(g75
g56
NtRp3764
(dp3765
g59
(dp3766
sg68
g3760
sg61
(lp3767
g54
(g55
g56
NtRp3768
(dp3769
g59
(dp3770
g67
I3
ssg68
g3764
sg61
(lp3771
g1071
asbasbasbag54
(g70
g56
NtRp3772
(dp3773
g59
(dp3774
sg68
g3743
sg61
(lp3775
g54
(g75
g56
NtRp3776
(dp3777
g59
(dp3778
sg68
g3772
sg61
(lp3779
g54
(g55
g56
NtRp3780
(dp3781
g59
(dp3782
g67
I3
ssg68
g3776
sg61
(lp3783
S'/admin/default/design/README'
p3784
asbasbasbasbasbasbasbag54
(g70
g56
NtRp3785
(dp3786
g59
(dp3787
sg68
g3672
sg61
(lp3788
g54
(g75
g56
NtRp3789
(dp3790
g59
(dp3791
sg68
g3785
sg61
(lp3792
g54
(g55
g56
NtRp3793
(dp3794
g59
(dp3795
g67
I4
ssg68
g3789
sg61
(lp3796
g54
(g63
g56
NtRp3797
(dp3798
g59
(dp3799
g67
I3
ssg68
Nsg61
(lp3800
g54
(g70
g56
NtRp3801
(dp3802
g59
(dp3803
sg68
g3797
sg61
(lp3804
g54
(g75
g56
NtRp3805
(dp3806
g59
(dp3807
sg68
g3801
sg61
(lp3808
g54
(g55
g56
NtRp3809
(dp3810
g59
(dp3811
g67
I3
ssg68
g3805
sg61
(lp3812
g3704
(S's\x05\x00\x00\x00About'
tRp3813
asbasbasbag54
(g70
g56
NtRp3814
(dp3815
g59
(dp3816
sg68
g3797
sg61
(lp3817
g54
(g75
g56
NtRp3818
(dp3819
g59
(dp3820
sg68
g3814
sg61
(lp3821
g54
(g55
g56
NtRp3822
(dp3823
g59
(dp3824
g67
I3
ssg68
g3818
sg61
(lp3825
g1071
asbasbasbag54
(g70
g56
NtRp3826
(dp3827
g59
(dp3828
sg68
g3797
sg61
(lp3829
g54
(g75
g56
NtRp3830
(dp3831
g59
(dp3832
sg68
g3826
sg61
(lp3833
g54
(g55
g56
NtRp3834
(dp3835
g59
(dp3836
g67
I3
ssg68
g3830
sg61
(lp3837
S'/admin/default/about/README'
p3838
asbasbasbasbasbasbasbag54
(g70
g56
NtRp3839
(dp3840
g59
(dp3841
sg68
g3672
sg61
(lp3842
g54
(g75
g56
NtRp3843
(dp3844
g59
(dp3845
sg68
g3839
sg61
(lp3846
g54
(g55
g56
NtRp3847
(dp3848
g59
(dp3849
g67
I4
ssg68
g3843
sg61
(lp3850
g54
(g63
g56
NtRp3851
(dp3852
g59
(dp3853
g67
I3
ssg68
Nsg61
(lp3854
g54
(g70
g56
NtRp3855
(dp3856
g59
(dp3857
sg68
g3851
sg61
(lp3858
g54
(g75
g56
NtRp3859
(dp3860
g59
(dp3861
sg68
g3855
sg61
(lp3862
g54
(g55
g56
NtRp3863
(dp3864
g59
(dp3865
g67
I3
ssg68
g3859
sg61
(lp3866
g3704
(S's\x06\x00\x00\x00Errors'
tRp3867
asbasbasbag54
(g70
g56
NtRp3868
(dp3869
g59
(dp3870
sg68
g3851
sg61
(lp3871
g54
(g75
g56
NtRp3872
(dp3873
g59
(dp3874
sg68
g3868
sg61
(lp3875
g54
(g55
g56
NtRp3876
(dp3877
g59
(dp3878
g67
I3
ssg68
g3872
sg61
(lp3879
g1071
asbasbasbag54
(g70
g56
NtRp3880
(dp3881
g59
(dp3882
sg68
g3851
sg61
(lp3883
g54
(g75
g56
NtRp3884
(dp3885
g59
(dp3886
sg68
g3880
sg61
(lp3887
g54
(g55
g56
NtRp3888
(dp3889
g59
(dp3890
g67
I3
ssg68
g3884
sg61
(lp3891
S'/admin/default/errors/README'
p3892
asbasbasbasbasbasbasbag54
(g70
g56
NtRp3893
(dp3894
g59
(dp3895
sg68
g3672
sg61
(lp3896
g54
(g75
g56
NtRp3897
(dp3898
g59
(dp3899
sg68
g3893
sg61
(lp3900
g54
(g55
g56
NtRp3901
(dp3902
g59
(dp3903
g67
I4
ssg68
g3897
sg61
(lp3904
g54
(g63
g56
NtRp3905
(dp3906
g59
(dp3907
g67
I3
ssg68
Nsg61
(lp3908
g54
(g70
g56
NtRp3909
(dp3910
g59
(dp3911
sg68
g3905
sg61
(lp3912
g54
(g75
g56
NtRp3913
(dp3914
g59
(dp3915
sg68
g3909
sg61
(lp3916
g54
(g55
g56
NtRp3917
(dp3918
g59
(dp3919
g67
I3
ssg68
g3913
sg61
(lp3920
g3704
(S's\n\x00\x00\x00Versioning'
tRp3921
asbasbasbag54
(g70
g56
NtRp3922
(dp3923
g59
(dp3924
sg68
g3905
sg61
(lp3925
g54
(g75
g56
NtRp3926
(dp3927
g59
(dp3928
sg68
g3922
sg61
(lp3929
g54
(g55
g56
NtRp3930
(dp3931
g59
(dp3932
g67
I3
ssg68
g3926
sg61
(lp3933
g1071
asbasbasbag54
(g70
g56
NtRp3934
(dp3935
g59
(dp3936
sg68
g3905
sg61
(lp3937
g54
(g75
g56
NtRp3938
(dp3939
g59
(dp3940
sg68
g3934
sg61
(lp3941
g54
(g55
g56
NtRp3942
(dp3943
g59
(dp3944
g67
I3
ssg68
g3938
sg61
(lp3945
S'/admin/mercurial/commit/README'
p3946
asbasbasbasbasbasbasbag54
(g70
g56
NtRp3947
(dp3948
g59
(dp3949
sg68
g3672
sg61
(lp3950
g54
(g75
g56
NtRp3951
(dp3952
g59
(dp3953
sg68
g3947
sg61
(lp3954
g54
(g55
g56
NtRp3955
(dp3956
g59
(dp3957
g67
I4
ssg68
g3951
sg61
(lp3958
g54
(g63
g56
NtRp3959
(dp3960
g59
(dp3961
g67
I3
ssg68
Nsg61
(lp3962
g54
(g70
g56
NtRp3963
(dp3964
g59
(dp3965
sg68
g3959
sg61
(lp3966
g54
(g75
g56
NtRp3967
(dp3968
g59
(dp3969
sg68
g3963
sg61
(lp3970
g54
(g55
g56
NtRp3971
(dp3972
g59
(dp3973
g67
I3
ssg68
g3967
sg61
(lp3974
g3704
(S's\x06\x00\x00\x00Logout'
tRp3975
asbasbasbag54
(g70
g56
NtRp3976
(dp3977
g59
(dp3978
sg68
g3959
sg61
(lp3979
g54
(g75
g56
NtRp3980
(dp3981
g59
(dp3982
sg68
g3976
sg61
(lp3983
g54
(g55
g56
NtRp3984
(dp3985
g59
(dp3986
g67
I3
ssg68
g3980
sg61
(lp3987
g1071
asbasbasbag54
(g70
g56
NtRp3988
(dp3989
g59
(dp3990
sg68
g3959
sg61
(lp3991
g54
(g75
g56
NtRp3992
(dp3993
g59
(dp3994
sg68
g3988
sg61
(lp3995
g54
(g55
g56
NtRp3996
(dp3997
g59
(dp3998
g67
I3
ssg68
g3992
sg61
(lp3999
S'/admin/default/logout'
p4000
asbasbasbasbasbasbasbag54
(g70
g56
NtRp4001
(dp4002
g59
(dp4003
sg68
g3672
sg61
(lp4004
g54
(g75
g56
NtRp4005
(dp4006
g59
(dp4007
sg68
g4001
sg61
(lp4008
g54
(g55
g56
NtRp4009
(dp4010
g59
(dp4011
g67
I4
ssg68
g4005
sg61
(lp4012
g54
(g63
g56
NtRp4013
(dp4014
g59
(dp4015
g67
I3
ssg68
Nsg61
(lp4016
g54
(g70
g56
NtRp4017
(dp4018
g59
(dp4019
sg68
g4013
sg61
(lp4020
g54
(g75
g56
NtRp4021
(dp4022
g59
(dp4023
sg68
g4017
sg61
(lp4024
g54
(g55
g56
NtRp4025
(dp4026
g59
(dp4027
g67
I3
ssg68
g4021
sg61
(lp4028
g3704
(S's\x05\x00\x00\x00Debug'
tRp4029
asbasbasbag54
(g70
g56
NtRp4030
(dp4031
g59
(dp4032
sg68
g4013
sg61
(lp4033
g54
(g75
g56
NtRp4034
(dp4035
g59
(dp4036
sg68
g4030
sg61
(lp4037
g54
(g55
g56
NtRp4038
(dp4039
g59
(dp4040
g67
I3
ssg68
g4034
sg61
(lp4041
g1071
asbasbasbag54
(g70
g56
NtRp4042
(dp4043
g59
(dp4044
sg68
g4013
sg61
(lp4045
g54
(g75
g56
NtRp4046
(dp4047
g59
(dp4048
sg68
g4042
sg61
(lp4049
g54
(g55
g56
NtRp4050
(dp4051
g59
(dp4052
g67
I3
ssg68
g4046
sg61
(lp4053
S'/admin/debug/interact'
p4054
asbasbasbasbasbasbasbag54
(g70
g56
NtRp4055
(dp4056
g59
(dp4057
sg68
g3672
sg61
(lp4058
g54
(g75
g56
NtRp4059
(dp4060
g59
(dp4061
sg68
g4055
sg61
(lp4062
g54
(g55
g56
NtRp4063
(dp4064
g59
(dp4065
g67
I4
ssg68
g4059
sg61
(lp4066
g54
(g63
g56
NtRp4067
(dp4068
g59
(dp4069
g67
I3
ssg68
Nsg61
(lp4070
g54
(g70
g56
NtRp4071
(dp4072
g59
(dp4073
sg68
g4067
sg61
(lp4074
g54
(g75
g56
NtRp4075
(dp4076
g59
(dp4077
sg68
g4071
sg61
(lp4078
g54
(g55
g56
NtRp4079
(dp4080
g59
(dp4081
g67
I3
ssg68
g4075
sg61
(lp4082
g3704
(S's\x04\x00\x00\x00Help'
tRp4083
asbasbasbag54
(g70
g56
NtRp4084
(dp4085
g59
(dp4086
sg68
g4067
sg61
(lp4087
g54
(g75
g56
NtRp4088
(dp4089
g59
(dp4090
sg68
g4084
sg61
(lp4091
g54
(g55
g56
NtRp4092
(dp4093
g59
(dp4094
g67
I3
ssg68
g4088
sg61
(lp4095
g1071
asbasbasbag54
(g70
g56
NtRp4096
(dp4097
g59
(dp4098
sg68
g4067
sg61
(lp4099
g54
(g75
g56
NtRp4100
(dp4101
g59
(dp4102
sg68
g4096
sg61
(lp4103
g54
(g55
g56
NtRp4104
(dp4105
g59
(dp4106
g67
I3
ssg68
g4100
sg61
(lp4107
S'http://web2py.com/examples'
p4108
asbasbasbasbasbasbasbasbasbasbasbag54
(g70
g56
NtRp4109
(dp4110
g59
(dp4111
sg68
g3128
sg61
(lp4112
g54
(g75
g56
NtRp4113
(dp4114
g59
(dp4115
g79
g80
ssg68
g4109
sg61
(lp4116
S'meta'
p4117
asbag54
(g75
g56
NtRp4118
(dp4119
g59
(dp4120
g86
g87
ssg68
g4109
sg61
(lp4121
S':'
asbag54
(g75
g56
NtRp4122
(dp4123
g59
(dp4124
sg68
g4109
sg61
(lp4125
g54
(g55
g56
NtRp4126
(dp4127
g59
(dp4128
g67
I5
ssg68
g4122
sg61
(lp4129
g54
(g63
g56
NtRp4130
(dp4131
g59
(dp4132
g67
I4
ssg68
Nsg61
(lp4133
sbasbasbasbag54
(g70
g56
NtRp4134
(dp4135
g59
(dp4136
sg68
g3128
sg61
(lp4137
g54
(g75
g56
NtRp4138
(dp4139
g59
(dp4140
g79
g80
ssg68
g4134
sg61
(lp4141
S'postprocessing'
p4142
asbag54
(g75
g56
NtRp4143
(dp4144
g59
(dp4145
g86
g87
ssg68
g4134
sg61
(lp4146
S':'
asbag54
(g75
g56
NtRp4147
(dp4148
g59
(dp4149
sg68
g4134
sg61
(lp4150
g54
(g55
g56
NtRp4151
(dp4152
g59
(dp4153
g67
I5
ssg68
g4147
sg61
(lp4154
g54
(g63
g56
NtRp4155
(dp4156
g59
(dp4157
g67
I4
ssg68
Nsg61
(lp4158
sbasbasbasbag54
(g70
g56
NtRp4159
(dp4160
g59
(dp4161
sg68
g3128
sg61
(lp4162
g54
(g75
g56
NtRp4163
(dp4164
g59
(dp4165
g79
g80
ssg68
g4159
sg61
(lp4166
S'session_file'
p4167
asbag54
(g75
g56
NtRp4168
(dp4169
g59
(dp4170
g86
g87
ssg68
g4159
sg61
(lp4171
S':'
asbag54
(g75
g56
NtRp4172
(dp4173
g59
(dp4174
sg68
g4159
sg61
(lp4175
g54
(g55
g56
NtRp4176
(dp4177
g59
(dp4178
g67
I5
ssg68
g4172
sg61
(lp4179
S"<open file 'C:\\Users\\Bussiere\\Dropbox\\Projets\\jackpoint\\web2py\\applications\\admin\\sessions\\127.0.0.1-39f0a94b-773e-4424-b240-8c1ea9c1ed01', mode 'rb+' at 0x03DCFBA8>"
p4180
asbasbasbag54
(g70
g56
NtRp4181
(dp4182
g59
(dp4183
sg68
g3128
sg61
(lp4184
g54
(g75
g56
NtRp4185
(dp4186
g59
(dp4187
g79
g80
ssg68
g4181
sg61
(lp4188
S'session_filename'
p4189
asbag54
(g75
g56
NtRp4190
(dp4191
g59
(dp4192
g86
g87
ssg68
g4181
sg61
(lp4193
S':'
asbag54
(g75
g56
NtRp4194
(dp4195
g59
(dp4196
sg68
g4181
sg61
(lp4197
g54
(g55
g56
NtRp4198
(dp4199
g59
(dp4200
g67
I5
ssg68
g4194
sg61
(lp4201
S'C:\\Users\\Bussiere\\Dropbox\\Projets\\jackpoint\\web2py\\applications\\admin\\sessions\\127.0.0.1-39f0a94b-773e-4424-b240-8c1ea9c1ed01'
p4202
asbasbasbag54
(g70
g56
NtRp4203
(dp4204
g59
(dp4205
sg68
g3128
sg61
(lp4206
g54
(g75
g56
NtRp4207
(dp4208
g59
(dp4209
g79
g80
ssg68
g4203
sg61
(lp4210
S'session_id'
p4211
asbag54
(g75
g56
NtRp4212
(dp4213
g59
(dp4214
g86
g87
ssg68
g4203
sg61
(lp4215
S':'
asbag54
(g75
g56
NtRp4216
(dp4217
g59
(dp4218
sg68
g4203
sg61
(lp4219
g54
(g55
g56
NtRp4220
(dp4221
g59
(dp4222
g67
I5
ssg68
g4216
sg61
(lp4223
S'127.0.0.1-39f0a94b-773e-4424-b240-8c1ea9c1ed01'
p4224
asbasbasbag54
(g70
g56
NtRp4225
(dp4226
g59
(dp4227
sg68
g3128
sg61
(lp4228
g54
(g75
g56
NtRp4229
(dp4230
g59
(dp4231
g79
g80
ssg68
g4225
sg61
(lp4232
S'session_id_name'
p4233
asbag54
(g75
g56
NtRp4234
(dp4235
g59
(dp4236
g86
g87
ssg68
g4225
sg61
(lp4237
S':'
asbag54
(g75
g56
NtRp4238
(dp4239
g59
(dp4240
sg68
g4225
sg61
(lp4241
g54
(g55
g56
NtRp4242
(dp4243
g59
(dp4244
g67
I5
ssg68
g4238
sg61
(lp4245
g3185
asbasbasbag54
(g70
g56
NtRp4246
(dp4247
g59
(dp4248
sg68
g3128
sg61
(lp4249
g54
(g75
g56
NtRp4250
(dp4251
g59
(dp4252
g79
g80
ssg68
g4246
sg61
(lp4253
S'session_locked'
p4254
asbag54
(g75
g56
NtRp4255
(dp4256
g59
(dp4257
g86
g87
ssg68
g4246
sg61
(lp4258
S':'
asbag54
(g75
g56
NtRp4259
(dp4260
g59
(dp4261
sg68
g4246
sg61
(lp4262
g54
(g55
g56
NtRp4263
(dp4264
g59
(dp4265
g67
I5
ssg68
g4259
sg61
(lp4266
g97
asbasbasbag54
(g70
g56
NtRp4267
(dp4268
g59
(dp4269
sg68
g3128
sg61
(lp4270
g54
(g75
g56
NtRp4271
(dp4272
g59
(dp4273
g79
g80
ssg68
g4267
sg61
(lp4274
S'session_new'
p4275
asbag54
(g75
g56
NtRp4276
(dp4277
g59
(dp4278
g86
g87
ssg68
g4267
sg61
(lp4279
S':'
asbag54
(g75
g56
NtRp4280
(dp4281
g59
(dp4282
sg68
g4267
sg61
(lp4283
g54
(g55
g56
NtRp4284
(dp4285
g59
(dp4286
g67
I5
ssg68
g4280
sg61
(lp4287
g1071
asbasbasbag54
(g70
g56
NtRp4288
(dp4289
g59
(dp4290
sg68
g3128
sg61
(lp4291
g54
(g75
g56
NtRp4292
(dp4293
g59
(dp4294
g79
g80
ssg68
g4288
sg61
(lp4295
S'status'
p4296
asbag54
(g75
g56
NtRp4297
(dp4298
g59
(dp4299
g86
g87
ssg68
g4288
sg61
(lp4300
S':'
asbag54
(g75
g56
NtRp4301
(dp4302
g59
(dp4303
sg68
g4288
sg61
(lp4304
g54
(g55
g56
NtRp4305
(dp4306
g59
(dp4307
g67
I5
ssg68
g4301
sg61
(lp4308
S'200'
p4309
asbasbasbag54
(g70
g56
NtRp4310
(dp4311
g59
(dp4312
sg68
g3128
sg61
(lp4313
g54
(g75
g56
NtRp4314
(dp4315
g59
(dp4316
g79
g80
ssg68
g4310
sg61
(lp4317
S'subtitle'
p4318
asbag54
(g75
g56
NtRp4319
(dp4320
g59
(dp4321
g86
g87
ssg68
g4310
sg61
(lp4322
S':'
asbag54
(g75
g56
NtRp4323
(dp4324
g59
(dp4325
sg68
g4310
sg61
(lp4326
g54
(g55
g56
NtRp4327
(dp4328
g59
(dp4329
g67
I5
ssg68
g4323
sg61
(lp4330
S'admin'
p4331
asbasbasbag54
(g70
g56
NtRp4332
(dp4333
g59
(dp4334
sg68
g3128
sg61
(lp4335
g54
(g75
g56
NtRp4336
(dp4337
g59
(dp4338
g79
g80
ssg68
g4332
sg61
(lp4339
S'title'
p4340
asbag54
(g75
g56
NtRp4341
(dp4342
g59
(dp4343
g86
g87
ssg68
g4332
sg61
(lp4344
S':'
asbag54
(g75
g56
NtRp4345
(dp4346
g59
(dp4347
sg68
g4332
sg61
(lp4348
g54
(g55
g56
NtRp4349
(dp4350
g59
(dp4351
g67
I5
ssg68
g4345
sg61
(lp4352
S'enable README'
p4353
asbasbasbag54
(g70
g56
NtRp4354
(dp4355
g59
(dp4356
sg68
g3128
sg61
(lp4357
g54
(g75
g56
NtRp4358
(dp4359
g59
(dp4360
g79
g80
ssg68
g4354
sg61
(lp4361
g2234
asbag54
(g75
g56
NtRp4362
(dp4363
g59
(dp4364
g86
g87
ssg68
g4354
sg61
(lp4365
S':'
asbag54
(g75
g56
NtRp4366
(dp4367
g59
(dp4368
sg68
g4354
sg61
(lp4369
g54
(g55
g56
NtRp4370
(dp4371
g59
(dp4372
g67
I5
ssg68
g4366
sg61
(lp4373
g2247
asbasbasbag54
(g70
g56
NtRp4374
(dp4375
g59
(dp4376
sg68
g3128
sg61
(lp4377
g54
(g75
g56
NtRp4378
(dp4379
g59
(dp4380
g79
g80
ssg68
g4374
sg61
(lp4381
S'view'
p4382
asbag54
(g75
g56
NtRp4383
(dp4384
g59
(dp4385
g86
g87
ssg68
g4374
sg61
(lp4386
S':'
asbag54
(g75
g56
NtRp4387
(dp4388
g59
(dp4389
sg68
g4374
sg61
(lp4390
g54
(g55
g56
NtRp4391
(dp4392
g59
(dp4393
g67
I5
ssg68
g4387
sg61
(lp4394
S'default/enable.html'
p4395
asbasbasbasbasbsS'locals'
p4396
(dp4397
S'app'
p4398
S"'README'"
p4399
sg34
S"r'C:/Users/Bussiere/Dropbox/Projets/jackpoint/web2py/applications/README\\DISABLED'"
p4400
sssS'traceback'
p4401
S'Traceback (most recent call last):\n  File "gluon/restricted.py", line 205, in restricted\n  File "C:\\Users\\Bussiere\\Dropbox\\Projets\\jackpoint\\web2py\\applications\\admin\\controllers/default.py", line 1352, in <module>\n  File "gluon/globals.py", line 173, in <lambda>\n  File "C:\\Users\\Bussiere\\Dropbox\\Projets\\jackpoint\\web2py\\applications\\admin\\controllers/default.py", line 344, in enable\nIOError: [Errno 2] No such file or directory: \'C:/Users/Bussiere/Dropbox/Projets/jackpoint/web2py/applications/README\\\\DISABLED\'\n'
p4402
s.